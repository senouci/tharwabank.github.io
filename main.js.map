{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Classes/Account.ts","webpack:///./src/app/Classes/Bank.ts","webpack:///./src/app/Classes/Banker.ts","webpack:///./src/app/Classes/ErrorHandling.ts","webpack:///./src/app/Classes/InputValidation.ts","webpack:///./src/app/Classes/Manager.ts","webpack:///./src/app/Classes/Notif.ts","webpack:///./src/app/Classes/Operation.ts","webpack:///./src/app/Classes/OrderTransfer.ts","webpack:///./src/app/Classes/Stat.ts","webpack:///./src/app/Classes/Transfer.ts","webpack:///./src/app/Classes/user.ts","webpack:///./src/app/Services/account-list.service.ts","webpack:///./src/app/Services/add-bank.service.ts","webpack:///./src/app/Services/add-banker.service.ts","webpack:///./src/app/Services/auth-guard.service.ts","webpack:///./src/app/Services/authorisation.service.ts","webpack:///./src/app/Services/banker.service.ts","webpack:///./src/app/Services/bankers-list.service.ts","webpack:///./src/app/Services/banks-list.service.ts","webpack:///./src/app/Services/block-account.service.ts","webpack:///./src/app/Services/change-password.service.ts","webpack:///./src/app/Services/commissions-list.service.ts","webpack:///./src/app/Services/delete-bank.service.ts","webpack:///./src/app/Services/delete-banker.service.ts","webpack:///./src/app/Services/edit-bank.service.ts","webpack:///./src/app/Services/edit-profile.service.ts","webpack:///./src/app/Services/extern-transfers-list.service.ts","webpack:///./src/app/Services/login.service.ts","webpack:///./src/app/Services/logout.service.ts","webpack:///./src/app/Services/manager-profile.service.ts","webpack:///./src/app/Services/manager.service.ts","webpack:///./src/app/Services/request-handler.service.ts","webpack:///./src/app/Services/request-interceptor.service.ts","webpack:///./src/app/Services/transfers-list.service.ts","webpack:///./src/app/Services/unvalid-accounts.service.ts","webpack:///./src/app/Services/validate-account.service.ts","webpack:///./src/app/Services/validate-transfer.service.ts","webpack:///./src/app/Tharwa-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/banker/accounts/accountDialog.css","webpack:///./src/app/components/banker/accounts/accountDialog.html","webpack:///./src/app/components/banker/accounts/accounts.component.css","webpack:///./src/app/components/banker/accounts/accounts.component.html","webpack:///./src/app/components/banker/accounts/accounts.component.ts","webpack:///./src/app/components/banker/banker-home/accounts-panel/accounts-panel.component.css","webpack:///./src/app/components/banker/banker-home/accounts-panel/accounts-panel.component.html","webpack:///./src/app/components/banker/banker-home/accounts-panel/accounts-panel.component.ts","webpack:///./src/app/components/banker/banker-home/banker-home.component.css","webpack:///./src/app/components/banker/banker-home/banker-home.component.html","webpack:///./src/app/components/banker/banker-home/banker-home.component.ts","webpack:///./src/app/components/banker/banker-home/notif-card/notif-card.component.css","webpack:///./src/app/components/banker/banker-home/notif-card/notif-card.component.html","webpack:///./src/app/components/banker/banker-home/notif-card/notif-card.component.ts","webpack:///./src/app/components/banker/banker-home/transferss-panel/transferss-panel.component.css","webpack:///./src/app/components/banker/banker-home/transferss-panel/transferss-panel.component.html","webpack:///./src/app/components/banker/banker-home/transferss-panel/transferss-panel.component.ts","webpack:///./src/app/components/banker/banker.component.css","webpack:///./src/app/components/banker/banker.component.html","webpack:///./src/app/components/banker/banker.component.ts","webpack:///./src/app/components/banker/bankerProfile/bankerProfile.component.css","webpack:///./src/app/components/banker/bankerProfile/bankerProfile.component.html","webpack:///./src/app/components/banker/bankerProfile/bankerProfile.component.ts","webpack:///./src/app/components/banker/bankerProfile/editBankerProfile.css","webpack:///./src/app/components/banker/bankerProfile/editBankerProfile.html","webpack:///./src/app/components/banker/bankerProfile/passwordBanker.css","webpack:///./src/app/components/banker/bankerProfile/passwordBanker.html","webpack:///./src/app/components/banker/bankersRoutes.ts","webpack:///./src/app/components/banker/blocking/blockDialog.css","webpack:///./src/app/components/banker/blocking/blockDialog.html","webpack:///./src/app/components/banker/blocking/blocking.component.css","webpack:///./src/app/components/banker/blocking/blocking.component.html","webpack:///./src/app/components/banker/blocking/blocking.component.ts","webpack:///./src/app/components/banker/blocking/deblockDialog.css","webpack:///./src/app/components/banker/blocking/deblockDialog.html","webpack:///./src/app/components/banker/logout.css","webpack:///./src/app/components/banker/logout.html","webpack:///./src/app/components/banker/transfer-extern/transfer-extern.component.css","webpack:///./src/app/components/banker/transfer-extern/transfer-extern.component.html","webpack:///./src/app/components/banker/transfer-extern/transfer-extern.component.ts","webpack:///./src/app/components/banker/transfer-order/justifOrderDialog.css","webpack:///./src/app/components/banker/transfer-order/justifOrderDialog.html","webpack:///./src/app/components/banker/transfer-order/transfer-order.component.css","webpack:///./src/app/components/banker/transfer-order/transfer-order.component.html","webpack:///./src/app/components/banker/transfer-order/transfer-order.component.ts","webpack:///./src/app/components/banker/transfer/justifDialog.css","webpack:///./src/app/components/banker/transfer/justifDialog.html","webpack:///./src/app/components/banker/transfer/transfer.component.css","webpack:///./src/app/components/banker/transfer/transfer.component.html","webpack:///./src/app/components/banker/transfer/transfer.component.ts","webpack:///./src/app/components/components.component.css","webpack:///./src/app/components/components.component.html","webpack:///./src/app/components/components.component.ts","webpack:///./src/app/components/empty-table/empty-table.component.css","webpack:///./src/app/components/empty-table/empty-table.component.html","webpack:///./src/app/components/empty-table/empty-table.component.ts","webpack:///./src/app/components/home/chooseCodeDialog.css","webpack:///./src/app/components/home/chooseCodeDialog.html","webpack:///./src/app/components/home/codeDialog.css","webpack:///./src/app/components/home/codeDialog.html","webpack:///./src/app/components/home/login.component.css","webpack:///./src/app/components/home/login.component.html","webpack:///./src/app/components/home/login.component.ts","webpack:///./src/app/components/manager/ManagerRoutes.ts","webpack:///./src/app/components/manager/bankers-list/addBankerDialog.css","webpack:///./src/app/components/manager/bankers-list/addBankerDialog.html","webpack:///./src/app/components/manager/bankers-list/bankers-list.component.css","webpack:///./src/app/components/manager/bankers-list/bankers-list.component.html","webpack:///./src/app/components/manager/bankers-list/bankers-list.component.ts","webpack:///./src/app/components/manager/bankers-list/deleteBankerDialog.css","webpack:///./src/app/components/manager/bankers-list/deleteBankerDialog.html","webpack:///./src/app/components/manager/banks/addBankDialog.css","webpack:///./src/app/components/manager/banks/addBankDialog.html","webpack:///./src/app/components/manager/banks/banks.component.css","webpack:///./src/app/components/manager/banks/banks.component.html","webpack:///./src/app/components/manager/banks/banks.component.ts","webpack:///./src/app/components/manager/banks/deleteBankDialog.css","webpack:///./src/app/components/manager/banks/deleteBankDialog.html","webpack:///./src/app/components/manager/banks/editBankDialog.css","webpack:///./src/app/components/manager/banks/editBankDialog.html","webpack:///./src/app/components/manager/commissions/commissions.component.css","webpack:///./src/app/components/manager/commissions/commissions.component.html","webpack:///./src/app/components/manager/commissions/commissions.component.ts","webpack:///./src/app/components/manager/logout.css","webpack:///./src/app/components/manager/logout.html","webpack:///./src/app/components/manager/manager-home/manager-home.component.css","webpack:///./src/app/components/manager/manager-home/manager-home.component.html","webpack:///./src/app/components/manager/manager-home/manager-home.component.ts","webpack:///./src/app/components/manager/manager-home/operations/operation-card/operation-card.component.css","webpack:///./src/app/components/manager/manager-home/operations/operation-card/operation-card.component.html","webpack:///./src/app/components/manager/manager-home/operations/operation-card/operation-card.component.ts","webpack:///./src/app/components/manager/manager-home/operations/operations.component.css","webpack:///./src/app/components/manager/manager-home/operations/operations.component.html","webpack:///./src/app/components/manager/manager-home/operations/operations.component.ts","webpack:///./src/app/components/manager/manager-home/stat-commissions/manager-notif/manager-notif.component.css","webpack:///./src/app/components/manager/manager-home/stat-commissions/manager-notif/manager-notif.component.html","webpack:///./src/app/components/manager/manager-home/stat-commissions/manager-notif/manager-notif.component.ts","webpack:///./src/app/components/manager/manager-home/stat-commissions/stat-commissions.component.css","webpack:///./src/app/components/manager/manager-home/stat-commissions/stat-commissions.component.html","webpack:///./src/app/components/manager/manager-home/stat-commissions/stat-commissions.component.ts","webpack:///./src/app/components/manager/manager.component.css","webpack:///./src/app/components/manager/manager.component.html","webpack:///./src/app/components/manager/manager.component.ts","webpack:///./src/app/components/manager/managerProfile/editManagerProfile.css","webpack:///./src/app/components/manager/managerProfile/editManagerProfile.html","webpack:///./src/app/components/manager/managerProfile/managerProfile.component.css","webpack:///./src/app/components/manager/managerProfile/managerProfile.component.html","webpack:///./src/app/components/manager/managerProfile/managerProfile.component.ts","webpack:///./src/app/components/manager/managerProfile/passwordManager.css","webpack:///./src/app/components/manager/managerProfile/passwordManager.html","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Account {\r\n    constructor(\r\n        public id: number,\r\n        public name: string,\r\n        public email: string,\r\n        public fonction: string,\r\n        public phone_number: string,\r\n        public address: string,\r\n        public type: string|number,\r\n        public status: string|number,\r\n        public currency_code: string,\r\n        public profile: string,\r\n        public balance: string, \r\n        public created_at: string,\r\n        public code: string\r\n      ) {\r\n       }\r\n}","export class Bank {\r\n    constructor(\r\n        public id: string,\r\n        public name: string,\r\n        public social_reason: string,\r\n        public address: string,\r\n        public email: string\r\n      ) {\r\n       }\r\n}\r\n","import { User } from './user';\r\n\r\nexport class Banker extends User {\r\n    constructor(\r\n        public id: number,\r\n        public name: string,\r\n        public firstname: string,\r\n        public address: string,\r\n        public email: string,\r\n        public phone_number: string,\r\n        public photo: string\r\n      ) {\r\n          super(id, name,firstname, photo);\r\n       }\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\nexport class ErrorHandling {\r\n    constructor(\r\n        public errorMsg: MatSnackBar) {\r\n        }\r\n    public handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            this.showErrorMsg('Not known error', '###');\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            if ( error.status === 0) {\r\n                this.showErrorMsg('network problem', '0');\r\n            } else if ( error.status === 400) {\r\n                this.showErrorMsg('invalid data', '400');\r\n            } else if ( error.status === 401) {\r\n                this.showErrorMsg('authentification failed', '401');\r\n            } else if ( error.status === 403) {\r\n                this.showErrorMsg('authorization failed', '403');\r\n            } else if ( error.status === 404) {\r\n                this.showErrorMsg('Not Found', '404');\r\n            } else if ( error.status === 406) {\r\n                this.showErrorMsg('Partial Content', '206');\r\n            } else {\r\n              this.showErrorMsg('unknown error', error.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    showErrorMsg(message: string, status) {\r\n        this.errorMsg.open(message, status, {\r\n            duration: 5000,\r\n        });\r\n    }\r\n}\r\n","import { ErrorStateMatcher } from '@angular/material';\r\nimport { FormGroupDirective, FormControl, NgForm } from '@angular/forms';\r\n\r\nexport class InputValidation implements ErrorStateMatcher {\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n      const isSubmitted = form && form.submitted;\r\n      return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    }\r\n  }\r\n","import { User } from './user';\r\n\r\nexport class Manager extends User {\r\n    constructor(\r\n        public id: number,\r\n        public name: string,\r\n        public firstname: string,\r\n        public email: string,\r\n        public photo: string,\r\n        public phone_number: string,\r\n        public address: string\r\n      ) {\r\n          super(id, name,firstname, photo);\r\n        }\r\n}\r\n","export class Notif {\r\n    constructor(\r\n        public nbr: number,\r\n        public text: string,\r\n        public color: string\r\n      ) {\r\n       }\r\n}","export class Operation {\r\n    constructor(\r\n        public val1: number,\r\n        public val2: number,\r\n        public text: string,\r\n        public color: string,\r\n        public icon: string\r\n      ) {\r\n       }\r\n}","export class OrderTransfer {\r\n  constructor(\r\n    public id: number,\r\n    public employer_code: string,\r\n    public employer_name: string,\r\n    public date: string,\r\n    public nbr: number\r\n  ) {\r\n  }\r\n}\r\n","export class Stat {\r\n    constructor(\r\n        public amount: number,\r\n        public text: string,\r\n        public color: string,\r\n        public icon: string\r\n      ) {\r\n       }\r\n}","export class Transfer {\r\n  constructor(\r\n    public id_virement: number,\r\n    public num_acc_sender: string,\r\n    public num_acc_receiver: string,\r\n    public sender_name: string,\r\n    public receiver_name: string,\r\n    public created_at: string,\r\n    public montant_virement: string,\r\n    public id_justif: number,\r\n    public url_justif: string,\r\n    public code_bnk_receiver: string,\r\n    public sender_bank: string,\r\n    public status: string\r\n  ) {\r\n  }\r\n}\r\n","export class User {\n    constructor(\n        public id: number,\n        public firstname: string,\n        public name: string,\n        public photo: string\n      ) {  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Account } from '../Classes/Account';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable()\nexport class AccountListService {\n  private tharwaURL = 'accounts'; /** DNS/account to get the unvalid accounts' list**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getAccountsList(): Observable<Account[]>{\n    /** return the http get request response\n     * the accounts' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n@Injectable()\nexport class AddBankService {\n\n  private tharwaURL = 'banks'; /** DNS/banks to add a bank**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public addBank(bank) {\n   /** return the http post request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPostRequest(this.tharwaURL, bank);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Banker } from '../Classes/Banker';\n\n@Injectable()\nexport class AddBankerService {\n\n  private tharwaURL = 'bankers'; /** DNS/bankers to add a banker**/\n  private upLoadURL = 'user/photo';\n\n  constructor(private http: RequestHandlerService) { }\n\n  public addBanker(banker) {\n   /** return the http post request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPostRequest(this.tharwaURL, banker);\n  }\n\n  public postImage(fileToUpload: File, id) {\n\n    const formData: FormData = new FormData();\n    formData.append('photo', fileToUpload);\n    formData.append('id_user', id);\n    return this.http.putImage(this.upLoadURL, formData);\n}\n}\n","import { ActivatedRouteSnapshot } from '@angular/router';\nimport { AuthorisationService } from './authorisation.service';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthorisationService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    /** if the user is authenticated activate the route**/\n    if (this.authService.access_token) { return true; }\n    /** else redirect the user to login page **/\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable()\nexport class AuthorisationService {\n\n  private tharwaURL = 'login/code'; /** DNS/login/code to send code**/\n  public access_token = '';\n\n  constructor(private http: RequestHandlerService) { }\n\n  public authorisation(code: string, login: string, mdp: string): Observable<any> {\n    /** initialize the POST request paramas**/\n    const params = {\n      'email' : login,\n      'password' : mdp,\n      'nonce' : code\n    };\n\n    /** return the http post request response**/\n    return this.http.httpPostRequest(this.tharwaURL, params);\n  }\n\n  /** Initialize the token in constService**/\n  public setToken(access_token: string, refresh_token: string, user_type: string,user_id: string) {\n    this.access_token = access_token;\n    this.http.storeToken(access_token, refresh_token, user_type, user_id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RequestHandlerService } from './request-handler.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { User } from '../Classes/user';\n\n@Injectable()\nexport class BankerService {\n\n  private tharwaURL = 'bankers/'; /** DNS/bankers/{id} to get the banker with the id : id**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getBanker(id, option): Observable<any>{\n    /** return the http get request response\n     * the banker info\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL + id+\"/\"+option);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Banker } from '../Classes/Banker';\n\n@Injectable()\nexport class BankersListService {\n\n  private tharwaURL = 'bankers'; /** DNS/bankers to get the bankers' list**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getBankersList(): Observable<Banker[]> {\n    /** return the http get request response\n     * the bankers' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Bank } from '../Classes/Bank';\n\n@Injectable()\nexport class BanksListService {\n\n  private tharwaURL = 'banks'; /** DNS/bankers to get the bankers' list**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getBanksList(): Observable<Bank[]>{\n    /** return the http get request response\n     * the banks' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BlockAccountService {\n\n  private tharwaURL = 'accounts/'; /** DNS/bankers to add a banker**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public blockAccount(id, object, justif) {\n    const params = {\n      type: 3,\n      justif_object: object,\n      justif: justif\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL + id, params);\n  }\n\n  public deblockAccount(id) {\n    const params = {\n      type: 2\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL + id, params);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class ChangePasswordService {\n\n  private tharwaURL = 'user/password'; /** DNS/bankers to add a banker**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public changePassword(oldPassword, newPassword) {\n    const params = {\n      old_password: oldPassword,\n      new_password: newPassword\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL, params);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Commission } from '../Classes/Commission';\n\n@Injectable()\nexport class CommissionsListService {\n\n  private tharwaURL = 'commissions'; /** DNS/commissions to get the commissions' list**/\n  \n  constructor(private http: RequestHandlerService) { }\n\n  public getCommissionsList(): Observable<Commission[]>{\n    /** return the http get request response\n     * the commissions' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DeleteBankService {\n\n  private tharwaURL = 'banks/'; /** DNS/banks/{id} to delete the bank with the id : id**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public deleteBank(id) {\n    return this.http.httpDeleteRequest(this.tharwaURL + id);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DeleteBankerService {\n\n  private tharwaURL = 'bankers/'; /** DNS/bankers/{id} to delete the banker with the id : id**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public deleteBanker(id) {\n    return this.http.httpDeleteRequest(this.tharwaURL + id);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EditBankService {\n\n  private tharwaURL = 'banks/'; /** DNS/banks/{id} to update the bank with the id : id**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public editBank(id, bank) {\n    console.log(bank);\n    return this.http.httpPutRequest(this.tharwaURL+id, bank);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class EditProfileService {\n\n  private tharwaURLManager = 'managers'; /** DNS/manager/{id} to update the manager with the id : id**/\n  private tharwaURLBanker = 'bankers'; /** DNS/banker/{id} to update the banker with the id : id**/\n  private upLoadURL = 'user/photo';\n  constructor(private http: RequestHandlerService) { }\n\n  public editManger(manager, id) {\n    return this.http.httpPutRequest(this.tharwaURLManager , manager);\n  }\n\n  public editBanker(banker, id) {\n    return this.http.httpPutRequest(this.tharwaURLBanker, banker);\n  }\n\n  public postImage(fileToUpload: File, id) {\n\n    const formData: FormData = new FormData();\n    formData.append('photo', fileToUpload);\n    return this.http.putImage(this.upLoadURL, formData);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Transfer } from '../Classes/Transfer';\n\n@Injectable()\nexport class ExternTransfersListService {\n\n  private tharwaURL = 'virements_externes'; /** DNS/virements_internes to get the unvalid accounts' list**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getTransfersList(): Observable<Transfer[]>{\n    /** return the http get request response\n     * the accounts' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable()\nexport class LoginService {\n\n  public tharwaURL = 'login'; /** DNS/login to get code**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public login(login: string, mdp: string, type: number): Observable<any> {\n    /** initialize the POST request paramas**/\n    const params = {\n      'email' : login,\n      'password' : mdp,\n      'channel' : type\n    };\n    /** return the http post request response**/\n    return this.http.httpPostRequest(this.tharwaURL, params);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n@Injectable()\nexport class LogoutService {\n\n  public tharwaURL = 'logout'; /** DNS/login to get code**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public logout(): Observable<any> {\n    /** return the http post request response**/\n    return this.http.httpPostRequest(this.tharwaURL, '');\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Manager } from '../Classes/Manager';\n\n@Injectable()\nexport class ManagerProfileService {\n\n  private tharwaURL = 'managers/'; /** DNS/manager/{id} to get the manager profile**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getManagerProfile(id): Observable<Manager> {\n    /** return the http get request response\n     * the manager profile\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL + id);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { User } from '../Classes/user';\n\n@Injectable()\nexport class ManagerService {\n\n  private tharwaURL = 'managers/'; /** DNS/managers/{id} to get the manager with the id : id**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getManager(id): Observable<User> {\n    /** return the http get request response\n     * the manager info\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class RequestHandlerService {\n  readonly tharwaURL = 'https://serene-retreat-29274.herokuapp.com/';\n  //readonly tharwaURL = 'http://192.168.43.5/';\n\n  readonly imgUrl = 'images/customer_min/';\n  readonly justifUrl = 'images/justificatif_vrm_min/';\n  public token = '';\n  public timeTolive = '';\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private router: Router\n  ) { }\n\n  public httpGetRequest(url: string): Observable<any> {\n    /**\n     * add the httpheader  :\n     * every get request must have a token\n     * **/\n    const headers =  new HttpHeaders({\n      'Accept' : 'application/json'\n    });\n    /**\n     * send the get token\n     * **/\n    return this.http.get(this.tharwaURL + url,/* {headers}*/);\n  }\n\n public  httpPostRequest(url: string, params): Observable<any> {\n    /**\n     * add the httpheader  :\n     * the first two requests  /login and /login/code the token is empty\n     * after the authentification, the token is set and should be send with every request\n     * **/\n    \n    const headers =  new HttpHeaders({\n      'Accept' : 'application/json'\n    });\n    /** send the post request **/\n    return this.http.post(this.tharwaURL + url, JSON.stringify(params),/*{headers}*/);\n  }\n\n  public httpPutRequest (url: string, params): Observable<any> {\n    /**\n     * add the httpheader  :\n     * every put request must have a token\n     * **/\n    \n    const headers =  new HttpHeaders({\n      'Accept' : 'application/json'\n    });\n\n    return this.http.put(this.tharwaURL + url, params, /*{headers}*/);\n  }\n\n  public httpDeleteRequest (url: string): Observable<any> {\n    /**\n     * add the httpheader  :\n     * every put request must have a token\n     * **/\n    \n    const headers =  new HttpHeaders({\n      'Accept' : 'application/json'\n    });\n    return this.http.delete(this.tharwaURL+url, /*{headers}*/);\n  }\n\n  public putImage(imgUrl: String, formData): Observable<any>{\n      const headers =  new HttpHeaders({\n      'Accept' : 'multipart/form-data'\n    });\n    /** send the put request **/\n    return this.http.post(this.tharwaURL + imgUrl, formData, {headers})\n  }\n\n\n  public storeToken(token: string, refresh: string, user_type: string, user_id: string): void{\n    this.token = token;\n    this.cookieService.set( 'TOKEN', token); \n    this.cookieService.set( 'REFRESH', refresh);\n    this.cookieService.set('TYPE',user_type);\n    this.cookieService.set('ID', user_id)\n  }\n\n  public destroyToken(): void{\n    this.cookieService.deleteAll();\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { RequestHandlerService } from './request-handler.service';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor( \n    private http: HttpClient,\n    private auth: RequestHandlerService,\n    private inj: Injector,\n    private router: Router,\n    private cookieService: CookieService\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: {\n        'Authorization': this.auth.token\n      }\n    });\n    \n    return next.handle(request)\n      .pipe(\n        map(res => res),\n        catchError((err: HttpErrorResponse) => {\n          if (err.status === 401){\n            this.handle401();\n          }\n          //return new Observable<HttpEvent<any>>();\n          return next.handle(request);\n        })\n      )\n  }\n\n  public handle401(): void{\n    this.refrechToken().subscribe(\n      response => {\n        let authToken: string = response['access_token'];\n        let refreshToken: string = response['refresh_token'];\n        this.cookieService.set('TOKEN',authToken);\n        this.cookieService.set('REFRESH', refreshToken);\n        this.auth.token = authToken\n      }, \n      error => {\n        //logout users\n        this.auth.destroyToken();\n        //redirect to login\n        this.router.navigate(['/home']);\n      });\n  }\n\n  public refrechToken() {\n    let refreshAuth = this.cookieService.get('REFRESH');\n    let url: string = this.auth.tharwaURL + 'auth/refresh';\n\n    return this.http.get(url, {\n      headers: new HttpHeaders().set('refreshAuthorization', refreshAuth)\n    });\n  }\n}","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Transfer } from '../Classes/Transfer';\n\n@Injectable()\nexport class TransfersListService {\n\n  private tharwaURL = 'virements_internes'; /** DNS/virements_internes to get the unvalid accounts' list**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getTransfersList(): Observable<Transfer[]>{\n    /** return the http get request response\n     * the accounts' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Account } from '../Classes/Account';\n\n@Injectable()\nexport class UnvalidAccountsService {\n\n  private tharwaURL = 'accounts/invalid'; /** DNS/account_nv to get the unvalid accounts' list**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public getAccountsList(): Observable<Account[]>{\n    /** return the http get request response\n     * the accounts' list\n     * or an error if it was occured\n     * **/\n    return this.http.httpGetRequest(this.tharwaURL);\n  }\n}\n\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateAccountService {\n\n  private tharwaURL = 'accounts/'; /** DNS/accounts to validate an account**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public validateAccount(id) {\n    const params = {\n      type: 1\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL + id, params);\n  }\n\n  public rejectAccount(id) {\n    const params = {\n      type: 4\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL + id, params);\n  }\n\n}\n","import { RequestHandlerService } from './request-handler.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateTransferService {\n\n  private tharwaURL = 'virement/justif/'; /** DNS/transfers to validate a transfer**/\n\n  constructor(private http: RequestHandlerService) { }\n\n  public validateTransfer(id) {\n    const params = {\n      operation: 1\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL + id, params);\n  }\n\n  public rejectTransfer(id) {\n    const params = {\n      operation: 2\n    };\n   /** return the http put request response\n     * 201\n     * or an error if it was occured\n     * **/\n    return this.http.httpPutRequest(this.tharwaURL + id, params);\n  }\n\n}\n","import { NgModule} from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/home/login.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { sectionRoutesBanker } from './components/banker/bankersRoutes';\r\nimport { sectionRoutesManager } from './components/manager/ManagerRoutes';\r\nimport { AuthGuardService } from './Services/auth-guard.service';\r\nimport { BankerComponent } from './components/banker/banker.component';\r\nimport { ManagerComponent } from './components/manager/manager.component';\r\n\r\n\r\nconst thrRoutes: Routes = [\r\n  {\r\n    path: '',   redirectTo: 'home', pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'home', component: LoginComponent\r\n  },\r\n  {\r\n    path: 'banker/:id',\r\n    component: BankerComponent,\r\n    children: sectionRoutesBanker,\r\n    // canActivate: [AuthGuardService],\r\n  },\r\n  {\r\n    path: 'manager/:id',\r\n    component: ManagerComponent,\r\n    children : sectionRoutesManager,\r\n    // canActivate: [AuthGuardService],\r\n  },\r\n  {\r\n    path: '**', component: PageNotFoundComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      thrRoutes\r\n    )\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class TharwaRoutingModule {}\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import {Component, OnInit} from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { AuthorisationService } from './Services/authorisation.service';\nimport { UserIdleService } from 'angular-user-idle';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  constructor(\n    private authorisation: AuthorisationService,\n    private cookieService: CookieService,\n    private router: Router,\n    public translate: TranslateService,\n    private userIdle: UserIdleService\n  ) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    translate.setDefaultLang('en');\n\n    // the lang to use, if the lang isn't available, it will use the current loader to get them\n   translate.use('fr');\n  }\n\n  public ngOnInit(): void{\n    this.handleIdle();\n    this.handleToken();\n  }\n\n  public handleIdle(): void{\n    //Start watching for user inactivity.\n    this.userIdle.startWatching();\n    \n    // Start watching when user idle is starting.\n    this.userIdle.onTimerStart().subscribe(count => console.log(count));\n        \n    // Start watch when time is up.\n    this.userIdle.onTimeout().subscribe(() =>{\n      this.cookieService.deleteAll();\n      this.router.navigate(['/home']);\n    });    \n  }\n\n  public handleToken():  void{\n    const tokenExists: boolean = this.cookieService.check('TOKEN');\n    if (tokenExists) {\n      const access_token = this.cookieService.get(\"TOKEN\");\n      const refresh_token = this.cookieService.get(\"REFRESH\");\n      const user_type = this.cookieService.get(\"TYPE\");\n      const user_id = this.cookieService.get(\"ID\");\n\n      this.authorisation.setToken(access_token, refresh_token, user_type, user_id);\n      if (user_type == '2') {\n        this.router.navigate(['/manager/' + user_id + '/dashboard']);\n      } else if (user_type == '1') {\n        this.router.navigate(['/banker/' + user_id + '/home']);\n      }\n    }\n  }\n\n  stop() {\n    this.userIdle.stopTimer();\n  }\n \n  stopWatching() {\n    this.userIdle.stopWatching();\n  }\n \n  startWatching() {\n    this.userIdle.startWatching();\n  }\n \n  restart() {\n    this.userIdle.resetTimer();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport {CdkTableModule} from '@angular/cdk/table';\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MAT_DIALOG_DEFAULT_OPTIONS,\n} from '@angular/material';\n\nimport { NgModule } from '@angular/core';\n\nimport { FileUploadModule } from 'primeng/fileupload';\n\nimport { AppComponent } from './app.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { TharwaRoutingModule } from './Tharwa-routing.module';\nimport { ComponentsComponent } from './components/components.component';\nimport { LoginComponent, ChooseCodeDialogComponent, CodeDialogComponent} from './components/home/login.component';\nimport { BankerDialogComponent, DeleteBankerComponent } from './components/manager/bankers-list/bankers-list.component';\nimport { RequestHandlerService } from './Services/request-handler.service';\nimport { BankersListComponent } from './components/manager/bankers-list/bankers-list.component';\nimport { AuthGuardService } from './Services/auth-guard.service';\nimport { AuthorisationService } from './Services/authorisation.service';\nimport { BankerComponent, BankerLogoutComponent } from './components/banker/banker.component';\nimport { ManagerComponent, LogoutComponent} from './components/manager/manager.component';\nimport { AccountsComponent, AccountDialogComponent } from './components/banker/accounts/accounts.component';\nimport { BanksComponent} from './components/manager/banks/banks.component';\nimport { AddBankDialogComponent, EditBankDialogComponent, DeleteBankComponent } from './components/manager/banks/banks.component';\nimport { CommissionsComponent } from './components/manager/commissions/commissions.component';\nimport { ManagerProfileComponent, EditManagerProfileComponent, ChangeManagerPasswordComponent } from './components/manager/managerProfile/managerProfile.component';\nimport { BankerProfileComponent, EditBankerProfileComponent, ChangeBankerPasswordComponent } from './components/banker/bankerProfile/bankerProfile.component';\nimport {BlockDialogComponent, BlockingComponent, DeblockDialogComponent} from './components/banker/blocking/blocking.component';\nimport {JustificationComponent, TransferComponent} from './components/banker/transfer/transfer.component';\nimport {JustifOrderComponent, TransferOrderComponent} from './components/banker/transfer-order/transfer-order.component';\nimport { TransferExternComponent } from './components/banker/transfer-extern/transfer-extern.component';\nimport { EmptyTableComponent } from './components/empty-table/empty-table.component';\nimport { BankerHomeComponent } from './components/banker/banker-home/banker-home.component';\nimport { NotifCardComponent } from './components/banker/banker-home/notif-card/notif-card.component';\nimport { ManagerHomeComponent } from './components/manager/manager-home/manager-home.component';\nimport { OperationsComponent } from './components/manager/manager-home/operations/operations.component';\nimport { StatCommissionsComponent } from './components/manager/manager-home/stat-commissions/stat-commissions.component';\nimport { ManagerNotifComponent } from './components/manager/manager-home/stat-commissions/manager-notif/manager-notif.component';\nimport { OperationCardComponent } from './components/manager/manager-home/operations/operation-card/operation-card.component';\nimport { AccountsPanelComponent } from './components/banker/banker-home/accounts-panel/accounts-panel.component';\nimport { TransferssPanelComponent } from './components/banker/banker-home/transferss-panel/transferss-panel.component';\nimport { TokenInterceptor } from './Services/request-interceptor.service';\nimport { UserIdleModule } from 'angular-user-idle';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFoundComponent,\n    ComponentsComponent,\n    LoginComponent,\n    BankerComponent,\n    ManagerComponent,\n    CodeDialogComponent,\n    ChooseCodeDialogComponent,\n    BankerDialogComponent,\n    BankersListComponent,\n    AccountsComponent,\n    AccountDialogComponent,\n    LogoutComponent,\n    BankerLogoutComponent,\n    BanksComponent,\n    AddBankDialogComponent,\n    EditBankDialogComponent,\n    EditManagerProfileComponent,\n    EditBankerProfileComponent,\n    DeleteBankComponent,\n    DeleteBankerComponent,\n    CommissionsComponent,\n    ManagerProfileComponent,\n    BankerProfileComponent,\n    BlockingComponent,\n    BlockDialogComponent,\n    DeblockDialogComponent,\n    TransferComponent,\n    JustificationComponent,\n    TransferOrderComponent,\n    JustifOrderComponent,\n    TransferExternComponent,\n    ChangeBankerPasswordComponent,\n    ChangeManagerPasswordComponent,\n    EmptyTableComponent,\n    BankerHomeComponent,\n    NotifCardComponent,\n    ManagerHomeComponent,\n    ManagerNotifComponent,\n    OperationsComponent,\n    StatCommissionsComponent,\n    OperationCardComponent,\n    AccountsPanelComponent,\n    TransferssPanelComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    UserIdleModule.forRoot({idle: 300, timeout: 60, ping: 1}),\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    BrowserAnimationsModule,\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    TharwaRoutingModule,\n    MatFormFieldModule,\n    FileUploadModule\n  ],\n  providers: [\n    CookieService,\n    RequestHandlerService,\n    AuthGuardService,\n    AuthorisationService,\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: {hasBackdrop: true} },\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n  ],\n  entryComponents: [\n    CodeDialogComponent,\n    ChooseCodeDialogComponent,\n    BankerDialogComponent,\n    AccountDialogComponent,\n    LogoutComponent,\n    BankerLogoutComponent,\n    AddBankDialogComponent,\n    EditBankDialogComponent,\n    DeleteBankComponent,\n    DeleteBankerComponent,\n    EditManagerProfileComponent,\n    EditBankerProfileComponent,\n    BlockDialogComponent,\n    DeblockDialogComponent,\n    JustificationComponent,\n    JustifOrderComponent,\n    ChangeBankerPasswordComponent,\n    ChangeManagerPasswordComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, 'assets/i18n/', '.json');\n}\n","module.exports = \"mat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: #2BBBAD;\\r\\n    padding-bottom: 10px;\\r\\n    font-size: 3rem;\\r\\n}\\r\\n\\r\\n.account-card{\\r\\n    width: 50%;\\r\\n    margin-left: 25%;\\r\\n}\\r\\n\\r\\n.mat-card-image{\\r\\n    width: 100%;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.info-label{\\r\\n    font-weight: bold;\\r\\n    color: #009688;\\r\\n    line-height: 3;\\r\\n}\\r\\n\\r\\n.info-line{\\r\\n    text-align: left;\\r\\n}\"","module.exports = \"<h1 mat-dialog-title [innerHTML]=\\\"'BANKER.ACCOUNTS.DIALOGTITLE' | translate\\\"></h1>\\r\\n<div mat-card-avatar class=\\\"account-header-image\\\"></div>\\r\\n<mat-dialog-content>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <img [src]=\\\"account.profile\\\" class=\\\"mat-card-image\\\" onerror=\\\"this.src='assets/img/default.png'\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9\\\">\\r\\n            <div class=\\\"row \\\">\\r\\n                <div class=\\\"col-md-6 info-line\\\">\\r\\n                    <span class=\\\"info-label\\\" [innerHTML]=\\\"'GENERAL.NAME' | translate\\\"></span>\\r\\n                    <span class=\\\"info\\\">{{account.name}}</span>\\r\\n                    <br/>\\r\\n                    <span class=\\\"info-label\\\" [innerHTML]=\\\"'GENERAL.FUNCTION' | translate\\\"></span>\\r\\n                    <span class=\\\"info\\\">{{account.fonction}}</span>\\r\\n                    <br/>\\r\\n                    <span class=\\\"info-label\\\" [innerHTML]=\\\"'GENERAL.ACCOUNTTYPE' | translate\\\"></span>\\r\\n                    <span class=\\\"info\\\"color=\\\"primary\\\" selected=\\\"true\\\">{{account.type}}</span>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 info-line\\\">\\r\\n                    <span class=\\\"info-label\\\" [innerHTML]=\\\"'GENERAL.EMAIL' | translate\\\"></span>\\r\\n                    <span class=\\\"info\\\">{{account.email}}</span>\\r\\n                    <br/>\\r\\n                    <span class=\\\"info-label\\\" [innerHTML]=\\\"'GENERAL.PHONE' | translate\\\"></span>\\r\\n                    <span class=\\\"info\\\">{{account.phone_number}}</span>\\r\\n                    <br/>\\r\\n                    <span class=\\\"info-label\\\" [innerHTML]=\\\"'GENERAL.ADDRESS' | translate\\\"></span>\\r\\n                    <span class=\\\"info\\\">{{account.address}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <div class=\\\"w-10\\\">\\r\\n        <button\\r\\n            [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n            mat-button\\r\\n            mat-dialog-close\\r\\n            (click)= \\\"onClose()\\\"\\r\\n            ></button>\\r\\n        \\r\\n        <button\\r\\n            [innerHTML]=\\\"'GENERAL.VALIDATEBTN' | translate\\\"\\r\\n            mat-raised-button\\r\\n            class=\\\"floatRight\\\"\\r\\n            color=\\\"primary\\\"\\r\\n            (click)=\\\"validate()\\\"\\r\\n            ></button>\\r\\n        <button\\r\\n            [innerHTML]=\\\"'GENERAL.REJECTBTN' | translate\\\"\\r\\n            mat-raised-button\\r\\n            class=\\\"floatRight\\\"\\r\\n            color=\\\"accent\\\"\\r\\n            (click)=\\\"reject()\\\"\\r\\n            ></button>\\r\\n    </div>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \".accounts-card{\\r\\n  width: 80%;\\r\\n  margin-left: 10%;\\r\\n  margin-top: 5rem;\\r\\n}\\r\\n\\r\\n\\r\\nmat-card-title{\\r\\n  background: rgb(0, 128, 128);\\r\\n  position: absolute;\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.account-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n  border-radius: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n.refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"accounts-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'BANKER.ACCOUNTS.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"account-container mat-elevation-z8\\\">\\n      <div class=\\\"account-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- Fullname Column -->\\n        <ng-container matColumnDef=\\\"fullname\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.FULLNAME' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} {{row.firstname}} </mat-cell>\\n        </ng-container>\\n    \\n          <!-- Email Column -->\\n          <ng-container matColumnDef=\\\"email\\\">\\n            <mat-header-cell [innerHTML]=\\\"'GENERAL.EMAIL' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </mat-cell>\\n          </ng-container>\\n    \\n          <!-- Account type Column -->\\n          <ng-container matColumnDef=\\\"type\\\">\\n            <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTTYPE' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.type}} </mat-cell>\\n          </ng-container>\\n          \\n          <!-- Action Column -->\\n          <ng-container matColumnDef=\\\"select\\\">\\n            <mat-header-cell [innerHTML]=\\\"'GENERAL.CONSULT' | translate\\\" *matHeaderCellDef></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button mat-raised-button color='accent' (click)=\\\"showDiag(row.id)\\\">\\n                <mat-icon>visibility</mat-icon>\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n    \\n          <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n          <mat-row *matRowDef='let row; columns: displayedColumns;'>\\n          </mat-row>\\n        </mat-table>\\n        <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n        <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n        <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n            <mat-icon>cached</mat-icon>\\n        </button>\\n      </div>\\n  </mat-card-content>\\n  \\n</div>\"","import { Component, OnInit, ViewChild, AfterViewInit, Inject } from '@angular/core';\nimport { MatDialog, MatSnackBar, MatDialogRef, MatTableDataSource, MatPaginator, MatSort, MAT_DIALOG_DATA } from '@angular/material';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\nimport { AccountListService } from '../../../Services/account-list.service';\nimport { Account } from '../../../Classes/Account';\nimport { ValidateAccountService } from '../../../Services/validate-account.service';\nimport { UnvalidAccountsService } from '../../../Services/unvalid-accounts.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.css'],\n  providers: [UnvalidAccountsService, ValidateAccountService]\n})\n\nexport class AccountsComponent implements OnInit {\n  public loading = false;\n  public displayedColumns = ['fullname', 'email', 'type', 'select'];\n  public dataSource: MatTableDataSource<Account>;\n  public accounts: Account[] = [];\n  public msg = new ErrorHandling(this.errorMsg);\n  public empty = false;\n  public tcourant = \"Current\" || \"Courant\";\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    private accountsList: UnvalidAccountsService,\n    private validateService: ValidateAccountService,\n    private translateService: TranslateService\n  ) { }\n\n  public ngOnInit(): void {\n    this.initListAccount();\n  }\n\n  public initListAccount(): void {\n    this.loading = true;\n    this.accountsList.getAccountsList().subscribe(\n      data => {\n        this.accounts = data;\n        if (this.accounts.length == 0 ){\n          this.empty = true;\n        } else {\n          this.empty = false;        \n          this.convertToType();\n          this.translateService.onLangChange.subscribe(\n            data => this.translate()\n          );\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.accounts);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort; \n        }\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public applyFilter(filterValue: string): void {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public showDiag(id): void{\n    const dialogRef = this.dialog.open(AccountDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : this.getAccount(id)\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.validateAccount(id);\n      } else if (result == 0) {\n        this.rejectAccount(id);\n      }\n    });\n  }\n\n  public validateAccount(id): void{\n    this.loading = true;\n    this.validateService.validateAccount(id).subscribe(\n      data => {\n        this.initListAccount();\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public rejectAccount(id): void{\n    this.loading = true;\n    this.validateService.rejectAccount(id).subscribe(\n      data => {\n        this.initListAccount();\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public getAccount(id): Account {\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].id === id) {\n        return this.accounts[i];\n      }\n    }\n    return null;\n  }\n\n  public convertToType(){\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].type.toString() == '1') {\n        this.translateService.get(\"TYPEACCOUNT.CURRENT\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type.toString() == '2') {\n        this.translateService.get(\"TYPEACCOUNT.SAVING\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type.toString() == '3') {\n        this.translateService.get(\"TYPEACCOUNT.CUREURO\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type.toString() == '4') {\n        this.translateService.get(\"TYPEACCOUNT.CURDOL\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else {\n        this.translateService.get(\"TYPEACCOUNT.UNKOWN\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      }\n    }\n  }\n\n  public translate(){\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].type == \"Current\" || this.accounts[i].type == \"Courant\" ){\n        this.translateService.get(\"TYPEACCOUNT.CURRENT\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type == \"Saving\" || this.accounts[i].type == \"Epargne\" ) {\n        this.translateService.get(\"TYPEACCOUNT.SAVING\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type == \"Current Euro\" || this.accounts[i].type == \"Courant euro\" ) {\n        this.translateService.get(\"TYPEACCOUNT.CUREURO\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type == \"Current Euro\" || this.accounts[i].type == \"Courant euro\" ) {\n       this.translateService.get(\"TYPEACCOUNT.CURDOL\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else {\n        this.translateService.get(\"TYPEACCOUNT.UNKOWN\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      }\n    }\n  }\n\n  public refresh(): void{\n    this.initListAccount();\n  }\n}\n\n\n/** dynamic component : validate account dialog **/\n@Component({\n  selector: 'app-account-dialog',\n  templateUrl: 'accountDialog.html',\n  styleUrls: ['accountDialog.css']\n})\n\nexport class AccountDialogComponent implements  OnInit {\n\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<AccountDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public account: Account\n  ) {\n  }\n\n  public reject(): void {\n    this.dialogRef.close(0);\n  }\n\n  public validate(): void {\n    this.dialogRef.close(1);\n  }\n\n  public onClose(): void {\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit(): void {\n  }\n}\n","module.exports = \".account-panel{\\r\\n    width: 100%;\\r\\n    background: white;\\r\\n    padding: 1rem;\\r\\n    margin-top: 10rem;\\r\\n    margin-bottom: 4rem;\\r\\n    border-radius: 11px;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-dialog-title{\\r\\n    position: relative;\\r\\n    left: 0rem;\\r\\n    top: -4rem;\\r\\n    background: #008080;\\r\\n    color: white;\\r\\n    border-radius: 7px;\\r\\n    padding: 1rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.account-icon {\\r\\n    color: rgba(0, 0, 0, 0.54);\\r\\n    vertical-align: bottom;\\r\\n}\"","module.exports = \"<div class=\\\"account-panel mat-elevation-z8\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title>Les 10 derniers demandes de création d'un nouveau compte</mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <mat-list>\\n      <mat-list-item *ngFor=\\\"let account of accounts\\\">\\n        <h4 mat-line> \\n          <mat-icon class=\\\"account-icon\\\">account_box</mat-icon> \\n          {{account.name}} {{account.firstname}}\\n        </h4>\\n        <h4 mat-line>\\n          <mat-icon class=\\\"account-icon\\\">email_outline</mat-icon>\\n          {{account.email}}\\n        </h4>\\n        <h4 mat-line>\\n          <mat-icon class=\\\"account-icon\\\">widgets</mat-icon>\\n          {{account.type}}\\n        </h4>\\n        <p mat-line>\\n          <mat-icon class=\\\"account-icon\\\">date_range</mat-icon>\\n          {{account.date | date}}\\n        </p>\\n        <button mat-raised-button color='accent' (click)=\\\"showAccountDiag(account.id)\\\"> \\n          <mat-icon>visibility</mat-icon>\\n        </button>\\n        <mat-divider></mat-divider>\\n      </mat-list-item>\\n    </mat-list>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AccountDialogComponent } from '../../accounts/accounts.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { UnvalidAccountsService } from '../../../../Services/unvalid-accounts.service';\nimport { ValidateAccountService } from '../../../../Services/validate-account.service';\nimport { ErrorHandling } from '../../../../Classes/ErrorHandling';\nimport { Account } from '../../../../Classes/Account';\n\n@Component({\n  selector: 'app-accounts-panel',\n  templateUrl: './accounts-panel.component.html',\n  styleUrls: ['./accounts-panel.component.css'],\n  providers: [UnvalidAccountsService, ValidateAccountService]\n})\nexport class AccountsPanelComponent implements OnInit {\n  public msg = new ErrorHandling(this.errorMsg);\n  public accounts = [\n    {\n      id: 1,\n      name: 'Senouci',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 2,\n      name: 'Senouci2',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 3,\n      name: 'Senouci3',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 4,\n      name: 'Senouci4',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 5,\n      name: 'Senouci5',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 6,\n      name: 'Senouci6',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current7',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 7,\n      name: 'Senouci7',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 8,\n      name: 'Senouci8',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 9,\n      name: 'Senouci9',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    },\n    {\n      id: 10,\n      name: 'Senouci10',\n      firstname: 'Nour el Imane',\n      email: 'en_senouci@esi.dz',\n      type: 'current',\n      date: new Date('1/28/16')\n    }\n  ];\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    private validateService: ValidateAccountService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  public showAccountDiag(id): void{\n    const dialogRef = this.dialog.open(AccountDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : this.getAccount(id)\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.validateAccount(id);\n      } else if (result == 0) {\n        this.rejectAccount(id);\n      }\n    });\n  }\n\n  public validateAccount(id): void{\n    this.validateService.validateAccount(id).subscribe(\n      data => {\n        const index = this.accounts.findIndex(d => d.id === id);\n        this.accounts.splice(index,1);\n      },\n      error => {\n        this.msg.handleError(error);\n      }\n    );\n  }\n\n  public rejectAccount(id): void{\n    this.validateService.rejectAccount(id).subscribe(\n      data => {\n        const index = this.accounts.findIndex(d => d.id === id);\n        this.accounts.splice(index,1);\n      },\n      error => {\n        this.msg.handleError(error);\n      }\n    );\n  }\n\n  public getAccount(id) {\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].id === id) {\n        return this.accounts[i];\n      }\n    }\n    return null;\n  }\n}\n","module.exports = \".home-card{\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n    margin-top: 5rem;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"home-card\\\">\\n  <mat-card-content>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\" *ngFor=\\\"let notif of notifs\\\">\\n        <app-notif-card [notif]=\\\"notif\\\"></app-notif-card>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n         <app-accounts-panel></app-accounts-panel> \\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <app-transferss-panel></app-transferss-panel> \\n      </div>  \\n    </div>\\n  </mat-card-content>  \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Transfer } from '../../../Classes/Transfer';\nimport { JustificationComponent } from '../transfer/transfer.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\nimport { TransfersListService } from '../../../Services/transfers-list.service';\nimport { ValidateTransferService } from '../../../Services/validate-transfer.service';\nimport { Notif } from '../../../Classes/Notif';\n\n@Component({\n  selector: 'app-banker-home',\n  templateUrl: './banker-home.component.html',\n  styleUrls: ['./banker-home.component.css']\n})\nexport class BankerHomeComponent implements OnInit {\n  public loading = false;\n  public notifs: Notif[] = [\n    new Notif(21, 'Demandes de création d\\'un nouveau compte', '#ff4444'),\n    new Notif(19, 'Demandes de débloage d\\'un compte','#ffbb33'),\n    new Notif(15, 'Validations des virements','#2BBBAD'),\n    new Notif(7, 'Validations des ordres de virement', '#33b5e5')\n  ]\n  \n\n  constructor(\n  ) { }\n\n  ngOnInit() {\n  } \n}\n","module.exports = \".notif-card{\\r\\n    background: white;\\r\\n    border-radius: 20px;\\r\\n    width: 20rem;\\r\\n    padding: 2rem 2rem 2rem 4rem;\\r\\n    height: 10rem;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-dialog-title{\\r\\n    position: absolute;\\r\\n    left: -1rem;\\r\\n    top: -2rem;\\r\\n    background: #ff5722;\\r\\n    color: white;\\r\\n    border-radius: 7px;\\r\\n    padding: 1.5rem;\\r\\n    width: 6rem;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"notif-card mat-elevation-z8\\\">\\n  <div mat-dialog-title [ngStyle]=\\\"{backgroundColor : notif.color}\\\">\\n    <mat-card-title>{{notif.nbr}}</mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <h4>{{notif.text}}</h4>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Notif } from '../../../../Classes/Notif';\n\n@Component({\n  selector: 'app-notif-card',\n  templateUrl: './notif-card.component.html',\n  styleUrls: ['./notif-card.component.css']\n})\nexport class NotifCardComponent implements OnInit {\n  @Input() notif: Notif = new Notif(0, 'Loading ...', '#33b5e5');\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \".transfer-panel{\\r\\n    width: 100%;\\r\\n    background: white;\\r\\n    padding: 1rem;\\r\\n    margin-top: 10rem;\\r\\n    margin-bottom: 4rem;\\r\\n    border-radius: 11px;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-dialog-title{\\r\\n    position: relative;\\r\\n    left: 0rem;\\r\\n    top: -4rem;\\r\\n    background: #008080;\\r\\n    color: white;\\r\\n    border-radius: 7px;\\r\\n    padding: 1rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.transfer-icon {\\r\\n    color: rgba(0, 0, 0, 0.54);\\r\\n    vertical-align: bottom;\\r\\n}\"","module.exports = \"<div class=\\\"transfer-panel mat-elevation-z8\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title>Les 10 derniers virements en attente de validation</mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <mat-list>\\n      <mat-list-item *ngFor=\\\"let transfer of transfers\\\">\\n        <h4 mat-line>\\n          <mat-icon class=\\\"transfer-icon\\\">keyboard_arrow_right</mat-icon>\\n          {{transfer.senderName}}\\n        </h4>\\n        <h4 mat-line>\\n          <mat-icon class=\\\"transfer-icon\\\">keyboard_arrow_left</mat-icon>\\n          {{transfer.receiverName}}\\n        </h4>\\n        <h4 mat-line>\\n          <mat-icon class=\\\"transfer-icon\\\">monetization_on</mat-icon>\\n          {{transfer.amount}}\\n        </h4>\\n        <p mat-line>\\n          <mat-icon class=\\\"transfer-icon\\\">date_range</mat-icon>\\n          {{transfer.date | date}}\\n        </p>\\n        <button mat-raised-button color='accent' (click)=\\\"showTransferDiag(transfer.id)\\\">\\n          <mat-icon>visibility</mat-icon>\\n        </button>\\n        <mat-divider></mat-divider>\\n      </mat-list-item>\\n    </mat-list>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ErrorHandling } from '../../../../Classes/ErrorHandling';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ValidateTransferService } from '../../../../Services/validate-transfer.service';\nimport { TransfersListService } from '../../../../Services/transfers-list.service';\nimport { JustificationComponent } from '../../transfer/transfer.component';\nimport { Transfer } from '../../../../Classes/Transfer';\n\n@Component({\n  selector: 'app-transferss-panel',\n  templateUrl: './transferss-panel.component.html',\n  styleUrls: ['./transferss-panel.component.css'],\n  providers: [ValidateTransferService, TransfersListService]\n})\nexport class TransferssPanelComponent implements OnInit {\n  public msg = new ErrorHandling(this.errorMsg);\n  public transfers = [\n    {\n      id: 1,\n      senderName: 'Senouci',\n      receiverName: 'Djaoud',\n      amount:'20000000DA',\n      date: new Date('1/1/16'),\n    },\n    {\n      id: 2,\n      senderName: 'Makhloufi',\n      receiverName: 'Cherouti',\n      amount: '23277627DA',\n      date: new Date('1/17/16'),\n    },\n    {\n      id: 3,\n      senderName: 'Someone',\n      receiverName: 'somerhoder',\n      amount: '2000$',\n      date: new Date('1/28/16'),\n    },\n    {\n      id: 4,\n      senderName: 'Senouci',\n      receiverName: 'Djaoud',\n      amount:'20000000DA',\n      date: new Date('1/1/16'),\n    },\n    {\n      id: 5,\n      senderName: 'Makhloufi',\n      receiverName: 'Cherouti',\n      amount: '23277627DA',\n      date: new Date('1/17/16'),\n    },\n    {\n      id: 6,\n      senderName: 'Someone',\n      receiverName: 'somerhoder',\n      amount: '2000$',\n      date: new Date('1/28/16'),\n    },\n    {\n      id: 7,\n      senderName: 'Someone',\n      receiverName: 'somerhoder',\n      amount: '2000$',\n      date: new Date('1/28/16'),\n    },\n    {\n      id: 8,\n      senderName: 'Makhloufi',\n      receiverName: 'Cherouti',\n      amount: '23277627DA',\n      date: new Date('1/17/16'),\n    },\n    {\n      id: 9,\n      senderName: 'Someone',\n      receiverName: 'somerhoder',\n      amount: '2000$',\n      date: new Date('1/28/16'),\n    },\n    {\n      id: 10,\n      senderName: 'Someone',\n      receiverName: 'somerhoder',\n      amount: '2000$',\n      date: new Date('1/28/16'),\n    }\n  ];\n\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    private validateTransfer: ValidateTransferService,\n    private transfersList: TransfersListService\n  ) { }\n\n  ngOnInit() {\n    this.initListTransfer();\n  }\n\n  public showTransferDiag(id): void{\n    const dialogRef = this.dialog.open(JustificationComponent, {\n      width: '50%',\n      height: '80%',\n      disableClose: true,\n      data : this.getTransfer(id)\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      const msg = new ErrorHandling(this.errorMsg);\n      if (result == 1) {\n        this.validateTranfer(id);\n      } else if (result == 0) {\n        this.rejectTranfer(id);\n      }\n    });\n  }\n\n  public initListTransfer() {\n    /*\n    this.transfersList.getTransfersList().subscribe(\n      data => {\n        this.transfers = data;\n        if (this.transfers.length == 0){\n          this.empty = true;  \n        } else {\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.transfers);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        } \n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );*/\n  }\n\n  public validateTranfer(id){\n    this.validateTransfer.validateTransfer(id).subscribe(\n      data => {\n        this.initListTransfer();\n      },\n      error => {\n        this.msg.handleError(error);\n      }\n    );\n  }\n\n  public rejectTranfer(id){\n    this.validateTransfer.rejectTransfer(id).subscribe(\n      data => {\n        this.initListTransfer();\n      },\n      error => {\n        this.msg.handleError(error);\n      }\n    );\n  }\n\n  public getTransfer(id): Transfer {\n    /*\n    for (let i = 0; i < this.transfers.length; i++) {\n      if (this.transfers[i].id == id) {\n        return this.transfers[i];\n      }\n    }\n    return null;*/\n    return new Transfer(\n      1, '332424432','43424234','senouci','djaoud','12/34/12','20000DA',1,'image.png','thr','bna','actif'\n    );\n  }\n}\n","module.exports = \".navbar-header-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\\r\\n  \\r\\n  .devise-is-mobile .navbar-toolbar {\\r\\n    position: fixed;\\r\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n    z-index: 2;\\r\\n  }\\r\\n  \\r\\n  h1.bank-name {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  \\r\\n  .navbar-sidenav-container {\\r\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .navbar-sidenav-container mat-sidenav{\\r\\n    width: 200px;\\r\\n    background: rgba(0,0,0, 0.1);\\r\\n    overflow: hidden;\\r\\n\\r\\n/*    background-size: cover;*/\\r\\n\\r\\n  }\\r\\n  \\r\\n  .navbar-sidenav-container mat-sidenav div{\\r\\n    background: rgba(255,255,255,1);\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    padding-top: 5rem;\\r\\n  }\\r\\n  \\r\\n  .devise-is-mobile .navbar-sidenav-container {\\r\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n       `<body>` to be our scrolling element for mobile layouts. */\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n  \\r\\n  .user-name mat-chip{\\r\\n    padding-left: 20px;\\r\\n  }\\r\\n  \\r\\n  .profile-img{\\r\\n    width: 45px;\\r\\n    height: 45px;\\r\\n    border-radius: 100%;\\r\\n    position: relative;\\r\\n    left: 17px;\\r\\n  }\\r\\n  \\r\\n  .logo-img{\\r\\n    width: 134px;\\r\\n  }\\r\\n  \\r\\n  .navbar_button{\\r\\n    width: 100%;\\r\\n    padding: 4px;\\r\\n  }\\r\\n  \\r\\n  .icon_menu{\\r\\n    position: absolute;\\r\\n    right: 1rem;\\r\\n    top: 1rem;\\r\\n  }\\r\\n  \\r\\n  .mat-button, .mat-raised-button{\\r\\n    text-align: left;\\r\\n    padding-left: 2rem;\\r\\n    font-size: 13px;\\r\\n  }\\r\\n  \\r\\n  mat-sidenav-content{\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  .navbar_sub_button{\\r\\n    padding-left: 2rem;\\r\\n    text-align: left;\\r\\n    width: 100%;\\r\\n    white-space: normal;\\r\\n  }\\r\\n  \\r\\n  .item_container, .mat-list-item-content{\\r\\n    padding: 0!important;\\r\\n  }\\r\\n  \\r\\n  .mat-list-item{\\r\\n    margin-bottom: 10px; \\r\\n  }\\r\\n  \\r\\n  .fill-space{\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n  \\r\\n  .language{\\r\\n    background: #008080;\\r\\n    width: 11rem;\\r\\n    height: 4rem;\\r\\n    border-radius: 25px;\\r\\n  }\\r\\n  \\r\\n  .main-badge{\\r\\n    position: absolute;\\r\\n    right: 4px;\\r\\n    top: 10px;\\r\\n    background: #ff5722;\\r\\n  }\\r\\n  \\r\\n  .sub-badge{\\r\\n    position: absolute;\\r\\n    right: 11px;\\r\\n    top: 16px;\\r\\n    background: #ff9800;\\r\\n    padding: 3px 6px;\\r\\n  }\\r\\n  \\r\\n  .divider{\\r\\n    width: 80%!important;\\r\\n    margin-left: 10%!important;\\r\\n  }\\r\\n  \"","module.exports = \"<div class=\\\"navbar-header-container\\\" [class.devise-is-mobile]=\\\"mobileQuery.matches\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"navbar-toolbar\\\">\\r\\n        <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\r\\n        <img src=\\\"assets/img/logo_navbar.png\\\" class=\\\"logo-img\\\">\\r\\n        <span class=\\\"fill-space\\\"></span>\\r\\n        <button mat-icon-button class=\\\"language\\\" (click)=\\\"switchLanguage()\\\">\\r\\n            <mat-icon>language</mat-icon>\\r\\n            {{language}}\\r\\n        </button>\\r\\n        <img src=\\\"{{banker.photo}}\\\" class=\\\"profile-img\\\" onerror=\\\"this.src='assets/img/default.png'\\\">\\r\\n        <mat-chip-list class=\\\"user-name\\\">\\r\\n            <mat-chip>{{banker.name}} {{banker.firstname}}</mat-chip>\\r\\n        </mat-chip-list>\\r\\n    </mat-toolbar>\\r\\n        \\r\\n    <mat-sidenav-container class=\\\"navbar-sidenav-container\\\"\\r\\n                        [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\r\\n        <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\r\\n                    [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\"\\r\\n                    opened = \\\"true\\\"\\r\\n                    >\\r\\n        <div>\\r\\n            <mat-nav-list>\\r\\n                <div *ngFor= \\\"let item of items\\\" class=\\\"item_container\\\">\\r\\n                    <a mat-list-item routerLink={{item.route}}>\\r\\n                        <button mat-raised-button \\r\\n                                [color]=\\\"item.selected ? 'primary' : '' \\\" \\r\\n                                class=\\\"navbar_button\\\" \\r\\n                                (click)=\\\"selected(item.id)\\\">\\r\\n                            <mat-icon class=\\\"icon_menu\\\" [color]=\\\"item.selected ? '' : 'primary' \\\">{{item.icon}}</mat-icon>\\r\\n                            {{item.name | translate}}\\r\\n                        </button>\\r\\n                        <span class=\\\"badge badge-info main-badge\\\" *ngIf=\\\"item.notif\\\">{{item.notif}}</span>\\r\\n                    </a>\\r\\n                    \\r\\n                    <div class=\\\"item_container\\\" *ngFor= \\\"let subitem of item.sub_items\\\">\\r\\n                        <a mat-list-item routerLink=\\\"{{subitem.route}}\\\" *ngIf=\\\"validation\\\">\\r\\n                            <span class=\\\"badge badge-info sub-badge\\\" *ngIf=\\\"item.notif\\\">{{subitem.notif}}</span>\\r\\n                            <button mat-button\\r\\n                                    [color]=\\\"subitem.selected ? 'primary' : '' \\\" \\r\\n                                    class=\\\"navbar_sub_button\\\" \\r\\n                                    (click)=\\\"subselected(subitem.id)\\\">\\r\\n                                    <mat-icon class=\\\"icon_menu\\\" [color]=\\\"subitem.selected ? '' : 'primary' \\\">{{subitem.icon}}</mat-icon>\\r\\n                                {{subitem.name}}\\r\\n                            </button>\\r\\n                            <mat-divider class=\\\"divider\\\"></mat-divider>\\r\\n                        </a>\\r\\n                        \\r\\n                    </div>\\r\\n                </div>\\r\\n                </mat-nav-list>\\r\\n            </div>\\r\\n        </mat-sidenav>\\r\\n        <mat-sidenav-content>\\r\\n            <router-outlet></router-outlet>\\r\\n        </mat-sidenav-content>\\r\\n    </mat-sidenav-container>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { User } from '../../Classes/user';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MatSnackBar, MatDialog, MatDialogRef } from '@angular/material';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BankerService } from '../../Services/banker.service';\nimport { ErrorHandling } from '../../Classes/ErrorHandling';\nimport { RequestHandlerService } from '../../Services/request-handler.service';\nimport { LogoutService } from '../../Services/logout.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-banker',\n  templateUrl: './banker.component.html',\n  styleUrls: ['./banker.component.css'],\n  providers: [BankerService, LogoutService]\n\n})\nexport class BankerComponent implements OnInit, OnDestroy {\n\n  public language = \"Français\";\n  public mobileQuery: MediaQueryList;\n  public items = [\n    {id: 1, name: 'Acceuil', selected: true, route: 'home', icon : 'home', sub_items: [], notif: 0},\n    {id: 2, name: 'Validation', selected: false, route: 'accounts', icon : 'done',\n      sub_items: [\n        {id: 8, name: 'Comptes', selected: true, route: 'accounts', icon : 'supervisor_account',notif: 3},\n        {id: 9, name: 'Virements', selected: false, route: 'transfers', icon : 'compare_arrows',notif: 2},\n        {id: 10, name: 'Ordres de virements', selected: false, route: 'transfersOrder', icon : 'description',notif: 10}\n    ], notif: 15},\n    {id: 3, name: 'Virements Externes', selected: false, route: 'transfersExtern', icon : 'list', sub_items: [], notif: 20},\n    {id: 4, name: '(Dé)Bloquage', selected: false, route: 'blocking', icon : 'lock', sub_items: [], notif: 12},\n    {id: 5, name: 'Profil', selected: false, route: 'profile', icon : 'perm_identity', sub_items: [], notif: 0},\n    {id: 6, name: 'Déconnexion', selected: false, route: 'home', icon : 'highlight_off', sub_items: [], notif: 0} ];\n\n\n  private _mobileQueryListener: () => void;\n\n  public banker: User = new User(0, '','', '');\n  public path = '';\n  public validation = false;\n\n\n  constructor(\n    public changeDetectorRef: ChangeDetectorRef,\n    public media: MediaMatcher,\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    public route: ActivatedRoute,\n    public bankerService: BankerService,\n    public logoutService: LogoutService,\n    public apiService: RequestHandlerService,\n    public redirect: Router,\n    public translate: TranslateService\n  ) {\n    this.path = this.apiService.tharwaURL + this.apiService.imgUrl;\n\n    /*\n    **we detect the screen size changes : if size > 600px than mobileQuery.matchs = true,\n    **else mobileQuery.matchs = false\n    */\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  public ngOnInit(): void {\n    /** retrieve the manager id from the route**/\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.getBankerInfo(id);\n  }\n\n  public getBankerInfo(id): void{\n     /** send the request GET /manager/{id} to get the manager's info **/\n     this.bankerService.getBanker(id,0).subscribe(\n      data => {\n        this.banker = data;\n        this.banker.photo = this.path + this.banker.photo;\n      },\n      error => {\n        /** show error**/\n        const msg = new ErrorHandling(this.errorMsg);\n        msg.handleError(error);\n      }\n    );\n  }\n\n  public ngOnDestroy(): void {\n    /** once the component is destroyed, remove the listner**/\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  public selected(id): void{\n    for (let i = 0; i < this.items.length; i++) {\n      this.items[i].selected = this.items[i].id == id;\n    }\n    if (id == 2) {\n      this.validation = !this.validation;\n      if (this.validation){\n        this.items[1].icon = 'keyboard_arrow_down';\n      } else {\n        this.items[1].icon = 'done';\n      }\n    }\n    if (id == 6) {\n      this.showLogoutDiag();\n    }\n  }\n\n  public subselected(id): void{\n    for (let i = 0; i < this.items[1].sub_items.length; i++) {\n      this.items[1].sub_items[i].selected = this.items[1].sub_items[i].id == id;\n      for (let i = 0; i < this.items.length; i++) {\n        this.items[i].selected = false;\n      } \n      this.items[1].selected = true;\n    }\n  }\n\n  public showLogoutDiag(): void{\n    const dialogRef = this.dialog.open(BankerLogoutComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    /** when the dialog is closed show the user a dialog where he can enter the verification code**/\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.logoutService.logout().subscribe(\n          data => {\n            this.redirect.navigate(['/home']);\n            this.apiService.destroyToken();\n          },\n          error => {\n            const msg = new ErrorHandling(this.errorMsg);\n            msg.handleError(error);\n          }\n        );\n      }\n    });\n  }\n\n  public switchLanguage(){\n    if (this.language == 'Français'){\n      this.translate.use('en');\n      this.language = 'English';\n      this.translateToEn();\n    } else {\n      this.translate.use('fr');\n      this.language = 'Français';\n      this.translateToFr();\n    }\n  }\n\n  public translateToEn(){\n    this.items[0].name = 'Home';\n    this.items[1].sub_items[0].name = 'Accounts';\n    this.items[1].sub_items[1].name = 'Transfers';\n    this.items[1].sub_items[2].name = 'Transfers Order';\n    this.items[2].name = 'Extern Transfers';\n    this.items[3].name = '(De)Blocking';\n    this.items[4].name = 'Profile';\n    this.items[5].name = 'Logout';\n  }\n\n  public translateToFr(){\n    this.items[0].name = 'Acceuil';\n    this.items[1].sub_items[0].name = 'Comptes';\n    this.items[1].sub_items[1].name = 'Virements';\n    this.items[1].sub_items[2].name = 'Ordres de virements';\n    this.items[2].name = 'Virements Externes';\n    this.items[3].name = '(Dé)Bloquage';\n    this.items[4].name = 'Profil';\n    this.items[5].name = 'Déconnexion';\n  }\n}\n\n\n/** dynamic component : logout dialog **/\n@Component({\n  selector: 'app-logout-dialog',\n  templateUrl: 'logout.html',\n  styleUrls: ['logout.css']\n})\n\nexport class BankerLogoutComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<BankerLogoutComponent>\n  ) { }\n\n  public logout(): void{\n    this.dialogRef.close(true);\n  }\n}\n","module.exports = \".profile-card{\\r\\n    width: 90%;\\r\\n    margin-left: 5%;\\r\\n    margin-top: 10rem;\\r\\n}\\r\\n\\r\\n#profile-img{\\r\\n    position: absolute;\\r\\n    z-index: 10;\\r\\n    border-radius: 50%;\\r\\n    width: 100px;\\r\\n    top: 5rem;\\r\\n    left: 18%;\\r\\n}\\r\\n\\r\\nmat-card-title{\\r\\n    background: rgb(0, 128, 128);\\r\\n    position: absolute;\\r\\n    width: 60%;\\r\\n    left: 20%;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    padding: 1rem;\\r\\n    top: 8rem;\\r\\n    border-radius: 10px;\\r\\n  }\\r\\n\\r\\n.profile-container{\\r\\n    background: white;\\r\\n    padding: 10rem;\\r\\n    border-radius: 20px;\\r\\n  }\\r\\n\\r\\n.name-field,\\r\\n  .email-field{\\r\\n      width: 45%;\\r\\n      margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\n.address-field,\\r\\n    .phone-field{\\r\\n        width: 45%;\\r\\n        margin-bottom: 20px;\\r\\n    }\\r\\n\\r\\n.phone-field{\\r\\n      margin-right: 9%;\\r\\n  }\\r\\n\\r\\n.name-field{\\r\\n    margin-right: 9%;\\r\\n  }\\r\\n\\r\\n.edit-profile-btn{\\r\\n    float: right;\\r\\n    margin-right: 1rem;\\r\\n  }\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"profile-card\\\">\\n    <form #profileForm=\\\"ngForm\\\">\\n    <div mat-dialog-title>\\n      <mat-card-title [innerHTML]=\\\"'PROFILE.TITLE' | translate\\\"></mat-card-title>\\n      <img src=\\\"{{banker.photo}}\\\" id=\\\"profile-img\\\" onerror=\\\"this.src='assets/img/default.png'\\\">\\n    </div>\\n    <mat-card-content>\\n      <div class=\\\"profile-container mat-elevation-z8\\\">\\n\\n        <mat-form-field class=\\\"name-field\\\">\\n            <input\\n                matInput\\n                #name\\n                placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\n                [value]=\\\"banker.name\\\"\\n                [disabled]=\\\"disable\\\"\\n                >\\n            <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\n        </mat-form-field>\\n        \\n        <mat-form-field class=\\\"email-field\\\">\\n            <input\\n                matInput\\n                placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\n                #email\\n                [value]=\\\"banker.email\\\"\\n                [disabled]=\\\"disable\\\"\\n                >\\n            <mat-icon matSuffix color=\\\"primary\\\">email</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"phone-field\\\">\\n            <input\\n                matInput\\n                placeholder=\\\"{{ 'FORMS.PHONEPLACEHOLDER' | translate}}\\\"\\n                #phone\\n                [value]=\\\"banker.phone_number\\\"\\n                [disabled]=\\\"disable\\\"\\n                >\\n            <mat-icon matSuffix color=\\\"primary\\\">phone</mat-icon>\\n        </mat-form-field>\\n        <mat-form-field class=\\\"address-field\\\">\\n            <input\\n                matInput\\n                placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\n                #address\\n                [value]=\\\"banker.address\\\"\\n                [disabled]=\\\"disable\\\"\\n                >\\n            <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\n        </mat-form-field>\\n        <button\\n            [innerHTML]=\\\"'GENERAL.CHANGEPDWBTN' | translate\\\"\\n            mat-raised-button\\n            color = 'accent'\\n            (click) = 'changePasswordDialog()'\\n            class=\\\"edit-profile-btn\\\">\\n            <mat-icon>create</mat-icon>\\n        </button>\\n        <button\\n            [innerHTML]=\\\"'GENERAL.EDITPROFILBTN' | translate\\\"\\n            mat-raised-button\\n            color='accent'\\n            (click) = 'editProfileDialog()'\\n            class=\\\"edit-profile-btn\\\">\\n            <mat-icon>create</mat-icon>\\n        </button>\\n      </div>\\n    </mat-card-content>\\n    </form>\\n  </div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Banker } from '../../../Classes/Banker';\nimport { BankerProfileService } from '../../../Services/banker-profile.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { EditProfileService } from '../../../Services/edit-profile.service';\nimport { MatSnackBar, MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\nimport { FormControl, Validators } from '@angular/forms';\nimport { InputValidation } from '../../../Classes/InputValidation';\nimport { ChangePasswordService } from '../../../Services/change-password.service';\nimport { BankerService } from '../../../Services/banker.service';\nimport { RequestHandlerService } from '../../../Services/request-handler.service';\n\n@Component({\n  selector: 'app-banker-profile',\n  templateUrl: './bankerProfile.component.html',\n  styleUrls: ['./bankerProfile.component.css'],\n  providers: [BankerService, EditProfileService, ChangePasswordService]\n})\nexport class BankerProfileComponent implements OnInit {\n  public loading = false;\n  public disable = true;\n  public banker: Banker = new Banker(0,'','','','','','');\n  public path = \"\";\n  constructor(\n    public errorMsg: MatSnackBar,\n    private route: ActivatedRoute,\n    private profile: BankerService,\n    private pwdService: ChangePasswordService,\n    public dialog: MatDialog,\n    public editProfileService: EditProfileService,\n    public api: RequestHandlerService\n  ) { \n    this.path = this.api.imgUrl;\n  }\n\n  ngOnInit(): void{\n    const id = +this.route.parent.snapshot.paramMap.get('id');\n    this.initProfile(id);\n  }\n\n  public initProfile(id): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.profile.getBanker(id,1).subscribe(\n      data => {\n        this.loading = false;\n        this.banker = data;\n        this.banker.photo = this.api.tharwaURL + this.path + this.banker.photo;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public editProfileDialog(): void {\n    const dialogRef = this.dialog.open(EditBankerProfileComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : this.banker\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n        if (result!=-1) {\n          this.editProfile(result)\n        }\n    });\n  }\n\n  public editProfile(banker): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.editProfileService.editBanker(banker, this.banker.id).subscribe(\n      data => {\n        if (banker.photo) {\n          this.editProfileService.postImage(banker.photo, this.banker.id).subscribe(\n            response => {\n              this.initProfile(this.banker.id);\n              this.loading = false;\n            }, error => {\n              msg.handleError(error);\n              this.loading = false;\n            }\n          );\n        }\n        this.loading = false;\n        this.banker = banker;\n        this.banker.photo = this.api.tharwaURL + this.path + this.banker.photo;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      })\n  }\n\n  public changePasswordDialog(): void{\n    const dialogRef = this.dialog.open(ChangeBankerPasswordComponent, {\n      width: '40rem',\n      height: 'auto',\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n        if (result!=-1) {\n          this.changePassword(result.oldPassword, result.newPassword);\n        }\n    });\n  }\n\n  public changePassword(oldPassword, newPassword): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.pwdService.changePassword(oldPassword, newPassword).subscribe(\n      data => {\n        msg.showErrorMsg('Password has successfully changed', 200)\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      });\n  }\n}\n\n/** dynamic component : edit banker form dialog **/\n\n@Component({\n  selector: 'app-edit-banker-profile',\n  templateUrl: 'editBankerProfile.html',\n  styleUrls: ['editBankerProfile.css']\n})\n\n\nexport class EditBankerProfileComponent {\n  public hide = true;\n  imagefile:  File;\n  filePreviewPath = '';\n\n  nameControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z][a-zA-Z ]+/)\n  ]);\n  nameMatcher = new InputValidation();\n\n  emailControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n    Validators.pattern(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n  ]);\n  emailMatcher = new InputValidation();\n\n  phoneControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[0-9]*/),\n    Validators.maxLength(10),\n    Validators.minLength(10)\n  ]);\n  phoneMatcher = new InputValidation();\n\n  addressControl = new FormControl('', [\n    Validators.required\n  ]);\n  addressMatcher = new InputValidation();\n\n  constructor(\n    public dialogRef: MatDialogRef<EditBankerProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public banker: Banker\n  ) {\n    this.filePreviewPath = this.banker.photo;\n  }\n\n  onSubmit() {\n    const banker = {\n      id: this.banker.id,\n      name : this.nameControl.value,\n      email: this.emailControl.value,\n      phone_number: this.phoneControl.value,\n      address : this.addressControl.value,\n      photo: this.imagefile\n    };\n    if (this.nameControl.pristine) {\n      banker.name = this.banker.name;\n    }\n    if (this.emailControl.pristine) {\n      banker.email = this.banker.email;\n    }\n    if (this.phoneControl.pristine) {\n      banker.phone_number = this.banker.phone_number;\n    }\n    if (this.addressControl.pristine) {\n      banker.address = this.banker.address;\n    }\n    this.dialogRef.close(banker);\n  }\n\n  addImg(event: any) {\n    this.imagefile = event.target.files.item(0);\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n          this.filePreviewPath = event.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n   }\n  }\n\n\n   isImage(file: File): boolean {\n    return /^image\\//.test(file.type);\n   }\n\n  removeImage(event: any) {\n    this.imagefile = null;\n  }\n\n  formatSize(bytes) {\n    if (bytes === 0) {\n      return '0 B';\n    }\n    const k = 1000,\n      dm = 3,\n      sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n      i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n}\n\n\n/** dynamic component : change password dialog **/\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: 'passwordBanker.html',\n  styleUrls: ['passwordBanker.css']\n})\n\n\nexport class ChangeBankerPasswordComponent {\n  public hideold = true;\n  public hidenew = true;\n  public hideconf = true;\n\n  oldPasswordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n  matcherOldPassword = new InputValidation();\n\n  confPasswordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n  matcherConfPassword = new InputValidation();\n\n  newPasswordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n  matcherNewPassword = new InputValidation();\n  constructor(\n    public dialogRef: MatDialogRef<ChangeBankerPasswordComponent>,\n    public errorMsg: MatSnackBar,\n  ){}\n\n  public showNewPassword(): void {\n    this.hidenew = !this.hidenew;\n  }\n\n  public showOldPassword(): void {\n    this.hideold = !this.hideold;\n  }\n  \n  public showConfPassword(): void {\n    this.hideconf = !this.hideconf;\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public validate(): void{\n    if(this.newPasswordFormControl.value == this.confPasswordFormControl.value){\n      const response = {\n        oldPassword: this.oldPasswordFormControl.value,\n        newPassword: this.newPasswordFormControl.value\n      }\n      this.dialogRef.close(response);\n    } else {\n      const msg = new ErrorHandling(this.errorMsg);\n      msg.showErrorMsg('Passwords dont match', '=/=');\n    }\n  }\n}","module.exports = \"mat-form-field{\\r\\n    display: block;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\n#editProfile{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nmat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n#profile-img{\\r\\n  border: 1px dotted teal;\\r\\n  border-radius: 50%;\\r\\n  width: 10rem;\\r\\n  height: 10rem;\\r\\n  transition:all .2s ease-in-out;\\r\\n  -webkit-transition:all .2s ease-in-out;\\r\\n  -moz-transition:all .2s ease-in-out;\\r\\n  -o-transition:all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n#profile-img:hover{\\r\\n    border-radius: 0;\\r\\n}\\r\\n\\r\\n#inputImage{\\r\\n    position: absolute;\\r\\n    opacity: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form id=\\\"editProfile\\\" #editProfileForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1 [innerHTML]=\\\"'PROFILE.DIALOGTITLE' | translate\\\" mat-dialog-title></h1>\\r\\n\\r\\n    <mat-dialog-content>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"imgBtn\\\">\\r\\n                        <input (change)=\\\"addImg($event)\\\"\\r\\n                            accept=\\\"image/*\\\"\\r\\n                            type=\\\"file\\\"\\r\\n                            id=\\\"inputImage\\\"\\r\\n                            name=\\\"imagefile\\\">\\r\\n                        <img \\r\\n                            [src]=\\\"filePreviewPath\\\" \\r\\n                            onerror=\\\"this.src='assets/img/default.png'\\\"\\r\\n                            id=\\\"profile-img\\\">\\r\\n                    </div>\\r\\n                    <p [innerHTML]=\\\"'PROFILE.CHANGEPHOTO' | translate\\\"></p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n                <mat-form-field class=\\\"name-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        #name\\r\\n                        [formControl]=\\\"nameControl\\\"\\r\\n                        [errorStateMatcher]=\\\"nameMatcher\\\"\\r\\n                        placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\r\\n                        [value]=\\\"banker.name\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.NAMEHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                      [innerHTML]=\\\"'FORMS.NAMEUNVALID' | translate\\\"\\r\\n                      *ngIf=\\\"nameControl.hasError('pattern') && !nameControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.NAMEREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"nameControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"email-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\r\\n                        [formControl]=\\\"emailControl\\\"\\r\\n                        [errorStateMatcher]=\\\"emailMatcher\\\"\\r\\n                        #mail\\r\\n                        [value]=\\\"banker.email\\\"\\r\\n                    >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.EMAILHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.EMAILUNVALID' | translate\\\"\\r\\n                        *ngIf=\\\"emailControl.hasError('email') && emailControl.hasError('pattern') && !emailControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.EMAILREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"emailControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">email</mat-icon>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"phone-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"{{ 'FORMS.PHONEPLACEHOLDER' | translate}}\\\"\\r\\n                        [formControl]=\\\"phoneControl\\\"\\r\\n                        [errorStateMatcher]=\\\"phoneMatcher\\\"\\r\\n                        #phone\\r\\n                        [value]=\\\"banker.phone_number\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.PHONEHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                      [innerHTML]=\\\"'FORMS.PHONEUNVALID' | translate\\\"\\r\\n                      *ngIf=\\\"phoneControl.hasError('pattern') && phoneControl.hasError('minLength') && phoneControl.hasError('maxLength') && !emailControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.PHONEREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"phoneControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"address-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\r\\n                        [formControl]=\\\"addressControl\\\"\\r\\n                        [errorStateMatcher]=\\\"addressMatcher\\\"\\r\\n                        #address\\r\\n                        [value]=\\\"banker.address\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.ADDRESSHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.ADDRESSREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"addressControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n        <div class=\\\"w-10\\\">\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                mat-button\\r\\n                    mat-dialog-close\\r\\n                    class=\\\"floatLeft\\\"\\r\\n                    ></button>\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"accent\\\"\\r\\n                class=\\\"textWhite floatRight\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                ></button>\\r\\n        </div>\\r\\n    </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \"mat-form-field{\\r\\n    display: block;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\nmat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    margin-bottom: 1rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"password-card\\\">\\r\\n    <form #passwordForm=\\\"ngForm\\\">\\r\\n    <div mat-dialog-title>\\r\\n      <mat-card-title [innerHTML]=\\\"'PROFILE.PDWTITLE' | translate\\\"></mat-card-title>\\r\\n    </div>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"password-container\\\">\\r\\n        <mat-form-field class=\\\"old-password-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #password\\r\\n                placeholder=\\\"{{ 'FORMS.OLDPASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"oldPasswordFormControl\\\"\\r\\n                [errorStateMatcher]=\\\"matcherOldPassword\\\"\\r\\n                [type]=\\\"hideold ? 'password' : 'text'\\\"\\r\\n                autocomplete=\\\"\\\"\\r\\n                >\\r\\n            <mat-icon matSuffix (click)=\\\"showOldPassword()\\\">{{hideold ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.OLDPASSWORDHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n                *ngIf=\\\"oldPasswordFormControl.hasError('minLength') && !oldPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.OLDPASSWORDREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"oldPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"new-password-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #newpassword\\r\\n                placeholder=\\\"{{ 'FORMS.NEWPASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"newPasswordFormControl\\\"\\r\\n                [errorStateMatcher]=\\\"matcherNewPassword\\\"\\r\\n                [type]=\\\"hidenew ? 'password' : 'text'\\\"\\r\\n                autocomplete=\\\"\\\"\\r\\n                >\\r\\n            <mat-icon matSuffix (click)=\\\"showNewPassword()\\\">{{hidenew ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.NEWPASSWORDHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n                *ngIf=\\\"!newPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.NEWPASSWORDREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"newPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"confirmation-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #confirmation\\r\\n                placeholder=\\\"{{ 'FORMS.CONFPASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"confPasswordFormControl\\\"\\r\\n                [errorStateMatcher]=\\\"matcherConfPassword\\\"\\r\\n                [type]=\\\"hideconf ? 'password' : 'text'\\\"\\r\\n                autocomplete=\\\"\\\"\\r\\n                >\\r\\n            <mat-icon matSuffix (click)=\\\"showConfPassword()\\\">{{hideconf ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.CONFPASSWORDHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n                *ngIf=\\\"!confPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.CONFPASSWORDREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"confPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        \\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-dialog-actions>\\r\\n        <div class=\\\"w-10\\\">\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                mat-button\\r\\n                (click) = 'onClose()'\\r\\n                mat-dialog-close>\\r\\n                <mat-icon>create</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.VALIDATEBTN' | translate\\\"\\r\\n                mat-raised-button\\r\\n                color = 'primary'\\r\\n                (click) = 'validate()'\\r\\n                class=\\\"floatRight\\\">\\r\\n                <mat-icon>create</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </mat-dialog-actions>\\r\\n    </form>\\r\\n  </div>\"","import { Routes } from '@angular/router';\r\nimport { AccountsComponent } from './accounts/accounts.component';\r\nimport { BankerProfileComponent } from './bankerProfile/bankerProfile.component';\r\nimport { BlockingComponent } from './blocking/blocking.component';\r\nimport { TransferComponent } from './transfer/transfer.component';\r\nimport {TransferOrderComponent} from './transfer-order/transfer-order.component';\r\nimport {TransferExternComponent} from './transfer-extern/transfer-extern.component';\r\nimport { BankerHomeComponent } from './banker-home/banker-home.component';\r\n// import all the sections needed.\r\n\r\n\r\n\r\n\r\nexport const sectionRoutesBanker: Routes = [\r\n    {path: 'home', component: BankerHomeComponent},\r\n    {path: 'accounts', component: AccountsComponent},\r\n    {path: 'profile', component: BankerProfileComponent},\r\n    {path: 'blocking', component: BlockingComponent},\r\n    {path: 'transfers', component: TransferComponent},\r\n    {path: 'transfersOrder', component: TransferOrderComponent},\r\n    {path: 'transfersExtern', component: TransferExternComponent}\r\n];\r\n\r\n\r\n","module.exports = \"mat-dialog-content{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n  text-align: center;\\r\\n  color: #2BBBAD;\\r\\n  padding-bottom: 10px;\\r\\n  font-size: 3rem;\\r\\n}\\r\\n\\r\\n.account-card{\\r\\n  width: 50%;\\r\\n  margin-left: 25%;\\r\\n}\\r\\n\\r\\n.mat-card-image{\\r\\n  width: 20%!important;\\r\\n}\\r\\n\\r\\n.info{\\r\\n  margin: 25px;\\r\\n}\\r\\n\"","module.exports = \"<h1 mat-dialog-title [innerHTML]=\\\"'BANKER.BLOCKING.BLOCKTITLE' | translate\\\"></h1>\\r\\n<div mat-card-avatar class=\\\"account-header-image\\\"></div>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <form class=\\\"blocking-form\\\" #justif>\\r\\n    <mat-form-field class=\\\"w-8\\\">\\r\\n      <input \\r\\n        matInput \\r\\n        placeholder=\\\"{{ 'FORMS.OBJECTPLACEHOLDER' | translate}}\\\" \\r\\n        required\\r\\n        #object\\r\\n        >\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"w-8\\\">\\r\\n      <textarea\\r\\n        #message\\r\\n        maxlength=\\\"255\\\"\\r\\n        matInput\\r\\n        required\\r\\n        placeholder=\\\"{{ 'FORMS.JUSTIFICATIONPLACEHOLDER' | translate}}\\\"\\r\\n        matTextareaAutosize\\r\\n        matAutosizeMinRows=\\\"3\\\"\\r\\n        matAutosizeMaxRows=\\\"10\\\"\\r\\n        required=\\\"\\\"\\r\\n        ></textarea>\\r\\n      <mat-hint align=\\\"end\\\">{{message.value.length}} / 255</mat-hint>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <div class=\\\"w-10\\\">\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n      mat-button\\r\\n      mat-dialog-close\\r\\n      (click)=\\\"onClose()\\\"\\r\\n    ></button>\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.BLOCKBTN' | translate\\\"\\r\\n      mat-raised-button\\r\\n      class=\\\"floatRight\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"block(object.value, message.value)\\\"\\r\\n      type=\\\"submit\\\"\\r\\n    ></button>\\r\\n  </div>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \".accounts-card{\\r\\n  width: 80%;\\r\\n  margin-left: 10%;\\r\\n  margin-top: 5rem;\\r\\n}\\r\\n\\r\\n\\r\\nmat-card-title{\\r\\n  background: rgb(0, 128, 128);\\r\\n  position: absolute;\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.account-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n  border-radius: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n.refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"accounts-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'BANKER.BLOCKING.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"account-container mat-elevation-z8\\\">\\n      <div class=\\\"account-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- AMOUNT Column -->\\n        <ng-container matColumnDef=\\\"amount\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.AMOUNT' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.balance}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- CURRENCY CODE Column -->\\n        <ng-container matColumnDef=\\\"code\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.CODE' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.code}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Account type Column -->\\n        <ng-container matColumnDef=\\\"type\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTTYPE' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.type}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Status type Column -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.STATUS' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Action Column -->\\n        <ng-container matColumnDef=\\\"select\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACTION' | translate\\\" *matHeaderCellDef></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\">\\n            <button\\n              *ngIf=\\\"canBlock(row.status)\\\"\\n              mat-raised-button\\n              color='accent'\\n              (click)=\\\"showBlockDiag(row.id)\\\">\\n              <mat-icon>lock_outline</mat-icon>\\n            </button>\\n            <button\\n              *ngIf=\\\"!canBlock(row.status)\\\"\\n              mat-raised-button\\n              color='primary'\\n              (click)=\\\"showDeblockDiag(row.id)\\\">\\n              <mat-icon>lock_open</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n        <mat-row *matRowDef='let row; columns: displayedColumns;'>\\n        </mat-row>\\n      </mat-table>\\n      <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n      <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n      <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n        <mat-icon>cached</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n\\n</div>\\n\"","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {Account} from '../../../Classes/Account';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\nimport {ErrorHandling} from '../../../Classes/ErrorHandling';\nimport { BlockAccountService } from '../../../Services/block-account.service';\nimport { AccountListService } from '../../../Services/account-list.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-blocking',\n  templateUrl: './blocking.component.html',\n  styleUrls: ['./blocking.component.css'],\n  providers: [BlockAccountService, AccountListService]\n})\n\nexport class BlockingComponent implements OnInit, AfterViewInit {\n  public loading = false;\n  public displayedColumns = ['code', 'amount', 'type', 'status', 'select'];\n  public dataSource: MatTableDataSource<Account>;\n  public accounts: Account[] = [];\n  public msg = new ErrorHandling(this.errorMsg);\n  public empty = false;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    private blockService: BlockAccountService,\n    private accountsList: AccountListService,\n    private translateService: TranslateService\n  ) { }\n\n  public ngOnInit() {\n    this.initListAccount();\n  }\n\n  public initListAccount() {\n    this.loading = true;\n    this.accountsList.getAccountsList().subscribe(\n      data => {\n        this.accounts = data;\n        if (this.accounts.length == 0){\n          this.empty = true;\n        } else {\n          this.empty = false;\n          this.convertToType();\n          this.convertToStatus();\n          this.translateService.onLangChange.subscribe(\n            data => {\n              this.translateType();\n              this.translateStatus();\n            }\n          );\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.accounts);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n      }\n    );\n  }\n\n  public ngAfterViewInit() {\n  }\n\n  public applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public showBlockDiag(id): void{\n    const dialogRef = this.dialog.open(BlockDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : this.getAccount(id)\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      const msg = new ErrorHandling(this.errorMsg);\n      if (result != -1) {\n        this.blockAccount(id, result.object, result.justif);\n      }\n    });\n  }\n  \n  public blockAccount(id, object, justif){\n    this.loading = true;\n    this.blockService.blockAccount(id, object, justif).subscribe(\n      data => {\n        this.initListAccount();\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public showDeblockDiag(id): void{\n    const dialogRef = this.dialog.open(DeblockDialogComponent, {\n      width: '50%',\n      height: '95%',\n      disableClose: true,\n      data : this.getAccount(id)\n    });\n    \n    dialogRef.afterClosed().subscribe(result => {\n      const msg = new ErrorHandling(this.errorMsg);\n      if (result == 0) {\n        this.deblockAccount(id);\n      }\n    });\n  }\n\n  public deblockAccount(id){\n    this.loading = true;\n    this.blockService.deblockAccount(id).subscribe(\n      data => {\n        this.initListAccount();\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public getAccount(id): Account {\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].id === id) {\n        return this.accounts[i];\n      }\n    }\n    return null;\n  }\n\n  public canBlock(status):boolean {\n    if (status == 'Valid' || status == 'Valide') {\n      return true;\n    } else if (status == 'Blocked' || status == 'Bloqué')  {\n      return false;\n    } else {\n      return false;\n    }\n  }\n\n  public convertToType(){\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].type.toString() == '1') {\n        this.translateService.get(\"TYPEACCOUNT.CURRENT\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type.toString() == '2') {\n        this.translateService.get(\"TYPEACCOUNT.SAVING\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type.toString() == '3') {\n        this.translateService.get(\"TYPEACCOUNT.CUREURO\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type.toString() == '4') {\n        this.translateService.get(\"TYPEACCOUNT.CURDOL\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else {\n        this.translateService.get(\"TYPEACCOUNT.UNKOWN\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      }\n    }\n  }\n\n  public convertToStatus(){\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].status.toString() == '0') {\n        this.translateService.get(\"STATUSACCOUNT.WAITING\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status.toString() == '1') {\n        this.translateService.get(\"STATUSACCOUNT.VALID\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status.toString() == '2') {\n        this.translateService.get(\"STATUSACCOUNT.VALID\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status.toString() == '3') {\n        this.translateService.get(\"STATUSACCOUNT.BLOCKED\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status.toString() == '4') {\n        this.translateService.get(\"STATUSACCOUNT.DELETED\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else {\n        this.translateService.get(\"STATUSACCOUNT.UNKOWN\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      }\n    }\n  }\n\n  public translateType(){\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].type == \"Current\" || this.accounts[i].type == \"Courant\" ){\n        this.translateService.get(\"TYPEACCOUNT.CURRENT\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type == \"Saving\" || this.accounts[i].type == \"Epargne\" ) {\n        this.translateService.get(\"TYPEACCOUNT.SAVING\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type == \"Current Euro\" || this.accounts[i].type == \"Courant euro\" ) {\n        this.translateService.get(\"TYPEACCOUNT.CUREURO\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else if (this.accounts[i].type == \"Current Euro\" || this.accounts[i].type == \"Courant euro\" ) {\n       this.translateService.get(\"TYPEACCOUNT.CURDOL\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      } else {\n        this.translateService.get(\"TYPEACCOUNT.UNKOWN\").subscribe(\n          data => this.accounts[i].type = data\n        );\n      }\n    }\n  }\n\n  public translateStatus(){\n    for (let i = 0; i < this.accounts.length; i++) {\n      if (this.accounts[i].status == \"En attente\" || this.accounts[i].status == \"Waiting\" ){\n        this.translateService.get(\"STATUSACCOUNT.WAITING\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status == \"Valide\" || this.accounts[i].status == \"Valid\" ) {\n        this.translateService.get(\"STATUSACCOUNT.VALID\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status == \"Bloqué\" || this.accounts[i].status == \"Blocked\" ) {\n        this.translateService.get(\"STATUSACCOUNT.BLOCKED\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else if (this.accounts[i].status == \"Supprimé\" || this.accounts[i].status == \"Deleted\" ) {\n       this.translateService.get(\"STATUSACCOUNT.DELETED\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      } else {\n        this.translateService.get(\"STATUSACCOUNT.UNKOWN\").subscribe(\n          data => this.accounts[i].status = data\n        );\n      }\n    }\n  }\n\n  public refresh(): void{\n    this.initListAccount();\n  }\n}\n\n/** dynamic component : block account dialog **/\n@Component({\n  selector: 'app-block-dialog',\n  templateUrl: 'blockDialog.html',\n  styleUrls: ['blockDialog.css']\n})\n\nexport class BlockDialogComponent implements  OnInit {\n\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<BlockDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public account: Account\n  ) {\n  }\n\n\n  public block(object, justif): void{\n    const result = {\n      object : object,\n      justif: justif\n    }\n    this.dialogRef.close(result);\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit(): void{\n  }\n}\n\n\n/** dynamic component : deblock account dialog **/\n@Component({\n  selector: 'app-deblock-dialog',\n  templateUrl: 'deblockDialog.html',\n  styleUrls: ['deblockDialog.css']\n})\n\nexport class DeblockDialogComponent implements  OnInit {\n\n  public justif_text = '';\n  public justif_img = '';\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<BlockDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public account: Account\n  ) {\n  }\n\n  public deblock(): void{\n    this.dialogRef.close(0);\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit(): void{\n  }\n}\n","module.exports = \"mat-dialog-content{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n  text-align: center;\\r\\n  color: #2BBBAD;\\r\\n  padding-bottom: 10px;\\r\\n  font-size: 3rem;\\r\\n}\\r\\n\\r\\n.account-card{\\r\\n  width: 50%;\\r\\n  margin-left: 25%;\\r\\n}\\r\\n\\r\\n.mat-card-image{\\r\\n  width: 20%!important;\\r\\n}\\r\\n\\r\\n.info{\\r\\n  margin: 25px;\\r\\n}\\r\\n\\r\\n.justif-img{\\r\\n  width: 100%;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.justif-text{\\r\\n  text-align: justify;\\r\\n  margin-top: 3rem;\\r\\n  padding: 1rem;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<h1 mat-dialog-title [innerHTML]=\\\"'BANKER.BLOCKING.DEBLOCKTITLE' | translate\\\"></h1>\\r\\n<div mat-card-avatar class=\\\"account-header-image\\\"></div>\\r\\n<mat-dialog-content>\\r\\n\\r\\n</mat-dialog-content>\\r\\n  <img class=\\\"justif-img\\\" [src]=\\\"justif_img\\\" onerror=\\\"this.src='assets/img/photo_not_found.jpg'\\\">\\r\\n  <p class=\\\"justif-text\\\">{{justif_text}}</p>\\r\\n<mat-dialog-actions>\\r\\n  <div class=\\\"w-10\\\">\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n      mat-button\\r\\n      mat-dialog-close\\r\\n      (click)=\\\"onClose()\\\"\\r\\n    ></button>\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.DEBLOCKBTN' | translate\\\"\\r\\n      mat-raised-button\\r\\n      class=\\\"floatRight\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"deblock()\\\"\\r\\n    ></button>\\r\\n  </div>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \"div{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ndiv h3{\\r\\n    margin-bottom: 25px;\\r\\n}\"","module.exports = \"<div>\\r\\n    <h3 [innerHTML]=\\\"'LOGOUT.LOGOUTMSG' | translate\\\"></h3>\\r\\n    <button \\r\\n        [innerHTML]=\\\"'GENERAL.NO' | translate\\\"\\r\\n        mat-button mat-dialog-close></button>\\r\\n    <button \\r\\n        [innerHTML]=\\\"'GENERAL.YES' | translate\\\"\\r\\n        mat-raised-button \\r\\n        color=\\\"accent\\\" \\r\\n        (click)=\\\"logout()\\\" >\\r\\n    </button>\\r\\n</div>\"","module.exports = \".transfer-card{\\r\\n  width: 80%;\\r\\n  margin-left: 10%;\\r\\n  margin-top: 5rem;\\r\\n}\\r\\n\\r\\n\\r\\nmat-card-title{\\r\\n  background: teal;\\r\\n  position: absolute;\\r\\n  /* right: 0; */\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n}\\r\\n\\r\\n\\r\\n.transfer-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n}\\r\\n\\r\\n\\r\\n.refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"transfer-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'BANKER.TRANSFEREXTERN.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"transfer-container mat-elevation-z8\\\">\\n      <div class=\\\"transfer-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- SENDER ACCOUNT CODE Column -->\\n        <ng-container matColumnDef=\\\"sender_code\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTCODES' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.sender_code}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- SENDER BANK Column -->\\n        <ng-container matColumnDef=\\\"sender_bank\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.BANK' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.sender_bank}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- RECEIVER ACCOUNT CODE Column -->\\n        <ng-container matColumnDef=\\\"receiver_code\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.BANK' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.receiver_code}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- RECEIVER BANK Column -->\\n        <ng-container matColumnDef=\\\"receiver_bank\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.BANK' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.receiver_bank}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Date Column -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.DATE' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.date}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Amount type Column -->\\n        <ng-container matColumnDef=\\\"amount\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.AMOUNT' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Status Column -->\\n        <ng-container matColumnDef=\\\"status\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.STATUS' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n        <mat-row *matRowDef='let row; columns: displayedColumns;'>\\n        </mat-row>\\n      </mat-table>\\n      <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n      <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n      <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n        <mat-icon>cached</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatDialog, MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\nimport {Transfer} from '../../../Classes/Transfer';\nimport {ErrorHandling} from '../../../Classes/ErrorHandling';\nimport { ExternTransfersListService } from '../../../Services/extern-transfers-list.service';\n\n@Component({\n  selector: 'app-transfer-extern',\n  templateUrl: './transfer-extern.component.html',\n  styleUrls: ['./transfer-extern.component.css'],\n  providers: [ExternTransfersListService]\n})\nexport class TransferExternComponent implements OnInit {\n  public loading = false;\n  public displayedColumns = ['sender_code' , 'sender_bank', 'receiver_code' , 'receiver_bank', 'date', 'amount', 'status'];\n  public dataSource: MatTableDataSource<Transfer>;\n  public transfers: Transfer[] = [];\n  public empty = false;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    public transfersList: ExternTransfersListService\n  ) { }\n\n  public ngOnInit(): void{\n    this.initListTransfer();\n  }\n\n  public initListTransfer(): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    \n    this.transfersList.getTransfersList().subscribe(\n      data => {\n         this.transfers = data;\n         if (this.transfers.length == 0) {\n           this.empty = true;\n         } else {\n           this.empty = false;\n         }\n        // Assign the data to the data source for the table to render\n        this.dataSource = new MatTableDataSource(this.transfers);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public refresh(): void{\n    this.initListTransfer();\n  }\n}\n","module.exports = \"mat-dialog-content{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n  text-align: center;\\r\\n  color: teal;\\r\\n  border-bottom: 1px solid;\\r\\n  padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n.account-card{\\r\\n  width: 50%;\\r\\n  margin-left: 25%;\\r\\n}\\r\\n\\r\\n.mat-card-image{\\r\\n  width: 20%!important;\\r\\n}\\r\\n\\r\\n.info{\\r\\n  margin: 25px;\\r\\n}\\r\\n\\r\\n.justif-img{\\r\\n  width: 100%;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.justif-text{\\r\\n  text-align: justify;\\r\\n  margin-top: 3rem;\\r\\n  padding: 1rem;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<h1 mat-dialog-title [innerHTML]=\\\"'BANKER.TRANSFERORDER.DIAGTITLE' | translate\\\"></h1>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"transfer-container\\\">\\r\\n    <mat-table [dataSource]=\\\"dataSource\\\">\\r\\n      <!-- ID Column -->\\r\\n      <ng-container matColumnDef=\\\"id\\\">\\r\\n        <mat-header-cell [innerHTML]=\\\"'GENERAL.ID' | translate\\\" *matHeaderCellDef> </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- RECEIVER ACCOUNT CODE Column -->\\r\\n      <ng-container matColumnDef=\\\"code_receiver\\\">\\r\\n        <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTCODE' | translate\\\" *matHeaderCellDef> </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.receiver_code}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Amount type Column -->\\r\\n      <ng-container matColumnDef=\\\"amount\\\">\\r\\n        <mat-header-cell [innerHTML]=\\\"'GENERAL.AMOUNT' | translate\\\" *matHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.amount}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Bank Column -->\\r\\n      <ng-container matColumnDef=\\\"bank\\\">\\r\\n        <mat-header-cell [innerHTML]=\\\"'GENERAL.BANK' | translate\\\" *matHeaderCellDef></mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.bank}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\r\\n      <mat-row *matRowDef='let row; columns: displayedColumns;'>\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\r\\n\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <div class=\\\"w-10\\\">\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n      mat-button\\r\\n      mat-dialog-close\\r\\n    ></button>\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.REJECTBTN' | translate\\\"\\r\\n      mat-raised-button\\r\\n      class=\\\"floatRight\\\"\\r\\n      color=\\\"accent\\\"\\r\\n      (click)=\\\"reject()\\\"\\r\\n    ></button>\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.VALIDATEBTN' | translate\\\"\\r\\n      mat-raised-button\\r\\n      class=\\\"floatRight\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n    ></button>\\r\\n  </div>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \".transfer-card{\\r\\n  width: 80%;\\r\\n  margin-left: 10%;\\r\\n  margin-top: 5rem;\\r\\n}\\r\\n\\r\\n\\r\\nmat-card-title{\\r\\n  background: teal;\\r\\n  position: absolute;\\r\\n  /* right: 0; */\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n}\\r\\n\\r\\n\\r\\n.transfer-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n}\\r\\n\\r\\n\\r\\n.refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"transfer-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'BANKER.TRANSFERORDER.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"transfer-container mat-elevation-z8\\\">\\n      <div class=\\\"transfer-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- EMPLOYER ACCOUNT CODE Column -->\\n        <ng-container matColumnDef=\\\"employer_code\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTCODE' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- EMPLOYER NAME Column -->\\n        <ng-container matColumnDef=\\\"employer_name\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.NAME' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.employer_name}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Date Column -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.DATE' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.date}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Total number of transfers Column -->\\n        <ng-container matColumnDef=\\\"nbr\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.TOTAL' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.nbr}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Action Column -->\\n        <ng-container matColumnDef=\\\"action\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACTION' | translate\\\" *matHeaderCellDef></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\">\\n            <button\\n              mat-raised-button\\n              color='accent'\\n              (click)=\\\"showDiag(row.id)\\\">\\n              <mat-icon>eye</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n        <mat-row *matRowDef='let row; columns: displayedColumns;'>\\n        </mat-row>\\n      </mat-table>\\n      <!--app-empty-table *ngIf=\\\"empty\\\"></app-empty-table-->\\n      <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n      <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n        <mat-icon>cached</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n\\n</div>\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\nimport {Transfer} from '../../../Classes/Transfer';\nimport {ErrorHandling} from '../../../Classes/ErrorHandling';\n\nimport {OrderTransfer} from '../../../Classes/OrderTransfer';\n\n@Component({\n  selector: 'app-transfer-order',\n  templateUrl: './transfer-order.component.html',\n  styleUrls: ['./transfer-order.component.css'],\n  providers: []\n})\nexport class TransferOrderComponent implements OnInit {\n\n  public loading = false;\n  public displayedColumns = ['employer_code' , 'employer_name' , 'date', 'nbr', 'action'];\n  public dataSource: MatTableDataSource<OrderTransfer>;\n  public transfers: OrderTransfer[] = [];\n  public empty = false;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar\n  ) { }\n\n  public ngOnInit(): void{\n    this.initListTransfers();\n  }\n\n  public initListTransfers(): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    /*this.transfersOrderList.getAccountsList().subscribe(\n      data => {\n        this.transfers = data;\n        if (this.transfers.length == 0 ){\n          this.empty = true;\n        } else {\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.transfers);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );*/\n    this.transfers.push(\n      new OrderTransfer(\n        1,\n        'THW00001DA',\n        'Senouci Nur El Imane',\n        '12/12/2018',\n        3\n      ),\n      new OrderTransfer(\n        2,\n        'THW00002DA',\n        'Djaoud Kawthar',\n        '15/02/2018',\n        2)\n    );\n    this.dataSource = new MatTableDataSource<OrderTransfer>(this.transfers);\n  }\n\n  public applyFilter(filterValue: string): void{\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public showDiag(id): void{\n    const dialogRef = this.dialog.open(JustifOrderComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : id\n    });\n    this.loading = true;\n    dialogRef.afterClosed().subscribe(result => {\n      const msg = new ErrorHandling(this.errorMsg);\n      if (result !== -1) {\n      } else {\n        msg.showErrorMsg('Error when getting result', 0);\n        this.loading = false;\n      }\n    });\n  }\n\n  public refresh(): void{\n    this.initListTransfers();\n  }\n}\n\n\n@Component({\n  selector: 'app-order-justif-dialog',\n  templateUrl: 'justifOrderDialog.html',\n  styleUrls: ['justifOrderDialog.css']\n})\n\nexport class JustifOrderComponent implements  OnInit {\n\n  public displayedColumns = ['id', 'code_receiver' , 'amount', 'bank'];\n  public dataSource: MatTableDataSource<Transfer>;\n  public transfers: Transfer[] = [];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<JustifOrderComponent>,\n    @Inject(MAT_DIALOG_DATA) public id: number\n  ) {\n  }\n\n  public validate(): void {\n    this.dialogRef.close(1);\n  }\n\n  public reject(): void{\n    this.dialogRef.close(0);\n  }\n\n  public close(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit(): void{\n  }\n}\n","module.exports = \"mat-dialog-content{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n  text-align: center;\\r\\n  color: #2BBBAD;\\r\\n  padding-bottom: 10px;\\r\\n  font-size: 3rem;\\r\\n}\\r\\n\\r\\n.account-card{\\r\\n  width: 50%;\\r\\n  margin-left: 25%;\\r\\n}\\r\\n\\r\\n.mat-card-image{\\r\\n  width: 20%!important;\\r\\n}\\r\\n\\r\\n.info{\\r\\n  margin: 25px;\\r\\n}\\r\\n\\r\\n.justif-img{\\r\\n  width: 100%;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.justif-text{\\r\\n  text-align: justify;\\r\\n  margin-top: 3rem;\\r\\n  padding: 1rem;\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<h1 mat-dialog-title [innerHTML]=\\\"'BANKER.TRANSFER.JUSTIFDIALOG' | translate\\\"></h1>\\r\\n<div \\r\\n  mat-card-avatar \\r\\n  class=\\\"justif-img\\\">\\r\\n    <img \\r\\n      class=\\\"justif-img\\\" \\r\\n      [src]=\\\"transfer.url_justif\\\"\\r\\n      onerror=\\\"this.src='assets/img/photo_not_found.jpg'\\\"\\r\\n      >\\r\\n  </div>\\r\\n\\r\\n<mat-dialog-content></mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n  <div class=\\\"w-10\\\">\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n      mat-button\\r\\n      mat-dialog-close\\r\\n      (click)=\\\"onClose()\\\"\\r\\n    ></button>\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.VALIDATEBTN' | translate\\\"\\r\\n      mat-raised-button\\r\\n      class=\\\"floatRight\\\"\\r\\n      color=\\\"primary\\\"\\r\\n      (click)=\\\"validate()\\\"\\r\\n    ></button>\\r\\n    <button\\r\\n      [innerHTML]=\\\"'GENERAL.REJECTBTN' | translate\\\"\\r\\n      mat-raised-button\\r\\n      class=\\\"floatRight\\\"\\r\\n      color=\\\"accent\\\"\\r\\n      (click)=\\\"reject()\\\"\\r\\n    ></button>\\r\\n  </div>\\r\\n</mat-dialog-actions>\\r\\n\"","module.exports = \".transfer-card{\\r\\n  width: 80%;\\r\\n  margin-left: 10%;\\r\\n  margin-top: 5rem;\\r\\n}\\r\\n\\r\\n\\r\\nmat-card-title{\\r\\n  background: rgb(0, 128, 128);\\r\\n  position: absolute;\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.transfer-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n  border-radius: 20px;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-column-id{\\r\\n  max-width: 30px;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-column-date{\\r\\n  max-width: 85px;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-column-amount, .mat-column-bank,{\\r\\n  max-width: 85px;\\r\\n}\\r\\n\\r\\n\\r\\n.refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"transfer-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'BANKER.TRANSFER.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"transfer-container mat-elevation-z8\\\">\\n      <div class=\\\"transfer-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n        <!-- SENDER ACCOUNT CODE Column -->\\n        <ng-container matColumnDef=\\\"code_sender\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTCODES' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.num_acc_sender}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- RECEIVER ACCOUNT CODE Column -->\\n        <ng-container matColumnDef=\\\"code_receiver\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACCOUNTCODER' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.num_acc_receiver}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Date Column -->\\n        <ng-container matColumnDef=\\\"date\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.DATE' | translate\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.created_at}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Amount type Column -->\\n        <ng-container matColumnDef=\\\"amount\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.AMOUNT' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.montant_virement}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Bank Column -->\\n        <ng-container matColumnDef=\\\"bank\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.BANK' | translate\\\" *matHeaderCellDef mat-sort-header></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.code_bnk_receiver}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Action Column -->\\n        <ng-container matColumnDef=\\\"action\\\">\\n          <mat-header-cell [innerHTML]=\\\"'GENERAL.ACTION' | translate\\\" *matHeaderCellDef></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\">\\n            <button\\n              mat-raised-button\\n              color='accent'\\n              (click)=\\\"showDiag(row.id_virement)\\\">\\n              <mat-icon>visibility</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n        <mat-row *matRowDef='let row; columns: displayedColumns;'>\\n        </mat-row>\\n      </mat-table>\\n      <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n      <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n      <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n        <mat-icon>cached</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n\\n</div>\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {BlockDialogComponent} from '../blocking/blocking.component';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\nimport {ErrorHandling} from '../../../Classes/ErrorHandling';\nimport {Transfer} from '../../../Classes/Transfer';\nimport {Account} from '../../../Classes/Account';\nimport { ValidateTransferService } from '../../../Services/validate-transfer.service';\nimport { TransfersListService } from '../../../Services/transfers-list.service';\nimport { RequestHandlerService } from '../../../Services/request-handler.service';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css'],\n  providers: [ValidateTransferService, TransfersListService]\n})\nexport class TransferComponent implements OnInit{\n\n  public loading = false;\n  public displayedColumns = ['code_sender' , 'code_receiver' , 'date', 'amount', 'bank', 'action'];\n  public dataSource: MatTableDataSource<Transfer>;\n  public transfers: Transfer[] = [];\n  public msg = new ErrorHandling(this.errorMsg);\n  public empty = false;\n  public path = '';\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  constructor(\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    public validateTransfer: ValidateTransferService,\n    public transfersList: TransfersListService,\n    public  api: RequestHandlerService\n  ) { \n  }\n\n  public setPath(){\n    this.path = this.api.tharwaURL + this.api.justifUrl;\n  }\n\n  public ngOnInit() {\n    this.setPath();\n    this.initListTransfer();\n  }\n\n  public initListTransfer() {\n    this.loading = true;\n    this.transfersList.getTransfersList().subscribe(\n      data => {\n        this.transfers = data;\n        if (this.transfers.length == 0){\n          this.empty = true;  \n        } else {\n          this.empty = false;  \n          // Assign the data to the data source for the table to render\n          this.transfers.forEach(transfer => {\n            transfer.url_justif = this.path + transfer.url_justif;\n            if (transfer.num_acc_sender.toString().length <6){\n              let temp = '';\n              for (let i = transfer.num_acc_sender.toString().length; i< 6; i++){\n                temp += '0' ;\n              }\n              transfer.num_acc_sender = 'THW' + temp + transfer.num_acc_sender + 'DZD';\n            }\n\n            if (transfer.num_acc_receiver.toString().length <6){\n              let temp = '';\n              for (let i = transfer.num_acc_receiver.toString().length; i< 6; i++){\n                temp += '0' ;\n              }\n              transfer.num_acc_receiver = 'THW' + temp + transfer.num_acc_receiver + 'DZD';\n            }\n          });\n        } \n        this.dataSource = new MatTableDataSource(this.transfers);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public applyFilter(filterValue: string): void{\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public showDiag(id): void{\n    const transfer: Transfer = this.getTransfer(id);\n    const dialogRef = this.dialog.open(JustificationComponent, {\n      width: '50%',\n      height: '80%',\n      disableClose: true,\n      data : transfer\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      const msg = new ErrorHandling(this.errorMsg);\n      if (result == 1) {\n        this.validateTranfer(transfer.id_justif);\n      } else if (result == 0) {\n        this.rejectTranfer(transfer.id_justif);\n      }\n    });\n  }\n\n  public validateTranfer(id){\n    this.loading = true;\n    this.validateTransfer.validateTransfer(id).subscribe(\n      data => {\n        this.initListTransfer();\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public rejectTranfer(id){\n    this.loading = true;\n    this.validateTransfer.rejectTransfer(id).subscribe(\n      data => {\n        this.initListTransfer();\n        this.loading = false;\n      },\n      error => {\n        this.msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public getTransfer(id): Transfer {\n    for (let i = 0; i < this.transfers.length; i++) {\n      if (this.transfers[i].id_virement == id) {\n        return this.transfers[i];\n      }\n    }\n    return null;\n  }\n\n  public refresh(): void{\n    this.initListTransfer();\n  }\n}\n\n\n@Component({\n  selector: 'app-justif-dialog',\n  templateUrl: 'justifDialog.html',\n  styleUrls: ['justifDialog.css']\n})\n\nexport class JustificationComponent implements  OnInit {\n\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<BlockDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public transfer: Transfer\n  ) {\n  }\n\n  public validate(): void{\n    this.dialogRef.close(1);\n  }\n\n  public reject(): void{\n    this.dialogRef.close(0);\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"\"","import { Component} from '@angular/core';\n@Component({\n  selector: 'app-components',\n  templateUrl: './components.component.html',\n  styleUrls: ['./components.component.css']\n})\nexport class ComponentsComponent{\n  constructor( ) {\n  }\n}\n","module.exports = \"h3{\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<h3 [innerHTML]=\\\"'GENERAL.EMPTYTAB' | translate\\\"></h3>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-table',\n  templateUrl: './empty-table.component.html',\n  styleUrls: ['./empty-table.component.css']\n})\nexport class EmptyTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"mat-dialog-content{\\r\\n    text-align: center;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n#codeDialogImg{\\r\\n    width: 9rem;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"<form class=\\\"choose-code-form\\\" #chooseCodeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(type.value)\\\">\\r\\n        <h1 [innerHTML]=\\\"'LOGIN.DIALOGTITLE' | translate\\\" mat-dialog-title></h1>\\r\\n\\r\\n        <mat-dialog-content>\\r\\n            <img src=\\\"assets/img/verification_code.png\\\" id=\\\"codeDialogImg\\\">\\r\\n            <h5 [innerHTML]=\\\"'LOGIN.MSG2' | translate\\\"></h5>\\r\\n            <mat-radio-group [formControl]=\\\"type\\\">\\r\\n                <mat-radio-button value=0>Email</mat-radio-button>\\r\\n                <mat-radio-button value=1>SMS</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n        </mat-dialog-content>\\r\\n\\r\\n        <mat-dialog-actions>\\r\\n            <div class=\\\"w-10\\\">\\r\\n                <button\\r\\n                    [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                    mat-button\\r\\n                    (click)=\\\"onExit()\\\"\\r\\n                    ></button>\\r\\n                <button\\r\\n                    [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"accent\\\"\\r\\n                    class=\\\"textWhite floatRight\\\"\\r\\n                    [disabled]=\\\"type.invalid\\\"\\r\\n                    type=\\\"submit\\\"></button>\\r\\n            </div>\\r\\n        </mat-dialog-actions>\\r\\n    </form>\\r\\n\"","module.exports = \"mat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n#codeDialogImg{\\r\\n    width: 10rem;\\r\\n    margin-bottom: 10px;\\r\\n}\"","module.exports = \"<form class=\\\"code-form\\\" #codeForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(code.value)\\\">\\r\\n    <h1 [innerHTML]=\\\"'LOGIN.DIALOGTITLE' | translate\\\" mat-dialog-title></h1>\\r\\n\\r\\n    <mat-dialog-content>\\r\\n        <img src=\\\"assets/img/verification_code.png\\\" id=\\\"codeDialogImg\\\">\\r\\n        <h5 [innerHTML]=\\\"'LOGIN.MSG1' | translate\\\"></h5>\\r\\n\\r\\n            <div class=\\\"codeInput\\\">\\r\\n                <mat-form-field hintLabel=\\\"Verification code\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        #code\\r\\n                        maxlength=\\\"4\\\"\\r\\n                        [formControl]=\\\"codeFormControl\\\"\\r\\n                        [errorStateMatcher]=\\\"matcher\\\"\\r\\n                        placeholder=\\\"{{ 'FORMS.CODEPLACEHOLDER' | translate}}\\\">\\r\\n                    <mat-hint align=\\\"end\\\">{{code.value?.length || 0}}/4</mat-hint>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.CODEUNVALID' | translate\\\"\\r\\n                        *ngIf=\\\"codeFormControl.hasError('code') && !codeFormControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n        <h6 class=\\\"greyText\\\">{{message}}</h6>\\r\\n        <a class=\\\"orangeText\\\" (click)=\\\"getCode()\\\">\\r\\n            <h6 [innerHTML]=\\\"'LOGIN.ONTHERCODE' | translate\\\"></h6>\\r\\n        </a>\\r\\n    </mat-dialog-content>\\r\\n\\r\\n    <mat-dialog-actions>\\r\\n        <div class=\\\"w-10\\\">\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                mat-button\\r\\n                mat-dialog-close\\r\\n                ></button>\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"accent\\\"\\r\\n                class=\\\"textWhite floatRight\\\"\\r\\n                [disabled]=\\\"codeFormControl.invalid\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                ></button>\\r\\n        </div>\\r\\n    </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \".container{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: url('loginbackground.jpg') no-repeat fixed;\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.container .row{\\r\\n    height: 100%;\\r\\n    padding-top: 4%;\\r\\n    font-size: 19px;\\r\\n}\\r\\n\\r\\n.bankdescriptionArea, .loginArea{\\r\\n    height: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.bankdescriptionArea{\\r\\n    padding: 67px;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.container .row .login-form{\\r\\n    margin-top: 3rem;\\r\\n}\\r\\n\\r\\n.container .row .login-form mat-form-field{\\r\\n    width: 60%;\\r\\n    margin-bottom: 2rem;\\r\\n    color: #070705;\\r\\n}\\r\\n\\r\\n.container .row .login-form mat-form-field .mat-form-field-empty.mat-form-field-label{\\r\\n    font-size: 25px;\\r\\n}\\r\\n\\r\\n.container .row img{\\r\\n    width: 25%;\\r\\n    margin: 8rem 0 0 38%;\\r\\n}\\r\\n\\r\\n.bankDescription{\\r\\n    text-align: justify;\\r\\n    padding-top: 2rem;\\r\\n\\r\\n}\\r\\n\\r\\n.container .row button:enabled{\\r\\n    background: #ff9800;\\r\\n    color : white;\\r\\n}\\r\\n\\r\\n.loginArea{\\r\\n    background: rgba(255,255,255,0.5);\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n}\\r\\n\\r\\n.input[matAutocomplete]{\\r\\n    background: black;\\r\\n}\\r\\n\\r\\nmat-form-field mat-icon{\\r\\n    color: #595857;\\r\\n}\\r\\n\\r\\nmat-error{\\r\\n    color: #040404;\\r\\n}\\r\\n\\r\\nmat-progress-bar{\\r\\n    position: absolute;\\r\\n    z-index: 1000;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"hidden-xs col-sm-6 bankdescriptionArea\\\">\\n        <h1 [innerHTML]=\\\"'LOGIN.THRNAME' | translate\\\"></h1>\\n        <p  [innerHTML]=\\\"'LOGIN.THRDESC' | translate\\\" class=\\\"bankDescription\\\"></p>\\n    </div>\\n    <div class=\\\"col-sm-6 loginArea \\\">\\n      <img src=\\\"assets/img/logo.png\\\" class=\\\"img-responsive\\\"/>\\n      <form class=\\\"login-form\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row\\\">\\n          <mat-form-field class=\\\"email-field\\\">\\n              <input\\n                  matInput\\n                  placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\n                  [formControl]=\\\"emailFormControl\\\"\\n                  [errorStateMatcher]=\\\"matcher\\\"\\n                  #mail\\n                  >\\n              <mat-hint [innerHTML]=\\\"'FORMS.EMAILHINT' | translate\\\"></mat-hint>\\n              <mat-error\\n                [innerHTML]=\\\"'FORMS.EMAILUNVALID' | translate\\\"\\n                *ngIf=\\\"emailFormControl.hasError('email') && emailFormControl.hasError('pattern') && !emailFormControl.hasError('required')\\\">\\n              </mat-error>\\n              <mat-error\\n                [innerHTML]=\\\"'FORMS.EMAILREQUIRED' | translate\\\"\\n                *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n              </mat-error>\\n              <mat-icon matSuffix>email</mat-icon>\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <mat-form-field class=\\\"password-field\\\">\\n              <input\\n                matInput\\n                placeholder=\\\"{{ 'FORMS.PASSWORDPLACEHOLDER' | translate}}\\\"\\n                [formControl]=\\\"passwordFormControl\\\"\\n                [errorStateMatcher]=\\\"matcherPassword\\\"\\n                [type]=\\\"hide ? 'password' : 'text'\\\"\\n                autocomplete=\\\"\\\"\\n                #password >\\n              <mat-icon matSuffix (click)=\\\"showPassword()\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n              <mat-hint [innerHTML]=\\\"'FORMS.PASSWORDHINT' | translate\\\"></mat-hint>\\n              <mat-error\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\n                *ngIf=\\\"passwordFormControl.hasError('minLength') && !passwordFormControl.hasError('required')\\\">\\n              </mat-error>\\n              <mat-error\\n                [innerHTML]=\\\"'FORMS.PASSWORDREQUIRED' | translate\\\"\\n                *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n              </mat-error>\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"row\\\">\\n           <a class=\\\"tealText boldText\\\">\\n              <h5 [innerHTML]=\\\"'LOGIN.PASSWORDFORGOTTEN' | translate\\\"></h5>\\n            </a>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <button\\n              [innerHTML]=\\\"'LOGIN.LOGINBTN' | translate\\\"\\n              mat-raised-button\\n              type=\\\"submit\\\"\\n              [disabled]=\\\"passwordFormControl.invalid || emailFormControl.invalid\\\">\\n              <mat-icon>send</mat-icon>\\n            </button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { AuthorisationService } from '../../Services/authorisation.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ErrorHandling } from '../../Classes/ErrorHandling';\nimport { FormControl } from '@angular/forms';\nimport { Inject } from '@angular/core';\nimport { InputValidation } from '../../Classes/InputValidation';\nimport { LoginService } from '../../Services/login.service';\nimport { MAT_DIALOG_DATA, MatDialog} from '@angular/material';\nimport { MatDialogRef } from '@angular/material';\nimport { MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/internal/Observable';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [LoginService]\n})\nexport class LoginComponent implements OnInit{\n  public hide = true;\n  public code = '';\n  public type  = 0;\n  public loading = false;\n  public tokenValue = 'UNKNOWN';\n\n  constructor(\n    private connexion: LoginService,\n    private authorisation: AuthorisationService,\n    private route: Router,\n    public errorMsg: MatSnackBar,\n    public dialog: MatDialog,\n  ) {}\n\n  public ngOnInit(): void{\n  }\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n    Validators.pattern(\n      /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n  ]);\n\n  passwordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n\n  matcher = new InputValidation();\n  matcherPassword = new InputValidation();\n\n  /** If the user has already a valid code**/\n  public hasCode() {\n    const message = 'If your code lived more than an hour, pleaze ask for another code ';\n    // show the user a dialog to enter the code\n    this.openCodeDialog(message);\n  }\n\n  /* If the user click on login button*/\n  public onSubmit() {\n    /** if the user submit show him a dialog to choose how to get code : sms or email*/\n    this.openChooseCodeDialog();\n  }\n\n  /* If the user click on the eye icon to show/hide password */\n  public showPassword() {\n    this.hide = !this.hide;\n  }\n\n  public openChooseCodeDialog() {\n    /** open the dialog **/\n    const dialogRef = this.dialog.open(ChooseCodeDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    /** when the dialog is closed show the user a dialog where he can enter the verification code**/\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1 || result == 0 ) {\n        this.type = result;\n        this.loading = true;\n        this.chooseManner();\n      } else {\n        let errMsg;\n        errMsg = new ErrorHandling(this.errorMsg);\n        errMsg.handleError('unkown error');\n      }\n    });\n  }\n\n  public chooseManner(): void{\n    const msg = new ErrorHandling(this.errorMsg);\n\n    this.connexion.login(this.emailFormControl.value, this.passwordFormControl.value, this.type).subscribe(\n      data => {\n        if (this.type == 0) {\n          msg.showErrorMsg('Check your email', this.emailFormControl.value);\n        } else {\n          msg.showErrorMsg('Check your phone', '');\n        }\n        this.loading = false;\n        const message = 'Still waiting for the code ?';\n        this.openCodeDialog(message);\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public openCodeDialog(message) {\n    /** open the dialog and transmit some data into : type : mail or sms, email and the password**/\n    const dialogRef = this.dialog.open(CodeDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : {\n        type : this.type ,\n        email : this.emailFormControl.value,\n        password : this.passwordFormControl.value,\n        message:  message\n      }\n    });\n\n    /** when closing the dialog send call the sendCodefunction to send the code to the backend**/\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.code = result;\n        this.sendCode();\n      } else {\n        let errMsg;\n        errMsg = new ErrorHandling(this.errorMsg);\n        errMsg.handleError('unkown error');\n      }\n    });\n  }\n\n  public sendCode(): boolean {\n    this.loading = true;\n    let success = false;\n    /** send the code by calling the authorisation function of the authorisation service **/\n    this.authorisation.authorisation(this.code, this.emailFormControl.value, this.passwordFormControl.value).subscribe(\n      data => {\n        /** if the request succeeded, store the token, and redirect the user to the appropriate route**/\n        this.authorisation.setToken(data['access_token'],data['refresh_token'], data['user_type'],data['user_id']);\n        if (data['user_type'] == 2) {\n          this.route.navigate(['/manager/' + data['user_id'] + '/dashboard']);\n        } else if (data['user_type'] == 1) {\n          this.route.navigate(['/banker/' + data['user_id'] + '/home']);\n        } else {\n          let errMsg;\n          errMsg = new ErrorHandling(this.errorMsg);\n          errMsg.showErrorMsg('unkown user type', 'resend code');\n        }\n        this.loading = false;\n        success = true;\n      },\n      error => {\n        const message = 'Invalid code, reinter it, or';\n        this.openCodeDialog(message);\n        let errMsg;\n        errMsg = new ErrorHandling(this.errorMsg);\n        errMsg.handleError(error);\n        this.loading = false;\n      }\n    );\n    return success;\n  }\n}\n\n/** dynamic component : chooseCodeDialog **/\n@Component({\n  selector: 'app-choose-code-dialog',\n  templateUrl: 'chooseCodeDialog.html',\n  styleUrls: ['chooseCodeDialog.css'],\n})\nexport class ChooseCodeDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<ChooseCodeDialogComponent>) {\n    }\n\n  type = new FormControl('', [\n    Validators.required\n  ]);\n\n  onSubmit(choix) {\n    this.dialogRef.close(choix);\n  }\n  onExit() {\n    this.dialogRef.close(-1);\n  }\n}\n\n/** dynamic component : codeDialog **/\n@Component({\n  selector: 'app-code-dialog',\n  templateUrl: 'codeDialog.html',\n  styleUrls: ['codeDialog.css'],\n  providers: [LoginService]\n})\n\nexport class CodeDialogComponent {\n\n  public code = '';\n  public message = '';\n\n  /** form for the code : length= 4, number*/\n  public codeFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(4),\n    Validators.maxLength(4),\n    Validators.pattern(/[0-9]+/)\n  ]);\n\n  public matcher = new InputValidation();\n  constructor(\n    public errorMsg: MatSnackBar,\n    private connexion: LoginService,\n    public dialogRef: MatDialogRef<CodeDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      this.message = this.data.message;\n  }\n  \n  public onSubmit(code): void{\n      this.dialogRef.close(code);\n  }\n\n  public getCode(): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.connexion.login(this.data.email, this.data.password, this.data.type).subscribe(\n      data => {\n        if (this.data.type == 0) {\n          msg.showErrorMsg('Check your email', this.data.email);\n        } else if (this.data.type == 1) {\n          msg.showErrorMsg('Check your phone', '');\n        }\n      },\n      error => {\n        msg.handleError(error);\n      }\n    );\n  }\n}\n","import { Routes } from '@angular/router';\r\n// import all the sections needed.\r\nimport { BankersListComponent } from './bankers-list/bankers-list.component';\r\nimport { BanksComponent } from './banks/banks.component';\r\nimport { CommissionsComponent } from './commissions/commissions.component';\r\nimport { ManagerProfileComponent } from './managerProfile/managerProfile.component';\r\nimport { ManagerHomeComponent } from './manager-home/manager-home.component';\r\n\r\n\r\nexport const sectionRoutesManager: Routes = [\r\n  {path: 'dashboard', component: ManagerHomeComponent},\r\n  {path: 'bankers', component: BankersListComponent},\r\n  {path: 'banks', component: BanksComponent},\r\n  {path: 'commissions', component: CommissionsComponent},\r\n  {path: 'profile', component: ManagerProfileComponent},\r\n];\r\n\r\n\r\n","module.exports = \".add_profil_img img{\\r\\n    width: 15rem;\\r\\n    margin-bottom: 4rem;\\r\\n}\\r\\n\\r\\n.add_profil_img{\\r\\n    text-align: center!important;\\r\\n}\\r\\n\\r\\n#addBankerDialog{\\r\\n    text-align: center;\\r\\n    height: 40rem;\\r\\n}\\r\\n\\r\\nmat-form-field{\\r\\n    display: block;\\r\\n}\\r\\n\\r\\nform{\\r\\n    margin-top: 3rem;\\r\\n}\\r\\n\\r\\n.upload-zone{\\r\\n    margin-top: 3rem;\\r\\n    margin-bottom: 11rem;\\r\\n}\\r\\n\\r\\n.imgBtn {\\r\\n    background: #ff5722;\\r\\n    color: white;\\r\\n    padding-top: 10px;\\r\\n}\\r\\n\\r\\n.imgArea{\\r\\n    border: 1px dotted black;\\r\\n    width: 80%;\\r\\n    margin: 5rem 0 0 10%\\r\\n}\\r\\n\\r\\n.noImg{\\r\\n    margin-bottom: 5px;\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.ui-fileupload-row {\\r\\n    display: table-row;\\r\\n}\\r\\n\\r\\n.ui-fileupload-row > div {\\r\\ndisplay: table-cell;\\r\\npadding: .5em 1em;\\r\\nvertical-align: middle;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    margin-right: 3rem;\\r\\n}\\r\\n\"","module.exports = \"<mat-horizontal-stepper [linear]=\\\"false\\\" #stepper=\\\"matHorizontalStepper\\\" id=\\\"addBankerDialog\\\">\\r\\n  <mat-step>\\r\\n    <form>\\r\\n      <ng-template matStepLabel>{{generalInfo}}</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n          matInput\\r\\n          placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\r\\n          [formControl]=\\\"nameControl\\\"\\r\\n          [errorStateMatcher]=\\\"nameMatcher\\\"\\r\\n          required>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.NAMEUNVALID' | translate\\\"\\r\\n          *ngIf=\\\"nameControl.hasError('pattern') && !nameControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.NAMEREQUIRED' | translate\\\"\\r\\n          *ngIf=\\\"nameControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n          matInput\\r\\n          placeholder=\\\"{{ 'FORMS.FIRSTNAMEPLACEHOLDER' | translate}}\\\"\\r\\n          [formControl]=\\\"firstnameControl\\\"\\r\\n          [errorStateMatcher]=\\\"firstnameMatcher\\\"\\r\\n          required>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.FIRSTNAMEUNVALID' | translate\\\"\\r\\n          *ngIf=\\\"firstnameControl.hasError('pattern') && !firstnameControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.FIRSTNAMEREQUIRED' | translate\\\"\\r\\n          *ngIf=\\\"nameControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n          matInput\\r\\n          placeholder=\\\"{{ 'FORMS.PASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n          [type]=\\\"hide ? 'password' : 'text'\\\"\\r\\n          [formControl]=\\\"passwordControl\\\"\\r\\n          [errorStateMatcher]=\\\"matcherPassword\\\"\\r\\n          required>\\r\\n        <mat-icon matSuffix (click)=\\\"showPassword()\\\" color=\\\"primary\\\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.PASSWORDUNVALID' | translate\\\"\\r\\n          *ngIf=\\\"passwordControl.hasError('pattern') && !passwordControl.hasError('minLength') && !passwordControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n          *ngIf=\\\"!passwordControl.hasError('pattern') && passwordControl.hasError('minLength') && !passwordControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.PASSWORDREQUIRED' | translate\\\"\\r\\n          *ngIf=\\\"!passwordControl.hasError('pattern') && !passwordControl.hasError('minLength') && passwordControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button mat-dialog-close [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"></button>\\r\\n        <button mat-raised-button color=\\\"accent\\\" matStepperNext [innerHTML]=\\\"'GENERAL.NEXTBTN' | translate\\\"></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <form>\\r\\n      <ng-template matStepLabel>{{contactInfo}}</ng-template>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n          matInput\\r\\n          placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\r\\n          [errorStateMatcher]=\\\"addressMatcher\\\"\\r\\n          [formControl]=\\\"addressControl\\\"\\r\\n          required>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.ADDRESSREQUIRED' | translate\\\"\\r\\n          *ngIf=\\\"addressControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n          matInput\\r\\n          placeholder=\\\"{{ 'FORMS.PHONEPLACEHOLDER' | translate}}\\\"\\r\\n          [errorStateMatcher]=\\\"phoneMatcher\\\"\\r\\n          [formControl]=\\\"phoneControl\\\"\\r\\n          required>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.PHONEUNVALID' | translate\\\"\\r\\n          *ngIf=\\\"phoneControl.hasError('pattern') && phoneControl.hasError('minLength') && phoneControl.hasError('maxLength') && !emailControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n        <mat-error\\r\\n          [innerHTML]=\\\"'FORMS.PHONEREQUIRED' | translate\\\"\\r\\n          *ngIf=\\\"phoneControl.hasError('required')\\\">\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field>\\r\\n        <input\\r\\n          matInput\\r\\n          placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\r\\n          [errorStateMatcher]=\\\"emailMatcher\\\"\\r\\n          [formControl]=\\\"emailControl\\\"\\r\\n          required>\\r\\n      </mat-form-field>\\r\\n      <div>\\r\\n        <button mat-button mat-dialog-close [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"></button>\\r\\n        <button mat-button matStepperPrevious [innerHTML]=\\\"'GENERAL.BACKBTN' | translate\\\"></button>\\r\\n        <button mat-raised-button color=\\\"accent\\\" matStepperNext [innerHTML]=\\\"'GENERAL.NEXTBTN' | translate\\\"></button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel> {{profile}}</ng-template>\\r\\n    <form id=\\\"addBanker\\\" #addBankerForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(imagefile)\\\" >\\r\\n      <div class=\\\"row upload-zone\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"image\\\" [innerHTML]=\\\"'FORMS.SELECTIMG' | translate\\\"></label>\\r\\n            <div class=\\\"mat-raised-button imgBtn\\\">\\r\\n              <input (change)=\\\"ajouterImageCatalogue($event)\\\"\\r\\n                accept=\\\"image/*\\\"\\r\\n                type=\\\"file\\\"\\r\\n                id=\\\"image\\\"\\r\\n                style=\\\"position: absolute;opacity: 0;\\\"\\r\\n                name=\\\"imagefile\\\">\\r\\n              <mat-icon>file_upload</mat-icon>\\r\\n            </div>\\r\\n            <div class=\\\"row imgArea\\\">\\r\\n              <div *ngIf=\\\"!imagefile\\\">\\r\\n                  <p class=\\\"noImg\\\" [innerHTML]=\\\"'FORMS.NOIMG' | translate\\\"></p>\\r\\n              </div>\\r\\n              <div class=\\\"ui-fileupload-row\\\" *ngIf=\\\"imagefile\\\">\\r\\n                <div>\\r\\n                  {{imagefile.name}}\\r\\n                </div>\\r\\n                <div>\\r\\n                  {{formatSize(imagefile.size)}}\\r\\n                </div>\\r\\n                <div>\\r\\n                  <a (click)=\\\"removeImage($event)\\\"><mat-icon color=\\\"primary\\\">close</mat-icon></a>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"upload-zone-btn\\\">\\r\\n        <button \\r\\n            mat-button \\r\\n            mat-dialog-close\\r\\n            (click) = \\\"onClose()\\\"\\r\\n            [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"></button>\\r\\n        <button mat-button matStepperPrevious [innerHTML]=\\\"'GENERAL.BACKBTN' | translate\\\"></button>\\r\\n        <button\\r\\n          [innerHTML]=\\\"'GENERAL.RESETBTN' | translate\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          (click)=\\\"stepper.reset()\\\"></button>\\r\\n        <button\\r\\n          [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          type=\\\"submit\\\"></button>\\r\\n      </div>\\r\\n  </form>\\r\\n  </mat-step>\\r\\n</mat-horizontal-stepper>\\r\\n\"","module.exports = \".profile-img{\\r\\n    width: 40px;\\r\\n    border-radius: 50%;    \\r\\n  }\\r\\n\\r\\n  .bankers-card{\\r\\n    width: 90%;\\r\\n    margin-left: 5%;\\r\\n    margin-top: 5rem;\\r\\n}\\r\\n\\r\\n  .add-banker-btn{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n  mat-card-title{\\r\\n  background: teal;\\r\\n  position: absolute;\\r\\n  /* right: 0; */\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n}\\r\\n\\r\\n  .bankers-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n}\\r\\n\\r\\n  /* Column Widths */\\r\\n\\r\\n  .mat-column-id,\\r\\n.mat-column-photo{\\r\\n  max-width: 50px;\\r\\n}\\r\\n\\r\\n  .mat-column-action{\\r\\n  max-width: 40px;\\r\\n}\\r\\n\\r\\n  .mat-column-fullname, \\r\\n.mat-column-phone{\\r\\n  max-width: 120px;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n  #deleteBtn{\\r\\n  padding: 0;\\r\\n  min-width: 35px!important;\\r\\n}\\r\\n\\r\\n  .refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"bankers-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'MANAGER.BANKERS.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"bankers-container mat-elevation-z8\\\">\\n      <div class=\\\"bankers-header\\\">\\n        <mat-form-field>\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n        </mat-form-field>\\n      </div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Photo Column -->\\n        <ng-container matColumnDef=\\\"photo\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.PHOTO' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"><img src=\\\"{{row.photo}}\\\" class=\\\"profile-img\\\"></mat-cell>\\n        </ng-container>\\n\\n        <!-- Fullname Column -->\\n        <ng-container matColumnDef=\\\"fullname\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.FULLNAME' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} {{row.firstname}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Address Column -->\\n        <ng-container matColumnDef=\\\"address\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.ADDRESS' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.address}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Phone Column -->\\n        <ng-container matColumnDef=\\\"phone\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.PHONE' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.phone_number}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"email\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.EMAIL' | translate\\\"></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Action Column -->\\n        <ng-container matColumnDef=\\\"action\\\">\\n          <mat-header-cell *matHeaderCellDef [innerHTML]=\\\"'GENERAL.ACTION' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\">\\n            <button mat-raised-button\\n                    color='accent'\\n                    id=\\\"deleteBtn\\\"\\n                    (click)=\\\"deleteBankerDialog(row.id)\\\">\\n              <mat-icon>clear</mat-icon>\\n            </button>\\n          </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n        <mat-row *matRowDef='let row; columns: displayedColumns;'></mat-row>\\n      </mat-table>\\n      <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n      <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n      <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n        <mat-icon>cached</mat-icon>\\n      </button>\\n      <button\\n        [innerHTML]=\\\"'GENERAL.ADDBTN' | translate\\\"\\n        mat-raised-button\\n        color='accent'\\n        (click) = 'addBankerDialog()'\\n        class=\\\"add-banker-btn\\\">\\n          <mat-icon>add</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n</div>\\n\"","import { Component, ViewChild, OnInit, AfterViewInit} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialogRef, MatDialog} from '@angular/material';\nimport { BankersListService } from '../../../Services/bankers-list.service';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\nimport { AddBankerService } from '../../../Services/add-banker.service';\nimport { Validators, FormControl } from '@angular/forms';\nimport { Banker } from '../../../Classes/Banker';\nimport { RequestHandlerService } from '../../../Services/request-handler.service';\nimport { DeleteBankerService } from '../../../Services/delete-banker.service';\nimport {InputValidation} from '../../../Classes/InputValidation';\n\n@Component({\n  selector: 'app-bankers-list',\n  templateUrl: './bankers-list.component.html',\n  styleUrls: ['./bankers-list.component.css'],\n  providers: [BankersListService, AddBankerService, DeleteBankerService]\n})\nexport class BankersListComponent implements OnInit, AfterViewInit {\n  public loading = false;\n  public displayedColumns = ['photo', 'fullname', 'address', 'phone', 'email', 'action'];\n  public dataSource: MatTableDataSource<Banker>;\n  public users: Banker[] = [];\n  public path = '';\n  public generalInfo = 'General Information';\n  public contactInfo = 'Contact Information';\n  public profile = 'profile';\n  public empty = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private bankersList: BankersListService,\n    private addBankerService: AddBankerService,\n    private deleteBankerService: DeleteBankerService,\n    public errorMsg: MatSnackBar,\n    public dialog: MatDialog,\n    private apiService: RequestHandlerService\n  ) {\n     this.path = this.apiService.imgUrl;\n  }\n\n  public ngOnInit(): void {\n    this.initListBanker();\n  }\n\n  public initListBanker(): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.bankersList.getBankersList().subscribe(\n      data => {\n        this.users = data;\n        if (this.users.length == 0) {\n          this.empty = true;\n        } else {\n          for (let i = 0; i < this.users.length; i++) {\n            this.users[i].photo = this.apiService.tharwaURL + 'images/customer_min/' + this.users[i].photo;\n          }\n          // Assign the data to the data source for the table to render\n          this.dataSource = new MatTableDataSource(this.users);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        }\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n  /**\n   * Set the paginator and sort after the view init since this component will\n   * be able to query its view for the initialized paginator and sort.\n   */\n\n  public ngAfterViewInit() {\n  }\n\n  public applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public addBankerDialog(): void{\n    const dialogRef = this.dialog.open(BankerDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result!=-1) {\n        this.loading = true;\n        const banker = {\n          email: result.email,\n          password: result.password,\n          phone_number: result.phone_number,\n          name : result.name,\n          firstname : result.firstname,\n          address : result.address\n        };\n        this.addBanker(banker, result.photo);\n      }\n    });\n  }\n\n  public addBanker(banker, photo): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.addBankerService.addBanker(banker).subscribe(\n      data => {\n        const id = data.user_id;\n        this.addBankerService.postImage(photo, id).subscribe(\n          resp => {\n            this.loading = false;\n            this.initListBanker();\n          },\n          error => {\n            msg.handleError(error);\n            this.loading = false;\n            this.initListBanker();\n          }\n        );\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public deleteBankerDialog(id): void{\n    const dialogRef = this.dialog.open(DeleteBankerComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    /** when the dialog is closed show the user a dialog where he can enter the verification code**/\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.deleteBanker(id)\n      }\n    });\n  }\n\n  public deleteBanker(id): void{\n    let loading = true;\n    this.deleteBankerService.deleteBanker(id).subscribe(\n      data => {\n        this.initListBanker();\n      },\n      error => {\n        const msg = new ErrorHandling(this.errorMsg);\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public refresh(): void{\n    this.initListBanker();\n  }\n}\n\n\n/** dynamic component : Add banker form dialog **/\n@Component({\n  selector: 'app-add-banker-dialog',\n  templateUrl: 'addBankerDialog.html',\n  styleUrls: ['addBankerDialog.css']\n})\n\nexport class BankerDialogComponent implements  OnInit {\n  public hide = true;\n  public imagefile:  File;\n  public generalInfo = 'Informations Generales';\n  public contactInfo = 'Informations de contacts';\n  public profile = 'profile';\n  public nameControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z][a-zA-Z ]+/)\n  ]);\n  public nameMatcher = new InputValidation();\n  public firstnameControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z][a-zA-Z ]+/)\n  ]);\n  public firstnameMatcher = new InputValidation();\n  public passwordControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,12}$/)\n  ]);\n  public matcherPassword = new InputValidation();\n  public addressControl = new FormControl('', [\n    Validators.required\n  ]);\n  public addressMatcher = new InputValidation();\n  public phoneControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[0-9]*/),\n    Validators.minLength(10),\n    Validators.maxLength(10)\n  ]);\n  public phoneMatcher = new InputValidation();\n\n  public emailControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n    Validators.pattern(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n  ]);\n  public emailMatcher = new InputValidation();\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<BankerDialogComponent>\n  ) { }\n\n  public onSubmit(File): void{\n    const banker = {\n      email: this.emailControl.value,\n      password: this.passwordControl.value,\n      phone_number: this.phoneControl.value,\n      name : this.nameControl.value,\n      firstname : this.firstnameControl.value,\n      address : this.addressControl.value,\n      photo: this.imagefile\n    };\n    this.dialogRef.close(banker);\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public showPassword(): void{\n    this.hide = !this.hide;\n  }\n  public ajouterImageCatalogue(event: any) {\n    this.imagefile = event.target.files.item(0);\n  }\n\n  public isImage(file: File): boolean {\n    return /^image\\//.test(file.type);\n  }\n\n  public removeImage(event: any): void{\n    this.imagefile = null;\n  }\n\n  public formatSize(bytes): string{\n    if (bytes == 0) {\n      return '0 B';\n    }\n    const k = 1000,\n      dm = 3,\n      sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n      i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  public ngOnInit(): void {}\n}\n\n\n/** dynamic component : delete dialog **/\n@Component({\n  selector: 'app-delete-banker-dialog',\n  templateUrl: 'deleteBankerDialog.html',\n  styleUrls: ['deleteBankerDialog.css']\n})\n\nexport class DeleteBankerComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteBankerComponent>\n  ) { }\n\n  public delete(): void{\n    this.dialogRef.close(true);\n  }\n}\n","module.exports = \"div{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ndiv h3{\\r\\n    margin-bottom: 25px;\\r\\n}\"","module.exports = \"<div>\\r\\n    <h3 [innerHTML]=\\\"'MANAGER.BANKERS.DELETEMSG' | translate\\\"></h3>\\r\\n    <button\\r\\n        [innerHTML]=\\\"'GENERAL.NO' | translate\\\"\\r\\n        mat-button\\r\\n        mat-dialog-close></button>\\r\\n    <button\\r\\n        [innerHTML]=\\\"'GENERAL.YES' | translate\\\"\\r\\n        mat-raised-button\\r\\n        color=\\\"accent\\\"\\r\\n        (click)=\\\"delete()\\\"></button>\\r\\n</div>\\r\\n\"","module.exports = \"mat-form-field{\\r\\n    display: block;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\n#addBank{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nmat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\"","module.exports = \"<form id=\\\"addBank\\\" #addBankForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1 mat-dialog-title [innerHTML]=\\\"'MANAGER.BANKS.ADDBANKDIAG' | translate\\\"></h1>\\r\\n\\r\\n    <mat-dialog-content>\\r\\n        <mat-form-field hintLabel=\\\"3 letters Code\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #id\\r\\n                maxlength=\\\"3\\\"\\r\\n                [formControl]=\\\"idControl\\\"\\r\\n                [errorStateMatcher]=\\\"idMatcher\\\"\\r\\n                placeholder=\\\"{{ 'FORMS.CODEPLACEHOLDER' | translate}}\\\">\\r\\n            <mat-hint align=\\\"end\\\">{{id.value?.length || 0}}/3</mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.CODEUNVALID' | translate\\\"\\r\\n                *ngIf=\\\"idControl.hasError('pattern') && !idControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n              [innerHTML]=\\\"'FORMS.CODEREQUIRED' | translate\\\"\\r\\n              *ngIf=\\\"idControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-icon matSuffix color=\\\"primary\\\">create</mat-icon>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"name-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #name\\r\\n                [formControl]=\\\"nameControl\\\"\\r\\n                [errorStateMatcher]=\\\"nameMatcher\\\"\\r\\n                placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\r\\n                >\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.NAMEHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n              [innerHTML]=\\\"'FORMS.NAMEUNVALID' | translate\\\"\\r\\n              *ngIf=\\\"nameControl.hasError('pattern') && !nameControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.NAMEREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"nameControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"social-reason-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                placeholder=\\\"{{ 'FORMS.SOCIALREASONPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"socialReasonControl\\\"\\r\\n                [errorStateMatcher]=\\\"socialReasonMatcher\\\"\\r\\n                #socialReason\\r\\n                >\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.SOCIALREASONHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.SOCIALREASONREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"emailControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-icon matSuffix color=\\\"primary\\\">info_outline</mat-icon>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"email-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"emailControl\\\"\\r\\n                [errorStateMatcher]=\\\"emailMatcher\\\"\\r\\n                #mail\\r\\n                >\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.EMAILHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.EMAILUNVALID' | translate\\\"\\r\\n                *ngIf=\\\"emailControl.hasError('email') && emailControl.hasError('pattern') && !emailControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.EMAILREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"emailControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-icon matSuffix color=\\\"primary\\\">email</mat-icon>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"address-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"addressControl\\\"\\r\\n                [errorStateMatcher]=\\\"addressMatcher\\\"\\r\\n                #address\\r\\n                >\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.ADDRESSHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.ADDRESSREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"addressControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\r\\n        </mat-form-field>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n        <div class=\\\"w-10\\\">\\r\\n            <button\\r\\n                mat-button\\r\\n                mat-dialog-close\\r\\n                (click) = \\\"onClose()\\\"\\r\\n                class=\\\"floatLeft\\\"\\r\\n                [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                ></button>\\r\\n            <button\\r\\n                mat-raised-button\\r\\n                color=\\\"accent\\\"\\r\\n                class=\\\"textWhite floatRight\\\"\\r\\n                [disabled]=\\\"\\r\\n                    idControl.invalid ||\\r\\n                    nameControl.invalid ||\\r\\n                    socialReasonControl.invalid ||\\r\\n                    emailControl.invalid ||\\r\\n                    addressControl.invalid\\\"\\r\\n                    [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n                type=\\\"submit\\\"></button>\\r\\n        </div>\\r\\n    </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \".profile-img{\\r\\n    width: 40px;\\r\\n    border-radius: 50%;    \\r\\n}\\r\\n\\r\\n.banks-card{\\r\\n    width: 90%;\\r\\n    margin-left: 5%;\\r\\n    margin-top: 5rem;\\r\\n}\\r\\n\\r\\n.add-bank-btn{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\nmat-card-title{\\r\\n  background: teal;\\r\\n  position: absolute;\\r\\n  width: 60%;\\r\\n  left: 20%;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n  padding: 1rem;\\r\\n  top: 2rem;\\r\\n}\\r\\n\\r\\n.banks-container{\\r\\n  background: white;\\r\\n  padding: 4rem;\\r\\n}\\r\\n\\r\\n/* Column Widths */\\r\\n\\r\\n.mat-column-id,\\r\\n.mat-column-code{\\r\\n  max-width: 50px;\\r\\n}\\r\\n\\r\\n.mat-column-action{\\r\\n  max-width: 80px;\\r\\n}\\r\\n\\r\\n#deleteBtn,\\r\\n#editBtn{\\r\\n  padding: 0;\\r\\n  min-width: 35px!important;\\r\\n}\\r\\n\\r\\n.refreshBtn{\\r\\n  top: -52px;\\r\\n  min-width: 0;\\r\\n  border-radius: 50%;\\r\\n  width: 50px;\\r\\n  height: 50px;\\r\\n  position: relative;\\r\\n  right: -29px;\\r\\n  color: #9f9f9f;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"banks-card\\\">\\n    <div mat-dialog-title>\\n      <mat-card-title [innerHTML]=\\\"'MANAGER.BANKS.TITLE' | translate\\\"></mat-card-title>\\n    </div>\\n    <mat-card-content>\\n\\n      <div class=\\\"banks-container mat-elevation-z8\\\">\\n        <div class=\\\"banks-header\\\">\\n          <mat-form-field>\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{ 'FORMS.FILTERPLACEHOLDER' | translate}}\\\">\\n          </mat-form-field>\\n        </div>\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n          <!-- Code Column -->\\n          <ng-container matColumnDef=\\\"code\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.CODE' | translate\\\"></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</mat-cell>\\n          </ng-container>\\n\\n          <!-- Name Column -->\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.NAME' | translate\\\"></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Social Reason Column -->\\n          <ng-container matColumnDef=\\\"social_reason\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.SOCIALREASON' | translate\\\"></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.social_reason}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Address Column -->\\n          <ng-container matColumnDef=\\\"address\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.ADDRESS' | translate\\\"></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\"> {{row.address}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Email Column -->\\n          <ng-container matColumnDef=\\\"email\\\">\\n              <mat-header-cell *matHeaderCellDef mat-sort-header [innerHTML]=\\\"'GENERAL.EMAIL' | translate\\\"></mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let row\\\"> {{row.email}} </mat-cell>\\n          </ng-container>\\n\\n          <!-- Action Column -->\\n          <ng-container matColumnDef=\\\"action\\\">\\n            <mat-header-cell *matHeaderCellDef [innerHTML]=\\\"'GENERAL.ACTION' | translate\\\"></mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n              <button mat-raised-button\\n                      color='primary'\\n                      id=\\\"editBtn\\\"\\n                      (click)=\\\"editBankDialog(row.id)\\\">\\n                <mat-icon>mode_edit</mat-icon>\\n              </button>\\n              <button mat-raised-button\\n                      color='accent'\\n                      id=\\\"deleteBtn\\\"\\n                      (click)=\\\"deleteBankDialog(row.id)\\\">\\n                <mat-icon>clear</mat-icon>\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n          <mat-row *matRowDef='let row; columns: displayedColumns;'></mat-row>\\n        </mat-table>\\n\\n        <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n        <mat-paginator [pageSizeOptions]='[5, 10, 25, 100]'></mat-paginator>\\n        <button mat-button (click)=\\\"refresh()\\\" class=\\\"floatRight refreshBtn\\\">\\n          <mat-icon>cached</mat-icon>\\n        </button>\\n        <button\\n          [innerHTML]=\\\"'GENERAL.ADDBTN' | translate\\\"\\n          mat-raised-button\\n          color='accent'\\n          (click) = 'addBankDialog()'\\n          class=\\\"add-bank-btn\\\">\\n          <mat-icon>add</mat-icon>\\n        </button>\\n      </div>\\n    </mat-card-content>\\n  </div>\\n\"","import { Component, ViewChild, OnInit, Inject} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource, MatSnackBar, MatDialogRef, MatDialog, MAT_DIALOG_DATA} from '@angular/material';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\nimport { Validators, FormControl } from '@angular/forms';\nimport { Bank } from '../../../Classes/Bank';\nimport { BanksListService } from '../../../Services/banks-list.service';\nimport { AddBankService } from '../../../Services/add-bank.service';\nimport { EditBankService } from '../../../Services/edit-bank.service';\nimport { DeleteBankService } from '../../../Services/delete-bank.service';\nimport { InputValidation } from '../../../Classes/InputValidation';\n\n\n@Component({\n  selector: 'app-banks',\n  templateUrl: './banks.component.html',\n  styleUrls: ['./banks.component.css'],\n  providers: [BanksListService, AddBankService, EditBankService, DeleteBankService]\n})\nexport class BanksComponent implements OnInit {\n\n  public displayedColumns = ['code', 'name', 'social_reason', 'address', 'email', 'action'];\n  public dataSource: MatTableDataSource<Bank>;\n  public banks: Bank[] = [];\n  public loading = false;\n  public empty = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private banksList: BanksListService,\n    private addBankService: AddBankService,\n    private deleteBankService: DeleteBankService,\n    private editBankService: EditBankService,\n    public errorMsg: MatSnackBar,\n    public dialog: MatDialog\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.initListBanks();\n  }\n\n  public initListBanks(): void {\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.banksList.getBanksList().subscribe(\n      data => {\n        this.banks = data;\n        if (this.banks.length == 0) {\n          this.empty = true;\n        } else{\n          this.empty = false;\n        }\n        this.dataSource = new MatTableDataSource(this.banks);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n        this.banks.push(new Bank('THR','Tharwa','SARL','Somewhere','tharwabank@gmail.com'));\n        this.dataSource = new MatTableDataSource(this.banks);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n      }\n    );\n  }\n  /**\n   * Set the paginator and sort after the view init since this component will\n   * be able to query its view for the initialized paginator and sort.\n   */\n\n  public applyFilter(filterValue: string): void{\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  public addBankDialog(): void{\n    const dialogRef = this.dialog.open(AddBankDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n        if (result!=-1) {\n          const bank = {\n            code: result.id,\n            name : result.name,\n            social_reason: result.social_reason,\n            address : result.address,\n            email: result.email\n          };\n          this.addBank(bank);\n        }\n    });\n\n  }\n\n  public addBank(bank): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.addBankService.addBank(bank).subscribe(\n      data => {\n        this.initListBanks();\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public deleteBankDialog(id): void{\n    const dialogRef = this.dialog.open(DeleteBankComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    /** when the dialog is closed show the user a dialog where he can enter the verification code**/\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.deleteBank(id);\n      }\n    });\n  }\n\n  public deleteBank(id): void{\n    this.loading = true;\n    this.deleteBankService.deleteBank(id).subscribe(\n      data => {\n        this.initListBanks();\n        this.loading = false;\n      },\n      error => {\n        const msg = new ErrorHandling(this.errorMsg);\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public editBankDialog(id): void{\n    const dialogRef = this.dialog.open(EditBankDialogComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : this.getBank(id)\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n        if (result!=1) {\n          const bank = {\n            code: result.id,\n            name : result.name,\n            social_reason: result.social_reason,\n            address : result.address,\n            email: result.email\n          };\n          this.editBank(id, bank);\n        }\n    });\n  }\n\n  public editBank(id, bank): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.editBankService.editBank(id, bank).subscribe(\n      data => {\n        this.initListBanks(); \n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public getBank(id): Bank {\n    for (let i = 0; i < this.banks.length; i++) {\n      if (this.banks[i].id === id) {\n        return this.banks[i];\n      }\n    }\n    return null;\n  }\n\n  public refresh(): void{\n    this.initListBanks();\n  }\n}\n\n\n/** dynamic component : Add bank form dialog **/\n\n@Component({\n  selector: 'app-add-bank-dialog',\n  templateUrl: 'addBankDialog.html',\n  styleUrls: ['addBankDialog.css']\n})\n\nexport class AddBankDialogComponent implements  OnInit {\n\n  public code = '';\n\n  public idControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z]+/),\n    Validators.maxLength(3),\n    Validators.minLength(3)\n  ]);\n\n  public idMatcher = new InputValidation();\n\n  public nameControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z][a-zA-Z ]+/)\n  ]);\n\n  public nameMatcher = new InputValidation();\n  public socialReasonControl = new FormControl('', [\n    Validators.required\n  ]);\n  public socialReasonMatcher = new InputValidation();\n  public addressControl = new FormControl('', [\n    Validators.required\n  ]);\n  public addressMatcher = new InputValidation();\n  public emailControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n    Validators.pattern(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n  ]);\n  public emailMatcher = new InputValidation();\n\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<AddBankDialogComponent>\n  ) { }\n\n  public onSubmit(): void{\n    const bank = {\n      email: this.emailControl.value,\n      id: this.idControl.value,\n      social_reason: this.socialReasonControl.value,\n      name : this.nameControl.value,\n      address : this.addressControl.value,\n    };\n    this.dialogRef.close(bank);\n  }\n\n  public onClose(){\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit(): void{}\n}\n\n\n/** dynamic component : edit bank form dialog **/\n\n@Component({\n  selector: 'app-edit-bank-dialog',\n  templateUrl: 'editBankDialog.html',\n  styleUrls: ['editBankDialog.css']\n})\n\nexport class EditBankDialogComponent implements  OnInit {\n\n  public code = '';\n\n  public idControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  public idMatcher = new InputValidation();\n\n  public nameControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  public nameMatcher = new InputValidation();\n  public socialReasonControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  public socialReasonMatcher = new InputValidation();\n  public addressControl = new FormControl('', [\n    Validators.required\n  ]);\n  public addressMatcher = new InputValidation();\n  public emailControl = new FormControl('', [\n    Validators.required,\n    Validators.email\n  ]);\n  public emailMatcher = new InputValidation();\n\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<EditBankDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public bank: Bank\n  ) { }\n\n  public onSubmit(): void {\n    let bank : Bank = new Bank(\n      this.idControl.value,\n      this.nameControl.value,\n      this.socialReasonControl.value,\n      this.addressControl.value,\n      this.emailControl.value);\n\n    if(this.idControl.pristine){\n      bank.id = this.bank.id;\n    }\n\n    if(this.nameControl.pristine){\n      bank.name = this.bank.name;\n    }\n\n    if(this.socialReasonControl.pristine){\n      bank.social_reason = this.bank.social_reason;\n    }\n\n    if(this.addressControl.pristine){\n      bank.address = this.bank.address;\n    }\n\n    if(this.emailControl.pristine){\n      bank.email = this.bank.email;\n    }\n\n    this.dialogRef.close(bank);\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public ngOnInit(): void {}\n}\n\n/** dynamic component : delete dialog **/\n@Component({\n  selector: 'app-delete-bank-dialog',\n  templateUrl: 'deleteBankDialog.html',\n  styleUrls: ['deleteBankDialog.css']\n})\n\nexport class DeleteBankComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteBankComponent>\n  ) { }\n\n  public delete(): void{\n    this.dialogRef.close(1);\n  }\n}\n","module.exports = \"div{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ndiv h3{\\r\\n    margin-bottom: 25px;\\r\\n}\"","module.exports = \"<div>\\r\\n        <h3 [innerHTML]=\\\"'MANAGER.BANKS.DELETEMSG' | translate\\\"></h3>\\r\\n        <button \\r\\n            mat-button \\r\\n            mat-dialog-close \\r\\n            [innerHTML]=\\\"'GENERAL.NO' | translate\\\"></button>\\r\\n        <button \\r\\n            mat-raised-button \\r\\n            color=\\\"accent\\\" \\r\\n            (click)=\\\"delete()\\\" \\r\\n            [innerHTML]=\\\"'GENERAL.YES' | translate\\\"></button>\\r\\n    </div>\"","module.exports = \"mat-form-field{\\r\\n    display: block;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\n#editBank{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nmat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\"","module.exports = \"<form id=\\\"editBank\\\" #editBankForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <h1 mat-dialog-title [innerHTML]=\\\"'MANAGER.BANKS.EDITBANKDIAG' | translate\\\"></h1>\\r\\n\\r\\n        <mat-dialog-content>\\r\\n            <mat-form-field hintLabel=\\\"3 letters Code\\\">\\r\\n                <input\\r\\n                    matInput\\r\\n                    #id\\r\\n                    maxlength=\\\"3\\\"\\r\\n                    [formControl]=\\\"idControl\\\"\\r\\n                    [errorStateMatcher]=\\\"idMatcher\\\"\\r\\n                    placeholder=\\\"{{ 'FORMS.CODEPLACEHOLDER' | translate}}\\\"\\r\\n                    [value]=\\\"bank.id\\\"\\r\\n                    >\\r\\n                <mat-hint align=\\\"end\\\">{{id.value?.length || 0}}/3</mat-hint>\\r\\n                <mat-error\\r\\n                    [innerHTML]=\\\"'FORMS.CODEUNVALID' | translate\\\"\\r\\n                    *ngIf=\\\"idControl.hasError('id') && !idControl.hasError('required')\\\">\\r\\n                </mat-error>\\r\\n                <mat-icon matSuffix color=\\\"primary\\\">create</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"name-field\\\">\\r\\n                <input\\r\\n                    matInput\\r\\n                    #name\\r\\n                    [formControl]=\\\"nameControl\\\"\\r\\n                    [errorStateMatcher]=\\\"nameMatcher\\\"\\r\\n                    placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\r\\n                    [value]=\\\"bank.name\\\"\\r\\n                    >\\r\\n                <mat-hint [innerHTML]=\\\"'FORMS.NAMEHINT' | translate\\\"></mat-hint>\\r\\n                <mat-error\\r\\n                    [innerHTML]=\\\"'FORMS.NAMEREQUIRED' | translate\\\"\\r\\n                    *ngIf=\\\"nameControl.hasError('required')\\\">\\r\\n                </mat-error>\\r\\n                <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"social-reason-field\\\">\\r\\n                <input\\r\\n                    matInput\\r\\n                    placeholder=\\\"{{ 'FORMS.SOCIALREASONPLACEHOLDER' | translate}}\\\"\\r\\n                    [formControl]=\\\"socialReasonControl\\\"\\r\\n                    [errorStateMatcher]=\\\"socialReasonMatcher\\\"\\r\\n                    #socialReason\\r\\n                    [value]=\\\"bank.social_reason\\\"\\r\\n                    >\\r\\n                <mat-hint [innerHTML]=\\\"'FORMS.SOCIALREASONHINT' | translate\\\"></mat-hint>\\r\\n                <mat-error\\r\\n                    [innerHTML]=\\\"'FORMS.SOCIALREASONREQUIRED' | translate\\\"\\r\\n                    *ngIf=\\\"emailControl.hasError('required')\\\">\\r\\n                </mat-error>\\r\\n                <mat-icon matSuffix color=\\\"primary\\\">info_outline</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"email-field\\\">\\r\\n                <input\\r\\n                    matInput\\r\\n                    placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\r\\n                    [formControl]=\\\"emailControl\\\"\\r\\n                    [errorStateMatcher]=\\\"emailMatcher\\\"\\r\\n                    #mail\\r\\n                    [value]=\\\"bank.email\\\"\\r\\n                    >\\r\\n                <mat-hint [innerHTML]=\\\"'FORMS.EMAILHINT' | translate\\\"></mat-hint>\\r\\n                <mat-error\\r\\n                    [innerHTML]=\\\"'FORMS.EMAILUNVALID' | translate\\\"\\r\\n                    *ngIf=\\\"emailControl.hasError('email') && !emailControl.hasError('required')\\\">\\r\\n                </mat-error>\\r\\n                <mat-error\\r\\n                    [innerHTML]=\\\"'FORMS.EMAILREQUIRED' | translate\\\"\\r\\n                    *ngIf=\\\"emailControl.hasError('required')\\\">\\r\\n                </mat-error>\\r\\n                <mat-icon matSuffix color=\\\"primary\\\">email</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"address-field\\\">\\r\\n                <input\\r\\n                    matInput\\r\\n                    placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\r\\n                    [formControl]=\\\"addressControl\\\"\\r\\n                    [errorStateMatcher]=\\\"addressMatcher\\\"\\r\\n                    #address\\r\\n                    [value]=\\\"bank.address\\\"\\r\\n                    >\\r\\n                <mat-hint [innerHTML]=\\\"'FORMS.ADDRESSHINT' | translate\\\"></mat-hint>\\r\\n                <mat-error\\r\\n                    [innerHTML]=\\\"'FORMS.ADDRESSREQUIRED' | translate\\\"\\r\\n                    *ngIf=\\\"addressControl.hasError('required')\\\">\\r\\n                </mat-error>\\r\\n                <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\r\\n            </mat-form-field>\\r\\n        </mat-dialog-content>\\r\\n        <mat-dialog-actions>\\r\\n            <div class=\\\"w-10\\\">\\r\\n                <button\\r\\n                    [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                    mat-button\\r\\n                    mat-dialog-close\\r\\n                    (click) = \\\"onClose()\\\"\\r\\n                    class=\\\"floatLeft\\\"></button>\\r\\n                <button\\r\\n                    [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n                    mat-raised-button\\r\\n                    color=\\\"accent\\\"\\r\\n                    class=\\\"textWhite floatRight\\\"\\r\\n                    type=\\\"submit\\\"></button>\\r\\n            </div>\\r\\n        </mat-dialog-actions>\\r\\n    </form>\\r\\n\"","module.exports = \"    .commissions-card{\\r\\n        width: 90%;\\r\\n        margin-left: 5%;\\r\\n        margin-top: 5rem;\\r\\n    }\\r\\n\\r\\n    mat-card-title{\\r\\n      background: teal;\\r\\n      position: absolute;\\r\\n      width: 60%;\\r\\n      left: 20%;\\r\\n      text-align: center;\\r\\n      color: white;\\r\\n      padding: 1rem;\\r\\n      top: 2rem;\\r\\n    }\\r\\n\\r\\n    .commissions-container{\\r\\n      background: white;\\r\\n      padding: 4rem;\\r\\n    }\\r\\n\\r\\n    /* Column Widths */\\r\\n\\r\\n    .mat-column-id{\\r\\n      max-width: 50px;\\r\\n    }\\r\\n\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"commissions-card\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'BANKER.COMMISSIONS.TITLE' | translate\\\"></mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"commissions-container mat-elevation-z8\\\">\\n      <mat-table [dataSource]=\\\"dataSource\\\">\\n\\n        <!-- Commission Column -->\\n        <ng-container matColumnDef=\\\"commission\\\">\\n          <mat-header-cell *matHeaderCellDef [innerHTML]=\\\"'GENERAL.FULLNAME' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.description}}</mat-cell>\\n        </ng-container>\\n\\n        <!-- Amount Column -->\\n        <ng-container matColumnDef=\\\"amount\\\">\\n          <mat-header-cell *matHeaderCellDef [innerHTML]=\\\"'GENERAL.AMOUNT' | translate\\\"></mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.valeur}}</mat-cell>\\n        </ng-container>\\n        \\n        <mat-header-row *matHeaderRowDef='displayedColumns'></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      </mat-table>\\n      <app-empty-table *ngIf=\\\"empty\\\"></app-empty-table>\\n    </div>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CommissionsListService } from '../../../Services/commissions-list.service';\nimport { MatTableDataSource, MatSnackBar, MatDialog } from '@angular/material';\nimport { Commission } from '../../../Classes/Commission';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\n\n@Component({\n  selector: 'app-commissions',\n  templateUrl: './commissions.component.html',\n  styleUrls: ['./commissions.component.css'],\n  providers: [CommissionsListService]\n})\nexport class CommissionsComponent implements OnInit {\n  public loading = false;\n  public displayedColumns = ['commission', 'amount'];\n  public dataSource: MatTableDataSource<Commission>;\n  public commissions: Commission[] = [];\n  public empty = false;\n\n  constructor(\n    public commissionsList: CommissionsListService,\n    public errorMsg: MatSnackBar,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n    this.initListCommissions();\n  }\n\n  public initListCommissions() {\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.commissionsList.getCommissionsList().subscribe(\n      data => {\n        this.commissions = data;\n        if (this.commissions.length == 0){\n          this.empty = true;\n        } else {\n            // Assign the data to the data source for the table to render\n            this.commissions.forEach(commission => {\n              if (commission.valeur == \"0\"){\n                commission.valeur =\" free\";\n              } else {\n                if (commission.type  == 1) {\n                  commission.valeur += \" DA\";\n                } else  {\n                  commission.valeur += \"%\";\n                }\n              }\n            });\n          this.dataSource = new MatTableDataSource(this.commissions);\n        }\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n}\n","module.exports = \"div{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\ndiv h3{\\r\\n    margin-bottom: 25px;\\r\\n}\"","module.exports = \"<div>\\r\\n    <h3 [innerHTML]=\\\"'LOGOUT.LOGOUTMSG' | translate\\\"></h3>\\r\\n    <button \\r\\n        [innerHTML]=\\\"'GENERAL.NO' | translate\\\"\\r\\n        mat-button \\r\\n        mat-dialog-close\\r\\n        ></button>\\r\\n    <button \\r\\n        [innerHTML]=\\\"'GENERAL.YES' | translate\\\"\\r\\n        mat-raised-button \\r\\n        color=\\\"accent\\\" \\r\\n        (click)=\\\"logout()\\\"\\r\\n        ></button>\\r\\n</div>\"","module.exports = \".dashboard-card{\\r\\n    margin-top: 5rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.operation-tab{\\r\\n    width: 90%;\\r\\n    margin-left: 5%;\\r\\n    height: 3000px;\\r\\n}\\r\\n\\r\\n.commissions-content{\\r\\n    padding: 3rem;\\r\\n    margin-top: 5rem;\\r\\n}\\r\\n\\r\\n.operations-content{\\r\\n    padding: 0rem 7rem 7rem 7rem;\\r\\n}\"","module.exports = \"<div class=\\\"dashboard-card\\\">\\n  <mat-card-content>\\n      <mat-tab-group class=\\\"operation-tab\\\" backgroundColor=\\\"primary\\\" color=\\\"accent\\\" dynamicHeight=\\\"true\\\">\\n        <mat-tab label=\\\"commissions\\\" >\\n          <ng-template mat-tab-label>\\n            <mat-icon>attach_money</mat-icon>\\n            Commissions\\n          </ng-template>\\n          <div class=\\\"commissions-content\\\" >\\n            <app-stat-commissions></app-stat-commissions>\\n          </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Operations\\\" >\\n          <ng-template mat-tab-label>\\n            <mat-icon>bubble_chart</mat-icon>\\n            Operations\\n          </ng-template>\\n          <div class=\\\"operations-content\\\">\\n            <app-operations></app-operations>\\n          </div>  \\n        </mat-tab>\\n      </mat-tab-group>\\n    </mat-card-content>    \\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Notif } from '../../../Classes/Notif';\nimport { Stat } from '../../../Classes/Stat';\n\n@Component({\n  selector: 'app-manager-home',\n  templateUrl: './manager-home.component.html',\n  styleUrls: ['./manager-home.component.css']\n})\nexport class ManagerHomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".operation-card{\\r\\n    background: white;\\r\\n    border-radius: 20px;\\r\\n    width: 25rem;\\r\\n    padding: 2rem 5rem 2rem 5rem;\\r\\n    height: 11rem;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-dialog-title{\\r\\n    position: absolute;\\r\\n    left: -1rem;\\r\\n    top: -2rem;\\r\\n    color: white;\\r\\n    border-radius: 7px;\\r\\n    width: 6rem;\\r\\n    height: 6rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.operation-text{\\r\\n    height: 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.big_icon{\\r\\n    font-size: 4rem;\\r\\n    position: relative;\\r\\n    left: -8px;\\r\\n    top: 8px;\\r\\n}\\r\\n\\r\\n\\r\\n.val1{\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n\\r\\n.val2{\\r\\n    float: right;\\r\\n}\\r\\n\\r\\n\\r\\n.val1 mat-icon, .val2 mat-icon{\\r\\n    vertical-align: bottom;\\r\\n    color: #2BBBAD;\\r\\n}\"","module.exports = \"<div class=\\\"operation-card mat-elevation-z8\\\">\\n  <div mat-dialog-title [ngStyle]=\\\"{backgroundColor : operation.color}\\\">\\n    <mat-card-title>\\n        <mat-icon class=\\\"big_icon\\\">{{operation.icon}}\\n          </mat-icon>\\n      </mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <h5 class=\\\"operation-text\\\">{{operation.text}}</h5>\\n    <mat-divider></mat-divider>\\n    <div>\\n      <span class=\\\"val1\\\"><mat-icon>keyboard_backspace</mat-icon>{{operation.val1}}</span>\\n      <span class=\\\"val2\\\">{{operation.val2}}<mat-icon>trending_flat</mat-icon></span>\\n    </div>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Operation } from '../../../../../Classes/Operation';\n\n@Component({\n  selector: 'app-operation-card',\n  templateUrl: './operation-card.component.html',\n  styleUrls: ['./operation-card.component.css']\n})\nexport class OperationCardComponent implements OnInit {\n  @Input() operation: Operation = new Operation(0,0,'Loading...','','');\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".title{\\r\\n    text-align: left;\\r\\n    margin-bottom: 4rem;\\r\\n    margin-top: 4rem;\\r\\n}\\r\\n\\r\\nmat-icon{\\r\\n    vertical-align: top;\\r\\n    font-size: 30px;\\r\\n    margin-right: 1rem;\\r\\n}\\r\\n\\r\\np{\\r\\n    font-size: 22px;\\r\\n}\"","module.exports = \"<div class=\\\"row title\\\">\\n  <p><mat-icon>exit_to_app</mat-icon>Extern-Tharwa</p>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of extern_tharwa\\\">\\n    <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n  </div>\\n</div>\\n\\n<div class=\\\"row title\\\">\\n  <p><mat-icon>cached</mat-icon>Current-Saving</p>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of current_saving\\\">\\n    <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n  </div>\\n</div>\\n\\n<div class=\\\"row title\\\">\\n  <p><mat-icon>attach_money</mat-icon>Current-Dollar Currency</p>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of current_dollar\\\">\\n    <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n  </div>\\n</div>\\n\\n<div class=\\\"row title\\\">\\n    <p><mat-icon>euro_symbol</mat-icon>Current-Euro Currency</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of current_euro\\\">\\n      <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n    </div>\\n  </div>\\n\\n<div class=\\\"row title\\\">\\n  <p><mat-icon>lock</mat-icon>Account Lock-Unlock</p>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of lock_unlock\\\">\\n    <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n  </div>\\n</div>\\n\\n<div class=\\\"row title\\\">\\n  <p><mat-icon>slow_motion_video</mat-icon>New Accounts Requests</p>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of new_accounts\\\">\\n    <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n  </div>\\n</div>\\n\\n<div class=\\\"row title\\\">\\n    <p><mat-icon>check</mat-icon>Validation/Rejection of Requests</p>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\" *ngFor=\\\"let operation of validate_reject\\\">\\n      <app-operation-card [operation]=\\\"operation\\\"></app-operation-card>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { Stat } from '../../../../Classes/Stat';\nimport { Operation } from '../../../../Classes/Operation';\n\n@Component({\n  selector: 'app-operations',\n  templateUrl: './operations.component.html',\n  styleUrls: ['./operations.component.css']\n})\nexport class OperationsComponent implements OnInit {\n  public extern_tharwa: Operation[] = [\n    new Operation(4000, 4000, 'Transfer per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'transfer per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Transfer per Year', '#33b5e5', 'timeline')\n  ];\n\n  public current_saving: Operation[] = [\n    new Operation(4000, 4000, 'Transfer per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'transfer per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Transfer per Year', '#33b5e5', 'timeline')\n  ];\n\n  public current_dollar: Operation[] = [\n    new Operation(4000, 4000, 'Transfer per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'transfer per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Transfer per Year', '#33b5e5', 'timeline')\n  ];\n\n  public current_euro: Operation[] = [\n    new Operation(4000, 4000, 'Transfer per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'transfer per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Transfer per Year', '#33b5e5', 'timeline')\n  ];\n\n  public lock_unlock: Operation[] = [\n    new Operation(4000, 4000, 'Request per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'Request per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Request per Year', '#33b5e5', 'timeline')\n  ];\n\n  public new_accounts: Operation[] = [\n    new Operation(4000, 4000, 'Request per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'Request per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Request per Year', '#33b5e5', 'timeline')\n  ];\n\n  public validate_reject: Operation[] = [\n    new Operation(4000, 4000, 'Request per month', '#ff4444', 'today' ),\n    new Operation(12000, 12000, 'Request per quarter', '#ffbb33', 'pie_chart'),\n    new Operation(48000, 48000, 'Request per Year', '#33b5e5', 'timeline')\n  ];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".notif-card{\\r\\n    background: white;\\r\\n    border-radius: 20px;\\r\\n    width: 20rem;\\r\\n    padding: 2rem 2rem 2rem 4rem;\\r\\n    height: 11rem;\\r\\n}\\r\\n\\r\\n\\r\\n.mat-dialog-title{\\r\\n    position: absolute;\\r\\n    left: -1rem;\\r\\n    top: -2rem;\\r\\n    color: white;\\r\\n    border-radius: 7px;\\r\\n    width: 6rem;\\r\\n    height: 6rem;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.stat-text{\\r\\n    height: 3rem;\\r\\n}\\r\\n\\r\\n\\r\\nmat-icon{\\r\\n    font-size: 4rem;\\r\\n    position: relative;\\r\\n    left: -8px;\\r\\n    top: 8px;\\r\\n}\"","module.exports = \"<div class=\\\"notif-card mat-elevation-z8\\\">\\n  <div mat-dialog-title [ngStyle]=\\\"{backgroundColor : stat.color}\\\">\\n    <mat-card-title>\\n        <mat-icon>{{stat.icon}}\\n          </mat-icon>\\n      </mat-card-title>\\n  </div>\\n  <mat-card-content>\\n    <h5 class=\\\"stat-text\\\">{{stat.text}}</h5>\\n    <mat-divider></mat-divider>\\n    <h4>{{stat.amount}} DA</h4>\\n  </mat-card-content>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Stat } from '../../../../../Classes/Stat';\n\n@Component({\n  selector: 'app-manager-notif',\n  templateUrl: './manager-notif.component.html',\n  styleUrls: ['./manager-notif.component.css']\n})\nexport class ManagerNotifComponent implements OnInit {\n  @Input() stat: Stat = new Stat(0, 'Commission today', 'red', 'icon');\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".week-card{\\r\\n    background: white;\\r\\n    border-radius: 20px;\\r\\n    padding: 2rem 2rem 2rem 4rem;\\r\\n}\\r\\n\\r\\n\\r\\n.title{\\r\\n    position: absolute;\\r\\n    color: white;\\r\\n    border-radius: 7px;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n\\r\\n.week-text{\\r\\n    height: 3rem;\\r\\n}\\r\\n\\r\\n\\r\\n.charts-line{\\r\\n    margin-top: 2rem;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\" *ngFor=\\\"let stat of stats\\\">\\n    <app-manager-notif [stat]=\\\"stat\\\"></app-manager-notif>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"row charts-line\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"week-card mat-elevation-z8\\\">\\n            <canvas id=\\\"week\\\"></canvas>\\n            <h4>Commissions per week</h4>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"week-card mat-elevation-z8\\\">\\n            <canvas id=\\\"month\\\"></canvas>\\n            <h4>Commissions per month</h4>\\n        </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row charts-line\\\">\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"week-card mat-elevation-z8\\\">\\n              <canvas id=\\\"year\\\"></canvas>\\n              <h4>Commissions per year</h4>\\n          </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n          <div class=\\\"week-card mat-elevation-z8\\\">\\n              <canvas id=\\\"quarter\\\"></canvas>\\n              <h4>Commissions per quarter</h4>\\n          </div>\\n      </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Stat } from '../../../../Classes/Stat';\nimport { Chart } from 'chart.js';\n\n@Component({\n  selector: 'app-stat-commissions',\n  templateUrl: './stat-commissions.component.html',\n  styleUrls: ['./stat-commissions.component.css']\n})\nexport class StatCommissionsComponent implements OnInit {\n  public stats: Stat[] = [\n    new Stat(4000, 'Commmissions today', '#ff4444', 'today' ),\n    new Stat(4000, 'Commmissions this month', '#ffbb33', 'date_range'),\n    new Stat(4000, 'Commmissions this quarter', '#2BBBAD', 'pie_chart'),\n    new Stat(4000, 'Commmissions this year', '#33b5e5', 'timeline')\n  ]\n\n  public chart = [];\n  @ViewChild('canvas') canvas;\n  \n  constructor(\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnInit() {\n    this.showWeekChart();\n    this.showMonthChart();\n    this.showYearChart();\n    this.showQuarterChart();\n  }\n\n\n  public showWeekChart(): void{\n    const labels = ['dim', 'lun','mar','mer','jeu','ven','sam'];\n    const data= [2000, 4000, 6000, 8000, 100000, 4000, 3000];\n    let week = this.elementRef.nativeElement.querySelector('#week');\n    this.chart = new Chart(week, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          { \n            data: data,\n            borderColor: \"#ff4444\",\n            backgroundColor: \"#ffffff\",\n            fill: false\n          }\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }],\n        }\n      }\n    });\n  }\n\n  public showMonthChart(): void{\n    const labels = ['jan', 'feb','mar','avril','mai','juin','juillet','aout', 'sept', 'oct', 'nov','dec'];\n    const data= [2000, 4000, 6000, 8000, 100000, 4000, 3000, 2000, 4000, 6000, 8000, 100000];\n    let month = this.elementRef.nativeElement.querySelector('#month');\n    this.chart = new Chart(month, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          { \n            data: data,\n            borderColor: \"#ffbb33\",\n            backgroundColor: \"#ffffff\",\n            fill: false\n          }\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true\n          }],\n        }\n      }\n    });\n  }\n\n  public showYearChart(): void{\n    const labels = ['2017','2018'];\n    const data= [2000, 4000];\n    let year = this.elementRef.nativeElement.querySelector('#year');\n    this.chart = new Chart(year, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          { \n            data: data,\n            borderColor: \"#2BBBAD\",\n            backgroundColor: \"#3cba9f\",\n            fill: true\n          }\n        ]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            display: true\n          }],\n          yAxes: [{\n            display: true,\n            ticks: {\n              beginAtZero: true\n            }\n          }],\n        }\n      }\n    });\n  }\n\n  public showQuarterChart(): void{\n    const labels = ['Q1','Q2','Q3','Q4'];\n    const data= [2000, 4000,10000, 1000];\n    let quarter = this.elementRef.nativeElement.querySelector('#quarter');\n    this.chart = new Chart(quarter, {\n      type: 'doughnut',\n      data: {\n        labels: labels,\n        datasets: [\n          { \n            data: data,\n            borderColor: '#fff',\n            backgroundColor: [\n              '#ff4444',\n              '#ffbb33',\n              '#2BBBAD',\n              '#33b5e5'\n              ],\n            fill: true\n          }\n        ]\n      },\n      options: {\n        legend: {\n          display: true\n        },\n        scales: {\n          xAxes: [{\n            display: false\n          }],\n          yAxes: [{\n            display: false\n          }],\n        }\n      }\n    });\n  }\n}\n","module.exports = \".navbar-header-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n  }\\r\\n  \\r\\n  .devise-is-mobile .navbar-toolbar {\\r\\n    position: fixed;\\r\\n    /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n    z-index: 2;\\r\\n  }\\r\\n  \\r\\n  h1.bank-name {\\r\\n    margin-left: 8px;\\r\\n  }\\r\\n  \\r\\n  .navbar-sidenav-container {\\r\\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .navbar-sidenav-container mat-sidenav{\\r\\n    width: 200px;\\r\\n    background: rgba(0,0,0, 0.1);\\r\\n    overflow: hidden;\\r\\n\\r\\n/*    background-size: cover;*/\\r\\n\\r\\n  }\\r\\n  \\r\\n  .navbar-sidenav-container mat-sidenav div{\\r\\n    background: rgba(255,255,255,1);\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    padding-top: 5rem;\\r\\n  }\\r\\n  \\r\\n  .devise-is-mobile .navbar-sidenav-container {\\r\\n    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n       `<body>` to be our scrolling element for mobile layouts. */\\r\\n    flex: 1 0 auto;\\r\\n  }\\r\\n  \\r\\n  .user-name mat-chip{\\r\\n    padding-left: 20px;\\r\\n  }\\r\\n  \\r\\n  .profile-img{\\r\\n    width: 45px;\\r\\n    height: 45px;\\r\\n    border-radius: 100%;\\r\\n    position: relative;\\r\\n    left: 17px;\\r\\n  }\\r\\n  \\r\\n  .logo-img{\\r\\n    width: 134px;\\r\\n  }\\r\\n  \\r\\n  .navbar_button{\\r\\n    width: 100%;\\r\\n    padding: 4px;\\r\\n  }\\r\\n  \\r\\n  .icon_menu{\\r\\n    position: absolute;\\r\\n    right: 1rem;\\r\\n    top: 1rem;\\r\\n  }\\r\\n  \\r\\n  .mat-button, .mat-raised-button{\\r\\n    text-align: left;\\r\\n    padding-left: 3rem;\\r\\n    font-size: 0.8em;\\r\\n  }\\r\\n  \\r\\n  .fill-space{\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n  \\r\\n  mat-sidenav-content{\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  .item_container, .mat-list-item-content{\\r\\n    padding: 0!important;\\r\\n  }\\r\\n  \\r\\n  .language{\\r\\n    background: #008080;\\r\\n    width: 11rem;\\r\\n    height: 4rem;\\r\\n    border-radius: 25px;\\r\\n  }\"","module.exports = \"<div class=\\\"navbar-header-container\\\" [class.devise-is-mobile]=\\\"mobileQuery.matches\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"navbar-toolbar\\\">\\r\\n        <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\r\\n        <img src=\\\"assets/img/logo_navbar.png\\\" class=\\\"logo-img\\\">\\r\\n        <span class=\\\"fill-space\\\"></span>\\r\\n        <button mat-icon-button class=\\\"language\\\" (click)=\\\"switchLanguage()\\\">\\r\\n            <mat-icon>language</mat-icon>\\r\\n            {{language}}\\r\\n        </button>\\r\\n        <img src=\\\"{{manager.photo}}\\\" class=\\\"profile-img\\\" onerror=\\\"this.src='assets/img/default.png'\\\">\\r\\n        <mat-chip-list class=\\\"user-name\\\">\\r\\n            <mat-chip>{{manager.name}} {{manager.firstname}}</mat-chip>\\r\\n        </mat-chip-list>        \\r\\n    </mat-toolbar>\\r\\n    \\r\\n    <mat-sidenav-container class=\\\"navbar-sidenav-container\\\"\\r\\n                            [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\r\\n        <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\r\\n                    [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\"\\r\\n                    opened = \\\"true\\\"\\r\\n                    >\\r\\n        <div>\\r\\n            <mat-nav-list>\\r\\n                <div *ngFor= \\\"let item of select\\\" class=\\\"item_container\\\">\\r\\n                    <a mat-list-item routerLink={{item.route}}>\\r\\n                        <button mat-raised-button \\r\\n                            [color]=\\\"item.selected ? 'primary' : '' \\\" \\r\\n                            class=\\\"navbar_button\\\" \\r\\n                            (click)=\\\"selected(item.id)\\\">\\r\\n                        <mat-icon class=\\\"icon_menu\\\" [color]=\\\"item.selected ? '' : 'primary' \\\">{{item.icon}}</mat-icon>\\r\\n                        {{item.name}}\\r\\n                        </button>\\r\\n                    </a>\\r\\n                </div>\\r\\n            </mat-nav-list>\\r\\n        </div>\\r\\n        </mat-sidenav>\\r\\n        <mat-sidenav-content>\\r\\n            <router-outlet></router-outlet>\\r\\n        </mat-sidenav-content>\\r\\n    </mat-sidenav-container>\\r\\n</div>\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { ErrorHandling } from '../../Classes/ErrorHandling';\nimport { ManagerService } from '../../Services/manager.service';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MatSnackBar, MatDialog, MatDialogRef } from '@angular/material';\nimport { OnInit } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { User } from '../../Classes/user';\nimport { RequestHandlerService } from '../../Services/request-handler.service';\nimport { LogoutService } from '../../Services/logout.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'app-gestionnaire',\n  templateUrl: './manager.component.html',\n  styleUrls: ['./manager.component.css'],\n  providers : [ManagerService, LogoutService]\n})\nexport class ManagerComponent implements OnInit, OnDestroy  {\n\n  public mobileQuery: MediaQueryList;\n  public language = \"Français\";\n  public select = [\n    {id: 1, name: 'Dashboard', selected: true, route: 'dashboard', icon : 'dashboard'},\n    {id: 2, name: 'Commission', selected: false, route: 'commissions', icon : 'monetization_on'},\n    {id: 3, name: 'Banks', selected: false, route: 'banks', icon : 'account_balance'},\n    {id: 4, name: 'Bankers', selected: false, route: 'bankers', icon : 'supervisor_account'},\n    {id: 5, name: 'Profile', selected: false, route: 'profile', icon : 'perm_identity'},\n    {id: 6, name: 'Logout', selected: false, route: 'dashboard', icon : 'highlight_off'}];\n  private _mobileQueryListener: () => void;\n\n  public manager: User = new User(0, '','', '');\n  public path = '';\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public dialog: MatDialog,\n    public errorMsg: MatSnackBar,\n    private route: ActivatedRoute,\n    private managerService: ManagerService,\n    public logoutService: LogoutService,\n    public apiService: RequestHandlerService,\n    private redirect: Router,\n    public translate: TranslateService,\n  ) {\n      this.path = this.apiService.imgUrl;\n    /*\n    **we detect the screen size changes : if size > 600px than mobileQuery.matchs = true,\n    **else mobileQuery.matchs = false\n    */\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n    this.initNavItems();\n  }\n\n  ngOnInit(): void {\n    /** retrieve the manager id from the route**/\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.getManagerInfo(id);\n  }\n\n  getManagerInfo(id) {\n     /** send the request GET /manager/{id} to get the manager's info **/\n     this.managerService.getManager(id).subscribe(\n      data => {\n        this.manager = data;\n        this.manager.photo = this.apiService.tharwaURL + this.path + this.manager.photo;\n      },\n      error => {\n        /** show error**/\n        const msg = new ErrorHandling(this.errorMsg);\n        msg.handleError(error);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    /** once the component is destroyed, remove the listner**/\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  selected(id) {\n    for (let i = 0; i < this.select.length; i++) {\n      if (this.select[i].id == id) {\n        this.select[i].selected = true;\n      } else {\n        this.select[i].selected = false;\n      }\n    }\n    if (id == 6) {\n      this.showLogoutDiag();\n    }\n  }\n\n  public showLogoutDiag() {\n    const dialogRef = this.dialog.open(LogoutComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true\n    });\n\n    /** when the dialog is closed show the user a dialog where he can enter the verification code**/\n    dialogRef.afterClosed().subscribe(result => {\n      if (result == 1) {\n        this.logoutService.logout().subscribe(\n          data => {\n            this.redirect.navigate(['/home']);\n            this.apiService.destroyToken();\n          },\n          error => {\n            const msg = new ErrorHandling(this.errorMsg);\n            msg.handleError(error);\n          }\n        );\n      }\n    });\n  }\n\n  public initNavItems(): void{\n    this.translate.get(\"MANAGERNAV.DASHBOARD\").subscribe(\n      data => this.select[0].name = data\n    );\n    this.translate.get(\"MANAGERNAV.COMMISSION\").subscribe(\n      data => this.select[1].name = data\n    );\n    this.translate.get(\"MANAGERNAV.BANKS\").subscribe(\n      data => this.select[2].name = data\n    );\n    this.translate.get(\"MANAGERNAV.BANKERS\").subscribe(\n      data => this.select[3].name = data\n    );\n    this.translate.get(\"MANAGERNAV.PROFILE\").subscribe(\n      data => this.select[4].name = data\n    );\n    this.translate.get(\"MANAGERNAV.LOGOUT\").subscribe(\n      data => this.select[5].name = data\n    );\n  }\n\n  public switchLanguage(): void{\n    if (this.language == 'Français'){\n      this.translate.use('en');\n      this.language = 'English';\n    } else {\n      this.translate.use('fr');\n      this.language = 'Français';\n    }\n    this.initNavItems();\n  }\n}\n\n\n/** dynamic component : logout dialog **/\n@Component({\n  selector: 'app-logout-dialog',\n  templateUrl: 'logout.html',\n  styleUrls: ['logout.css']\n})\n\nexport class LogoutComponent {\n  constructor(\n    public dialogRef: MatDialogRef<LogoutComponent>\n  ) { }\n\n  logout() {\n    this.dialogRef.close(true);\n  }\n}\n","module.exports = \"mat-form-field{\\r\\n    display: block;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\n#editProfile{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nmat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n#profile-img{\\r\\n  border: 1px dotted teal;\\r\\n  border-radius: 50%;\\r\\n  width: 10rem;\\r\\n  height: 10rem;\\r\\n  transition:all .2s ease-in-out;\\r\\n  -webkit-transition:all .2s ease-in-out;\\r\\n  -moz-transition:all .2s ease-in-out;\\r\\n  -o-transition:all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n#profile-img:hover{\\r\\n    border-radius: 0;\\r\\n}\\r\\n\\r\\n#inputImage{\\r\\n    position: absolute;\\r\\n    opacity: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<form id=\\\"editProfile\\\" #editProfileForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1 [innerHTML]=\\\"'PROFILE.DIALOGTITLE' | translate\\\" mat-dialog-title></h1>\\r\\n\\r\\n    <mat-dialog-content>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"imgBtn\\\">\\r\\n                        <input (change)=\\\"addImg($event)\\\"\\r\\n                            accept=\\\"image/*\\\"\\r\\n                            type=\\\"file\\\"\\r\\n                            id=\\\"inputImage\\\"\\r\\n                            name=\\\"imagefile\\\">\\r\\n                        <img [src]=\\\"filePreviewPath\\\" id=\\\"profile-img\\\" onerror=\\\"this.src='assets/img/default.png'\\\">\\r\\n                    </div>\\r\\n                    <p [innerHTML]=\\\"'PROFILE.CHANGEPHOTO' | translate\\\"></p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n                <mat-form-field class=\\\"name-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        #name\\r\\n                        [formControl]=\\\"nameControl\\\"\\r\\n                        [errorStateMatcher]=\\\"nameMatcher\\\"\\r\\n                        placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\r\\n                        [value]=\\\"manager.name\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.NAMEHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                      [innerHTML]=\\\"'FORMS.NAMEUNVALID' | translate\\\"\\r\\n                      *ngIf=\\\"nameControl.hasError('pattern') && !nameControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.NAMEREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"nameControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"firstname-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        #firstname\\r\\n                        [formControl]=\\\"firstnameControl\\\"\\r\\n                        [errorStateMatcher]=\\\"firstnameMatcher\\\"\\r\\n                        placeholder=\\\"{{ 'FORMS.FIRSTNAMEPLACEHOLDER' | translate}}\\\"\\r\\n                        [value]=\\\"manager.firstname\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.FIRSTNAMEHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                      [innerHTML]=\\\"'FORMS.FIRSTNAMEUNVALID' | translate\\\"\\r\\n                      *ngIf=\\\"firstnameControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.FIRSTNAMEREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"firstnameControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"email-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\r\\n                        [formControl]=\\\"emailControl\\\"\\r\\n                        [errorStateMatcher]=\\\"emailMatcher\\\"\\r\\n                        #mail\\r\\n                        [value]=\\\"manager.email\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.EMAILHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.EMAILUNVALID' | translate\\\"\\r\\n                        *ngIf=\\\"emailControl.hasError('email') && emailControl.hasError('pattern') && !emailControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.EMAILREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"emailControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">email</mat-icon>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"phone-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"{{ 'FORMS.PHONEPLACEHOLDER' | translate}}\\\"\\r\\n                        [formControl]=\\\"phoneControl\\\"\\r\\n                        [errorStateMatcher]=\\\"phoneMatcher\\\"\\r\\n                        #phone\\r\\n                        [value]=\\\"manager.phone_number\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.PHONEHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                      [innerHTML]=\\\"'FORMS.PHONEUNVALID' | translate\\\"\\r\\n                      *ngIf=\\\"phoneControl.hasError('pattern') && !phoneControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.PHONEREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"phoneControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"address-field\\\">\\r\\n                    <input\\r\\n                        matInput\\r\\n                        placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\r\\n                        [formControl]=\\\"addressControl\\\"\\r\\n                        [errorStateMatcher]=\\\"addressMatcher\\\"\\r\\n                        #address\\r\\n                        [value]=\\\"manager.address\\\"\\r\\n                        >\\r\\n                    <mat-hint [innerHTML]=\\\"'FORMS.ADDRESSHINT' | translate\\\"></mat-hint>\\r\\n                    <mat-error\\r\\n                        [innerHTML]=\\\"'FORMS.ADDRESSREQUIRED' | translate\\\"\\r\\n                        *ngIf=\\\"addressControl.hasError('required')\\\">\\r\\n                    </mat-error>\\r\\n                    <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\r\\n                </mat-form-field>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-dialog-content>\\r\\n    <mat-dialog-actions>\\r\\n        <div class=\\\"w-10\\\">\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                mat-button\\r\\n                mat-dialog-close\\r\\n                class=\\\"floatLeft\\\"\\r\\n                ></button>\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CONTINUEBTN' | translate\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"accent\\\"\\r\\n                class=\\\"textWhite floatRight\\\"\\r\\n                type=\\\"submit\\\"\\r\\n                ></button>\\r\\n        </div>\\r\\n    </mat-dialog-actions>\\r\\n</form>\\r\\n\"","module.exports = \".profile-card{\\r\\n    width: 90%;\\r\\n    margin-left: 5%;\\r\\n    margin-top: 10rem;\\r\\n}\\r\\n\\r\\n#profile-img{\\r\\n    position: absolute;\\r\\n    z-index: 10;\\r\\n    border-radius: 50%;\\r\\n    width: 100px;\\r\\n    top: 5rem;\\r\\n    left: 18%;\\r\\n}\\r\\n\\r\\nmat-card-title{\\r\\n    background: teal;\\r\\n    position: absolute;\\r\\n    width: 60%;\\r\\n    left: 20%;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    padding: 1rem;\\r\\n    top: 8rem;\\r\\n}\\r\\n\\r\\n.profile-container{\\r\\n    background: white;\\r\\n    padding: 10rem;\\r\\n}\\r\\n\\r\\n.name-field,\\r\\n.email-field{\\r\\n    width: 45%;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.address-field,\\r\\n.phone-field{\\r\\n    width: 45%;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.phone-field{\\r\\n    margin-right: 9%;\\r\\n}\\r\\n\\r\\n.name-field{\\r\\n    margin-right: 9%;\\r\\n}\\r\\n\\r\\n.edit-profile-btn{\\r\\n    float: right;\\r\\n    margin-right: 1rem;\\r\\n}\"","module.exports = \"<mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\n<div class=\\\"profile-card\\\">\\n  <form #profileForm=\\\"ngForm\\\">\\n  <div mat-dialog-title>\\n    <mat-card-title [innerHTML]=\\\"'PROFILE.TITLE' | translate\\\"></mat-card-title>\\n    <img src=\\\"{{manager.photo}}\\\" id=\\\"profile-img\\\" onerror=\\\"this.src='assets/img/default.png'\\\">\\n  </div>\\n  <mat-card-content>\\n    <div class=\\\"profile-container mat-elevation-z8\\\">\\n\\n      <mat-form-field class=\\\"name-field\\\">\\n          <input\\n              matInput\\n              #name\\n              placeholder=\\\"{{ 'FORMS.NAMEPLACEHOLDER' | translate}}\\\"\\n              [value]=\\\"manager.name\\\"\\n              [disabled]=\\\"disable\\\"\\n              >\\n          <mat-icon matSuffix color=\\\"primary\\\">text_format</mat-icon>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"email-field\\\">\\n          <input\\n              matInput\\n              placeholder=\\\"{{ 'FORMS.EMAILPLACEHOLDER' | translate}}\\\"\\n              #email\\n              [value]=\\\"manager.email\\\"\\n              [disabled]=\\\"disable\\\"\\n              >\\n          <mat-icon matSuffix color=\\\"primary\\\">email</mat-icon>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"phone-field\\\">\\n          <input\\n              matInput\\n              placeholder=\\\"{{ 'FORMS.PHONEPLACEHOLDER' | translate}}\\\"\\n              #phone\\n              [value]=\\\"manager.phone_number\\\"\\n              [disabled]=\\\"disable\\\"\\n              >\\n          <mat-icon matSuffix color=\\\"primary\\\">phone</mat-icon>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"address-field\\\">\\n          <input\\n              matInput\\n              placeholder=\\\"{{ 'FORMS.ADDRESSPLACEHOLDER' | translate}}\\\"\\n              #address\\n              [value]=\\\"manager.address\\\"\\n              [disabled]=\\\"disable\\\"\\n              >\\n          <mat-icon matSuffix color=\\\"primary\\\">edit_location</mat-icon>\\n      </mat-form-field>\\n      <button\\n            [innerHTML]=\\\"'GENERAL.CHANGEPDWBTN' | translate\\\"\\n            mat-raised-button\\n            color = 'accent'\\n            (click) = 'changePasswordDialog()'\\n            class=\\\"edit-profile-btn\\\">\\n            <mat-icon>create</mat-icon>\\n        </button>\\n      <button\\n        [innerHTML]=\\\"'GENERAL.EDITBTN' | translate\\\"\\n        mat-raised-button\\n        color='accent'\\n        (click) = 'editProfileDialog()'\\n        class=\\\"edit-profile-btn\\\">\\n          <mat-icon>create</mat-icon>\\n      </button>\\n    </div>\\n  </mat-card-content>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Manager } from '../../../Classes/Manager';\nimport { FormControl, Validators} from '@angular/forms';\nimport { InputValidation } from '../../../Classes/InputValidation';\nimport { ActivatedRoute } from '@angular/router';\nimport { ManagerProfileService } from '../../../Services/manager-profile.service';\nimport { MatDialog, MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ErrorHandling } from '../../../Classes/ErrorHandling';\nimport { EditProfileService } from '../../../Services/edit-profile.service';\nimport { ChangePasswordService } from '../../../Services/change-password.service';\nimport { RequestHandlerService } from '../../../Services/request-handler.service';\n\n\n@Component({\n  selector: 'app-manager-profile',\n  templateUrl: './managerProfile.component.html',\n  styleUrls: ['./managerProfile.component.css'],\n  providers: [ManagerProfileService, EditProfileService, ChangePasswordService]\n})\nexport class ManagerProfileComponent implements OnInit {\n  public loading = false;\n  public disable = true;\n  public manager: Manager=new Manager(1,'','','','','','');\n  public path = \"\";\n  constructor(\n    public errorMsg: MatSnackBar,\n    private route: ActivatedRoute,\n    private profile: ManagerProfileService,\n    private pwdService: ChangePasswordService,\n    public dialog: MatDialog,\n    public editProfileService: EditProfileService,\n    public api: RequestHandlerService\n  ) { \n    this.path = this.api.tharwaURL + this.api.imgUrl;\n  }\n\n  public ngOnInit(): void{\n    const id = +this.route.parent.snapshot.paramMap.get('id');\n    this.initProfile(id);\n  }\n\n  public initProfile(id): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.profile.getManagerProfile(id).subscribe(\n      data => {\n        this.manager = data;\n        this.manager.photo = this.api.tharwaURL + this.path + this.manager.photo;\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      }\n    );\n  }\n\n  public editProfileDialog(): void{\n    const dialogRef = this.dialog.open(EditManagerProfileComponent, {\n      width: '50%',\n      height: 'auto',\n      disableClose: true,\n      data : this.manager\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result!=-1) {\n        this.editProfile(result)\n      }\n    });\n  }\n\n  public editProfile(manager): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.editProfileService.editManger(manager, this.manager.id).subscribe(\n      data => {\n        if (manager.photo) {\n          this.editProfileService.postImage(manager.photo, this.manager.id).subscribe(\n            response => {\n              this.initProfile(this.manager.id);\n              this.loading = false;\n              msg.showErrorMsg('Photo has successfully updated', 200)\n            },\n            error => {\n              msg.handleError(error);\n              this.loading = false;\n            }\n          );\n          this.loading = false;\n          this.manager = manager;\n          this.manager.photo = this.api.tharwaURL + this.path + this.manager.photo;\n          msg.showErrorMsg('Profile has successfully updated', 200)\n        }\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      })\n  }\n\n  public changePasswordDialog(): void{\n    const dialogRef = this.dialog.open(ChangeManagerPasswordComponent, {\n      width: '40rem',\n      height: 'auto',\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n        if (result!=-1) {\n          this.changePassword(result.oldPassword, result.newPassword);\n        }\n    });\n  }\n\n  public changePassword(oldPassword, newPassword): void{\n    const msg = new ErrorHandling(this.errorMsg);\n    this.loading = true;\n    this.pwdService.changePassword(oldPassword, newPassword).subscribe(\n      data => {\n        msg.showErrorMsg('Password has successfully changed', 200)\n        this.loading = false;\n      },\n      error => {\n        msg.handleError(error);\n        this.loading = false;\n      });\n  }\n}\n\n/** dynamic component : edit manager form dialog **/\n\n@Component({\n  selector: 'app-edit-manager-profile',\n  templateUrl: 'editManagerProfile.html',\n  styleUrls: ['editManagerProfile.css']\n})\n\n\nexport class EditManagerProfileComponent implements  OnInit {\n  public hide = true;\n  imagefile:  File;\n  filePreviewPath = '';\n  nameControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z][a-zA-Z ]+/)\n  ]);\n  nameMatcher = new InputValidation();\n  firstnameControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[a-zA-Z][a-zA-Z ]+/)\n  ]);\n  firstnameMatcher = new InputValidation();\n\n  emailControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n    Validators.pattern(/^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/)\n  ]);\n  emailMatcher = new InputValidation();\n\n  phoneControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/[0-9]*/),\n    Validators.minLength(10),\n    Validators.maxLength(10)\n  ]);\n  phoneMatcher = new InputValidation();\n\n  addressControl = new FormControl('', [\n    Validators.required\n  ]);\n  addressMatcher = new InputValidation();\n\n  constructor(\n    public errorMsg: MatSnackBar,\n    public dialogRef: MatDialogRef<EditManagerProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public manager: Manager\n  ) {\n    this.filePreviewPath = this.manager.photo;\n  }\n\n  onSubmit() {\n    const manager = {\n      id: this.manager.id,\n      name : this.nameControl.value,\n      email: this.emailControl.value,\n      phone_number: this.phoneControl.value,\n      address : this.addressControl.value,\n      photo: this.imagefile\n    };\n    if (this.nameControl.pristine) {\n      manager.name = this.manager.name;\n    }\n    if (this.emailControl.pristine) {\n      manager.email = this.manager.email;\n    }\n    if (this.phoneControl.pristine) {\n      manager.phone_number = this.manager.phone_number\n      ;\n    }\n    if (this.addressControl.pristine) {\n      manager.address = this.manager.address;\n    }\n    this.dialogRef.close(manager);\n  }\n\n  addImg(event: any) {\n    this.imagefile = event.target.files.item(0);\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (event: any) => {\n          this.filePreviewPath = event.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n  }\n  }\n\n\n  isImage(file: File): boolean {\n    return /^image\\//.test(file.type);\n  }\n\n  removeImage(event: any) {\n    this.imagefile = null;\n  }\n\n  formatSize(bytes) {\n    if (bytes === 0) {\n      return '0 B';\n    }\n    const k = 1000,\n      dm = 3,\n      sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n      i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n\n  ngOnInit() {}\n}\n\n\n/** dynamic component : change password dialog **/\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: 'passwordManager.html',\n  styleUrls: ['passwordManager.css']\n})\n\n\nexport class ChangeManagerPasswordComponent {\n  public hideold = true;\n  public hidenew = true;\n  public hideconf = true;\n\n  oldPasswordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n  matcherOldPassword = new InputValidation();\n\n  confPasswordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n  matcherConfPassword = new InputValidation();\n\n  newPasswordFormControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(8),\n    Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).{8,20}$/)\n  ]);\n  matcherNewPassword = new InputValidation();\n  constructor(\n    public dialogRef: MatDialogRef<ChangeManagerPasswordComponent>,\n    public errorMsg: MatSnackBar,\n  ){}\n\n  public showNewPassword(): void {\n    this.hidenew = !this.hidenew;\n  }\n\n  public showOldPassword(): void {\n    this.hideold = !this.hideold;\n  }\n  \n  public showConfPassword(): void {\n    this.hideconf = !this.hideconf;\n  }\n\n  public onClose(): void{\n    this.dialogRef.close(-1);\n  }\n\n  public validate(): void{\n    if(this.newPasswordFormControl.value == this.confPasswordFormControl.value){\n      const response = {\n        oldPassword: this.oldPasswordFormControl.value,\n        newPassword: this.newPasswordFormControl.value\n      }\n      this.dialogRef.close(response);\n    } else {\n      const msg = new ErrorHandling(this.errorMsg);\n      msg.showErrorMsg('Passwords dont match', '=/=');\n    }\n  }\n}","module.exports = \"mat-form-field{\\r\\n    display: block;\\r\\n    width: 80%;\\r\\n    margin-left: 10%;\\r\\n}\\r\\n\\r\\nmat-dialog-content{\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mat-dialog-title{\\r\\n    text-align: center;\\r\\n    color: teal;\\r\\n    border-bottom: 1px solid;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    margin-bottom: 1rem;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"password-card\\\">\\r\\n    <form #passwordForm=\\\"ngForm\\\">\\r\\n    <div mat-dialog-title>\\r\\n      <mat-card-title [innerHTML]=\\\"'PROFILE.PDWTITLE' | translate\\\"></mat-card-title>\\r\\n    </div>\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"password-container\\\">\\r\\n        <mat-form-field class=\\\"old-password-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #password\\r\\n                placeholder=\\\"{{ 'FORMS.OLDPASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"oldPasswordFormControl\\\"\\r\\n                [errorStateMatcher]=\\\"matcherOldPassword\\\"\\r\\n                [type]=\\\"hideold ? 'password' : 'text'\\\"\\r\\n                autocomplete=\\\"\\\"\\r\\n                >\\r\\n            <mat-icon matSuffix (click)=\\\"showOldPassword()\\\">{{hideold ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.OLDPASSWORDHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n                *ngIf=\\\"!oldPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.OLDPASSWORDREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"oldPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"new-password-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #newpassword\\r\\n                placeholder=\\\"{{ 'FORMS.NEWPASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"newPasswordFormControl\\\"\\r\\n                [errorStateMatcher]=\\\"matcherNewPassword\\\"\\r\\n                [type]=\\\"hidenew ? 'password' : 'text'\\\"\\r\\n                autocomplete=\\\"\\\"\\r\\n                >\\r\\n            <mat-icon matSuffix (click)=\\\"showNewPassword()\\\">{{hidenew ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.NEWPASSWORDHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n                *ngIf=\\\"!newPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.NEWPASSWORDREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"newPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field class=\\\"confirmation-field\\\">\\r\\n            <input\\r\\n                matInput\\r\\n                #confirmation\\r\\n                placeholder=\\\"{{ 'FORMS.CONFPASSWORDPLACEHOLDER' | translate}}\\\"\\r\\n                [formControl]=\\\"confPasswordFormControl\\\"\\r\\n                [errorStateMatcher]=\\\"matcherConfPassword\\\"\\r\\n                [type]=\\\"hideconf ? 'password' : 'text'\\\"\\r\\n                autocomplete=\\\"\\\"\\r\\n                >\\r\\n            <mat-icon matSuffix (click)=\\\"showConfPassword()\\\">{{hideconf ? 'visibility' : 'visibility_off'}}</mat-icon>\\r\\n            <mat-hint [innerHTML]=\\\"'FORMS.CONFPASSWORDHINT' | translate\\\"></mat-hint>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.PASSWORDSHORT' | translate\\\"\\r\\n                *ngIf=\\\"!confPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n            <mat-error\\r\\n                [innerHTML]=\\\"'FORMS.CONFPASSWORDREQUIRED' | translate\\\"\\r\\n                *ngIf=\\\"confPasswordFormControl.hasError('required')\\\">\\r\\n            </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-dialog-actions>\\r\\n        <div class=\\\"w-10\\\">\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.CANCELBTN' | translate\\\"\\r\\n                mat-button\\r\\n                (click) = 'onClose()'\\r\\n                mat-dialog-close>\\r\\n                <mat-icon>create</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button\\r\\n                [innerHTML]=\\\"'GENERAL.VALIDATEBTN' | translate\\\"\\r\\n                mat-raised-button\\r\\n                color = 'primary'\\r\\n                (click) = 'validate()'\\r\\n                class=\\\"floatRight\\\">\\r\\n                <mat-icon>create</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </mat-dialog-actions>\\r\\n    </form>\\r\\n  </div>\"","module.exports = \"\"","module.exports = \"<p>\\n  404 : page-not-found!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}